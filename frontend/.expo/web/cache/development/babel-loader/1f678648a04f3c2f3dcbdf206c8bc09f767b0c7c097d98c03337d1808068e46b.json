{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"testOnly_pressed\", \"hitSlop\", \"pressRetentionOffset\", \"delayHoverIn\", \"onHoverIn\", \"delayHoverOut\", \"onHoverOut\", \"delayLongPress\", \"unstable_pressDelay\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onLongPress\", \"style\", \"children\", \"android_disableSound\", \"android_ripple\", \"disabled\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { GestureObjects as Gesture } from \"../../handlers/gestures/gestureObjects\";\nimport { GestureDetector } from \"../../handlers/gestures/GestureDetector\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport NativeButton from \"../GestureHandlerButton\";\nimport { numberAsInset, gestureToPressableEvent, isTouchWithinInset, gestureTouchToPressableEvent, addInsets } from \"./utils\";\nimport { PressabilityDebugView } from \"../../handlers/PressabilityDebugView\";\nimport { INT32_MAX } from \"../../utils\";\nvar DEFAULT_LONG_PRESS_DURATION = 500;\nvar _worklet_10632780403964_init_data = {\n  code: \"function anonymous(event) {\\n  const {\\n    handlingOnTouchesDown,\\n    pressableRef,\\n    isTouchWithinInset,\\n    normalizedHitSlop,\\n    hasPassedBoundsChecks,\\n    cancelledMidPress,\\n    onEndHandlingTouchesDown,\\n    longPressTimeoutRef,\\n    setTimeout,\\n    activateLongPress,\\n    longPressMinDuration,\\n    unstable_pressDelay,\\n    pressDelayTimeoutRef,\\n    pressInHandler,\\n    gestureTouchToPressableEvent\\n  } = this._closure;\\n  var _pressableRef$current;\\n  handlingOnTouchesDown.current = true;\\n  (_pressableRef$current = pressableRef.current) === null || _pressableRef$current === void 0 ? void 0 : _pressableRef$current.measure(function (_x, _y, width, height) {\\n    var _onEndHandlingTouches;\\n    if (!isTouchWithinInset({\\n      width: width,\\n      height: height\\n    }, normalizedHitSlop, event.changedTouches.at(-1)) || hasPassedBoundsChecks.current || cancelledMidPress.current) {\\n      cancelledMidPress.current = false;\\n      onEndHandlingTouchesDown.current = null;\\n      handlingOnTouchesDown.current = false;\\n      return;\\n    }\\n    hasPassedBoundsChecks.current = true;\\n    if (longPressTimeoutRef.current === null) {\\n      longPressTimeoutRef.current = setTimeout(function () {\\n        return activateLongPress(event);\\n      }, longPressMinDuration);\\n    }\\n    if (unstable_pressDelay) {\\n      pressDelayTimeoutRef.current = setTimeout(function () {\\n        pressInHandler(gestureTouchToPressableEvent(event));\\n      }, unstable_pressDelay);\\n    } else {\\n      pressInHandler(gestureTouchToPressableEvent(event));\\n    }\\n    (_onEndHandlingTouches = onEndHandlingTouchesDown.current) === null || _onEndHandlingTouches === void 0 ? void 0 : _onEndHandlingTouches.call(onEndHandlingTouchesDown);\\n    onEndHandlingTouchesDown.current = null;\\n    handlingOnTouchesDown.current = false;\\n  });\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"event\\\",\\\"handlingOnTouchesDown\\\",\\\"pressableRef\\\",\\\"isTouchWithinInset\\\",\\\"normalizedHitSlop\\\",\\\"hasPassedBoundsChecks\\\",\\\"cancelledMidPress\\\",\\\"onEndHandlingTouchesDown\\\",\\\"longPressTimeoutRef\\\",\\\"setTimeout\\\",\\\"activateLongPress\\\",\\\"longPressMinDuration\\\",\\\"unstable_pressDelay\\\",\\\"pressDelayTimeoutRef\\\",\\\"pressInHandler\\\",\\\"gestureTouchToPressableEvent\\\",\\\"_closure\\\",\\\"_pressableRef$current\\\",\\\"current\\\",\\\"measure\\\",\\\"_x\\\",\\\"_y\\\",\\\"width\\\",\\\"height\\\",\\\"_onEndHandlingTouches\\\",\\\"changedTouches\\\",\\\"at\\\",\\\"call\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAgJ6C,SAAAA,SAASA,CAAAC,KAAA;EAAA;IAAAC,qBAAA;IAAAC,YAAA;IAAAC,kBAAA;IAAAC,iBAAA;IAAAC,qBAAA;IAAAC,iBAAA;IAAAC,wBAAA;IAAAC,mBAAA;IAAAC,UAAA;IAAAC,iBAAA;IAAAC,oBAAA;IAAAC,mBAAA;IAAAC,oBAAA;IAAAC,cAAA;IAAAC;EAAA,SAAAC,QAAA;EAClD,IAAIC,qBAAqB;EAEzBhB,qBAAqB,CAACiB,OAAO,GAAG,IAAI;EACpC,CAACD,qBAAqB,GAAGf,YAAY,CAACgB,OAAO,MAAM,IAAI,IAAID,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACE,OAAO,CAAC,UAACC,EAAE,EAAEC,EAAE,EAAEC,KAAK,EAAEC,MAAM,EAAK;IAC9J,IAAIC,qBAAqB;IAEzB,IAAI,CAACrB,kBAAkB,CAAC;MACtBmB,KAAK,EAALA,KAAK;MACLC,MAAA,EAAAA;IACF,CAAC,EAAEnB,iBAAiB,EAAEJ,KAAK,CAACyB,cAAc,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIrB,qBAAqB,CAACa,OAAO,IAAIZ,iBAAiB,CAACY,OAAO,EAAE;MAChHZ,iBAAiB,CAACY,OAAO,GAAG,KAAK;MACjCX,wBAAwB,CAACW,OAAO,GAAG,IAAI;MACvCjB,qBAAqB,CAACiB,OAAO,GAAG,KAAK;MACrC;IACF;IAEAb,qBAAqB,CAACa,OAAO,GAAG,IAAI;IAEpC,IAAIV,mBAAmB,CAACU,OAAO,KAAK,IAAI,EAAE;MAExCV,mBAAmB,CAACU,OAAO,GAAGT,UAAU,CAAC;QAAA,OAAMC,iBAAiB,CAACV,KAAK,CAAC;MAAA,GAAEW,oBAAoB,CAAC;IAChG;IAEA,IAAIC,mBAAmB,EAAE;MACvBC,oBAAoB,CAACK,OAAO,GAAGT,UAAU,CAAC,YAAM;QAC9CK,cAAc,CAACC,4BAA4B,CAACf,KAAK,CAAC,CAAC;MACrD,CAAC,EAAEY,mBAAmB,CAAC;IACzB,CAAC,MAAM;MACLE,cAAc,CAACC,4BAA4B,CAACf,KAAK,CAAC,CAAC;IACrD;IAEA,CAACwB,qBAAqB,GAAGjB,wBAAwB,CAACW,OAAO,MAAM,IAAI,IAAIM,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACG,IAAI,CAACpB,wBAAwB,CAAC;IACvKA,wBAAwB,CAACW,OAAO,GAAG,IAAI;IACvCjB,qBAAqB,CAACiB,OAAO,GAAG,KAAK;EACvC,CAAC,CAAC;AACJ\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_15239916168259_init_data = {\n  code: \"function anonymous(event) {\\n  const {\\n    handlingOnTouchesDown,\\n    onEndHandlingTouchesDown,\\n    pressOutHandler,\\n    gestureTouchToPressableEvent,\\n    deferredEventPayload,\\n    shouldPreventNativeEffects\\n  } = this._closure;\\n  if (handlingOnTouchesDown.current) {\\n    onEndHandlingTouchesDown.current = function () {\\n      return pressOutHandler(gestureTouchToPressableEvent(event));\\n    };\\n    return;\\n  }\\n  if (deferredEventPayload.current !== null) {\\n    shouldPreventNativeEffects.current = true;\\n  }\\n  pressOutHandler(gestureTouchToPressableEvent(event));\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"event\\\",\\\"handlingOnTouchesDown\\\",\\\"onEndHandlingTouchesDown\\\",\\\"pressOutHandler\\\",\\\"gestureTouchToPressableEvent\\\",\\\"deferredEventPayload\\\",\\\"shouldPreventNativeEffects\\\",\\\"_closure\\\",\\\"current\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAoLiB,SAAAA,SAASA,CAAAC,KAAA;EAAA;IAAAC,qBAAA;IAAAC,wBAAA;IAAAC,eAAA;IAAAC,4BAAA;IAAAC,oBAAA;IAAAC;EAAA,SAAAC,QAAA;EACtB,IAAIN,qBAAqB,CAACO,OAAO,EAAE;IACjCN,wBAAwB,CAACM,OAAO,GAAG;MAAA,OAAML,eAAe,CAACC,4BAA4B,CAACJ,KAAK,CAAC,CAAC;IAAA;IAE7F;EACF;EAIA,IAAIK,oBAAoB,CAACG,OAAO,KAAK,IAAI,EAAE;IACzCF,0BAA0B,CAACE,OAAO,GAAG,IAAI;EAC3C;EAEAL,eAAe,CAACC,4BAA4B,CAACJ,KAAK,CAAC,CAAC;AACtD\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_3445247687534_init_data = {\n  code: \"function anonymous(event) {\\n  const {\\n    isPressCallbackEnabled,\\n    handlingOnTouchesDown,\\n    cancelledMidPress,\\n    onEndHandlingTouchesDown,\\n    pressOutHandler,\\n    gestureTouchToPressableEvent,\\n    hasPassedBoundsChecks\\n  } = this._closure;\\n  isPressCallbackEnabled.current = false;\\n  if (handlingOnTouchesDown.current) {\\n    cancelledMidPress.current = true;\\n    onEndHandlingTouchesDown.current = function () {\\n      return pressOutHandler(gestureTouchToPressableEvent(event));\\n    };\\n    return;\\n  }\\n  if (!hasPassedBoundsChecks.current || event.allTouches.length > event.changedTouches.length) {\\n    return;\\n  }\\n  pressOutHandler(gestureTouchToPressableEvent(event));\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"event\\\",\\\"isPressCallbackEnabled\\\",\\\"handlingOnTouchesDown\\\",\\\"cancelledMidPress\\\",\\\"onEndHandlingTouchesDown\\\",\\\"pressOutHandler\\\",\\\"gestureTouchToPressableEvent\\\",\\\"hasPassedBoundsChecks\\\",\\\"_closure\\\",\\\"current\\\",\\\"allTouches\\\",\\\"length\\\",\\\"changedTouches\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAkMwB,SAAAA,SAASA,CAAAC,KAAA;EAAA;IAAAC,sBAAA;IAAAC,qBAAA;IAAAC,iBAAA;IAAAC,wBAAA;IAAAC,eAAA;IAAAC,4BAAA;IAAAC;EAAA,SAAAC,QAAA;EAC7BP,sBAAsB,CAACQ,OAAO,GAAG,KAAK;EAEtC,IAAIP,qBAAqB,CAACO,OAAO,EAAE;IACjCN,iBAAiB,CAACM,OAAO,GAAG,IAAI;IAEhCL,wBAAwB,CAACK,OAAO,GAAG;MAAA,OAAMJ,eAAe,CAACC,4BAA4B,CAACN,KAAK,CAAC,CAAC;IAAA;IAE7F;EACF;EAEA,IAAI,CAACO,qBAAqB,CAACE,OAAO,IAAIT,KAAK,CAACU,UAAU,CAACC,MAAM,GAAGX,KAAK,CAACY,cAAc,CAACD,MAAM,EAAE;IAC3F;EACF;EAEAN,eAAe,CAACC,4BAA4B,CAACN,KAAK,CAAC,CAAC;AACtD\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_6397195514966_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    Platform,\\n    isTouchPropagationAllowed\\n  } = this._closure;\\n  if (Platform.OS === 'android' || Platform.OS === 'macos') {\\n    isTouchPropagationAllowed.current = true;\\n  }\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"Platform\\\",\\\"isTouchPropagationAllowed\\\",\\\"_closure\\\",\\\"OS\\\",\\\"current\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAoN+D,SAAAA,SAAMA,CAAA;EAAA;IAAAC,QAAA;IAAAC;EAAA,SAAAC,QAAA;EAEjE,IAAIF,QAAQ,CAACG,EAAE,KAAK,SAAS,IAAIH,QAAQ,CAACG,EAAE,KAAK,OAAO,EAAE;IACxDF,yBAAyB,CAACG,OAAO,GAAG,IAAI;EAC1C;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_14860699155626_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    Platform,\\n    isTouchPropagationAllowed,\\n    deferredEventPayload,\\n    hasPassedBoundsChecks,\\n    pressInHandler,\\n    pressOutHandler,\\n    shouldPreventNativeEffects\\n  } = this._closure;\\n  if (Platform.OS === 'web') {\\n    isTouchPropagationAllowed.current = true;\\n  }\\n  if (Platform.OS !== 'ios') {\\n    return;\\n  }\\n  if (deferredEventPayload.current) {\\n    isTouchPropagationAllowed.current = true;\\n    if (hasPassedBoundsChecks.current) {\\n      pressInHandler(deferredEventPayload.current);\\n      deferredEventPayload.current = null;\\n    } else {\\n      pressOutHandler(deferredEventPayload.current);\\n      isTouchPropagationAllowed.current = false;\\n    }\\n    return;\\n  }\\n  if (hasPassedBoundsChecks.current) {\\n    isTouchPropagationAllowed.current = true;\\n    return;\\n  }\\n  if (shouldPreventNativeEffects.current) {\\n    shouldPreventNativeEffects.current = false;\\n    return;\\n  }\\n  isTouchPropagationAllowed.current = true;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\components\\\\Pressable\\\\Pressable.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"Platform\\\",\\\"isTouchPropagationAllowed\\\",\\\"deferredEventPayload\\\",\\\"hasPassedBoundsChecks\\\",\\\"pressInHandler\\\",\\\"pressOutHandler\\\",\\\"shouldPreventNativeEffects\\\",\\\"_closure\\\",\\\"OS\\\",\\\"current\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.js\\\"],\\\"mappings\\\":\\\"AAyNa,SAAAA,SAAMA,CAAA;EAAA;IAAAC,QAAA;IAAAC,yBAAA;IAAAC,oBAAA;IAAAC,qBAAA;IAAAC,cAAA;IAAAC,eAAA;IAAAC;EAAA,SAAAC,QAAA;EACf,IAAIP,QAAQ,CAACQ,EAAE,KAAK,KAAK,EAAE;IACzBP,yBAAyB,CAACQ,OAAO,GAAG,IAAI;EAC1C;EAGA,IAAIT,QAAQ,CAACQ,EAAE,KAAK,KAAK,EAAE;IACzB;EACF;EAEA,IAAIN,oBAAoB,CAACO,OAAO,EAAE;IAChCR,yBAAyB,CAACQ,OAAO,GAAG,IAAI;IAExC,IAAIN,qBAAqB,CAACM,OAAO,EAAE;MACjCL,cAAc,CAACF,oBAAoB,CAACO,OAAO,CAAC;MAC5CP,oBAAoB,CAACO,OAAO,GAAG,IAAI;IACrC,CAAC,MAAM;MACLJ,eAAe,CAACH,oBAAoB,CAACO,OAAO,CAAC;MAC7CR,yBAAyB,CAACQ,OAAO,GAAG,KAAK;IAC3C;IAEA;EACF;EAEA,IAAIN,qBAAqB,CAACM,OAAO,EAAE;IACjCR,yBAAyB,CAACQ,OAAO,GAAG,IAAI;IACxC;EACF;EAEA,IAAIH,0BAA0B,CAACG,OAAO,EAAE;IACtCH,0BAA0B,CAACG,OAAO,GAAG,KAAK;IAC1C;EACF;EAEAR,yBAAyB,CAACQ,OAAO,GAAG,IAAI;AAC1C\\\",\\\"ignoreList\\\":[]}\"\n};\nexport default function Pressable(props) {\n  var _android_ripple$color, _android_ripple$radiu;\n  var testOnly_pressed = props.testOnly_pressed,\n    hitSlop = props.hitSlop,\n    pressRetentionOffset = props.pressRetentionOffset,\n    delayHoverIn = props.delayHoverIn,\n    onHoverIn = props.onHoverIn,\n    delayHoverOut = props.delayHoverOut,\n    onHoverOut = props.onHoverOut,\n    delayLongPress = props.delayLongPress,\n    unstable_pressDelay = props.unstable_pressDelay,\n    onPress = props.onPress,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    onLongPress = props.onLongPress,\n    style = props.style,\n    children = props.children,\n    android_disableSound = props.android_disableSound,\n    android_ripple = props.android_ripple,\n    disabled = props.disabled,\n    remainingProps = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(testOnly_pressed !== null && testOnly_pressed !== void 0 ? testOnly_pressed : false),\n    _useState2 = _slicedToArray(_useState, 2),\n    pressedState = _useState2[0],\n    setPressedState = _useState2[1];\n  var pressableRef = useRef(null);\n  var isPressCallbackEnabled = useRef(true);\n  var hasPassedBoundsChecks = useRef(false);\n  var shouldPreventNativeEffects = useRef(false);\n  var normalizedHitSlop = useMemo(function () {\n    return typeof hitSlop === 'number' ? numberAsInset(hitSlop) : hitSlop !== null && hitSlop !== void 0 ? hitSlop : {};\n  }, [hitSlop]);\n  var normalizedPressRetentionOffset = useMemo(function () {\n    return typeof pressRetentionOffset === 'number' ? numberAsInset(pressRetentionOffset) : pressRetentionOffset !== null && pressRetentionOffset !== void 0 ? pressRetentionOffset : {};\n  }, [pressRetentionOffset]);\n  var hoverInTimeout = useRef(null);\n  var hoverOutTimeout = useRef(null);\n  var hoverGesture = useMemo(function () {\n    return Gesture.Hover().manualActivation(true).cancelsTouchesInView(false).onBegin(function (event) {\n      if (hoverOutTimeout.current) {\n        clearTimeout(hoverOutTimeout.current);\n      }\n      if (delayHoverIn) {\n        hoverInTimeout.current = setTimeout(function () {\n          return onHoverIn === null || onHoverIn === void 0 ? void 0 : onHoverIn(gestureToPressableEvent(event));\n        }, delayHoverIn);\n        return;\n      }\n      onHoverIn === null || onHoverIn === void 0 ? void 0 : onHoverIn(gestureToPressableEvent(event));\n    }).onFinalize(function (event) {\n      if (hoverInTimeout.current) {\n        clearTimeout(hoverInTimeout.current);\n      }\n      if (delayHoverOut) {\n        hoverOutTimeout.current = setTimeout(function () {\n          return onHoverOut === null || onHoverOut === void 0 ? void 0 : onHoverOut(gestureToPressableEvent(event));\n        }, delayHoverOut);\n        return;\n      }\n      onHoverOut === null || onHoverOut === void 0 ? void 0 : onHoverOut(gestureToPressableEvent(event));\n    });\n  }, [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]);\n  var pressDelayTimeoutRef = useRef(null);\n  var isTouchPropagationAllowed = useRef(false);\n  var deferredEventPayload = useRef(null);\n  var pressInHandler = useCallback(function (event) {\n    if (handlingOnTouchesDown.current) {\n      deferredEventPayload.current = event;\n    }\n    if (!isTouchPropagationAllowed.current) {\n      return;\n    }\n    deferredEventPayload.current = null;\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(event);\n    isPressCallbackEnabled.current = true;\n    pressDelayTimeoutRef.current = null;\n    setPressedState(true);\n  }, [onPressIn]);\n  var pressOutHandler = useCallback(function (event) {\n    if (!hasPassedBoundsChecks.current || event.nativeEvent.touches.length > event.nativeEvent.changedTouches.length) {\n      return;\n    }\n    if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n      clearTimeout(pressDelayTimeoutRef.current);\n      pressInHandler(event);\n    }\n    if (deferredEventPayload.current) {\n      onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(deferredEventPayload.current);\n      deferredEventPayload.current = null;\n    }\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(event);\n    if (isPressCallbackEnabled.current) {\n      onPress === null || onPress === void 0 ? void 0 : onPress(event);\n    }\n    if (longPressTimeoutRef.current) {\n      clearTimeout(longPressTimeoutRef.current);\n      longPressTimeoutRef.current = null;\n    }\n    isTouchPropagationAllowed.current = false;\n    hasPassedBoundsChecks.current = false;\n    isPressCallbackEnabled.current = true;\n    setPressedState(false);\n  }, [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]);\n  var handlingOnTouchesDown = useRef(false);\n  var onEndHandlingTouchesDown = useRef(null);\n  var cancelledMidPress = useRef(false);\n  var activateLongPress = useCallback(function (event) {\n    if (!isTouchPropagationAllowed.current) {\n      return;\n    }\n    if (hasPassedBoundsChecks.current) {\n      onLongPress === null || onLongPress === void 0 ? void 0 : onLongPress(gestureTouchToPressableEvent(event));\n      isPressCallbackEnabled.current = false;\n    }\n    if (longPressTimeoutRef.current) {\n      clearTimeout(longPressTimeoutRef.current);\n      longPressTimeoutRef.current = null;\n    }\n  }, [onLongPress]);\n  var longPressTimeoutRef = useRef(null);\n  var longPressMinDuration = (delayLongPress !== null && delayLongPress !== void 0 ? delayLongPress : DEFAULT_LONG_PRESS_DURATION) + (unstable_pressDelay !== null && unstable_pressDelay !== void 0 ? unstable_pressDelay : 0);\n  var pressAndTouchGesture = useMemo(function () {\n    return Gesture.LongPress().minDuration(INT32_MAX).maxDistance(INT32_MAX).cancelsTouchesInView(false).onTouchesDown(function () {\n      var _e = [new global.Error(), -16, -27];\n      var _f = function _f(event) {\n        var _pressableRef$current;\n        handlingOnTouchesDown.current = true;\n        (_pressableRef$current = pressableRef.current) === null || _pressableRef$current === void 0 ? void 0 : _pressableRef$current.measure(function (_x, _y, width, height) {\n          var _onEndHandlingTouches;\n          if (!isTouchWithinInset({\n            width: width,\n            height: height\n          }, normalizedHitSlop, event.changedTouches.at(-1)) || hasPassedBoundsChecks.current || cancelledMidPress.current) {\n            cancelledMidPress.current = false;\n            onEndHandlingTouchesDown.current = null;\n            handlingOnTouchesDown.current = false;\n            return;\n          }\n          hasPassedBoundsChecks.current = true;\n          if (longPressTimeoutRef.current === null) {\n            longPressTimeoutRef.current = setTimeout(function () {\n              return activateLongPress(event);\n            }, longPressMinDuration);\n          }\n          if (unstable_pressDelay) {\n            pressDelayTimeoutRef.current = setTimeout(function () {\n              pressInHandler(gestureTouchToPressableEvent(event));\n            }, unstable_pressDelay);\n          } else {\n            pressInHandler(gestureTouchToPressableEvent(event));\n          }\n          (_onEndHandlingTouches = onEndHandlingTouchesDown.current) === null || _onEndHandlingTouches === void 0 ? void 0 : _onEndHandlingTouches.call(onEndHandlingTouchesDown);\n          onEndHandlingTouchesDown.current = null;\n          handlingOnTouchesDown.current = false;\n        });\n      };\n      _f._closure = {\n        handlingOnTouchesDown: handlingOnTouchesDown,\n        pressableRef: pressableRef,\n        isTouchWithinInset: isTouchWithinInset,\n        normalizedHitSlop: normalizedHitSlop,\n        hasPassedBoundsChecks: hasPassedBoundsChecks,\n        cancelledMidPress: cancelledMidPress,\n        onEndHandlingTouchesDown: onEndHandlingTouchesDown,\n        longPressTimeoutRef: longPressTimeoutRef,\n        setTimeout: setTimeout,\n        activateLongPress: activateLongPress,\n        longPressMinDuration: longPressMinDuration,\n        unstable_pressDelay: unstable_pressDelay,\n        pressDelayTimeoutRef: pressDelayTimeoutRef,\n        pressInHandler: pressInHandler,\n        gestureTouchToPressableEvent: gestureTouchToPressableEvent\n      };\n      _f.__initData = _worklet_10632780403964_init_data;\n      _f.__workletHash = 10632780403964;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }()).onTouchesUp(function () {\n      var _e = [new global.Error(), -7, -27];\n      var _f = function _f(event) {\n        if (handlingOnTouchesDown.current) {\n          onEndHandlingTouchesDown.current = function () {\n            return pressOutHandler(gestureTouchToPressableEvent(event));\n          };\n          return;\n        }\n        if (deferredEventPayload.current !== null) {\n          shouldPreventNativeEffects.current = true;\n        }\n        pressOutHandler(gestureTouchToPressableEvent(event));\n      };\n      _f._closure = {\n        handlingOnTouchesDown: handlingOnTouchesDown,\n        onEndHandlingTouchesDown: onEndHandlingTouchesDown,\n        pressOutHandler: pressOutHandler,\n        gestureTouchToPressableEvent: gestureTouchToPressableEvent,\n        deferredEventPayload: deferredEventPayload,\n        shouldPreventNativeEffects: shouldPreventNativeEffects\n      };\n      _f.__initData = _worklet_15239916168259_init_data;\n      _f.__workletHash = 15239916168259;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }()).onTouchesCancelled(function () {\n      var _e = [new global.Error(), -8, -27];\n      var _f = function _f(event) {\n        isPressCallbackEnabled.current = false;\n        if (handlingOnTouchesDown.current) {\n          cancelledMidPress.current = true;\n          onEndHandlingTouchesDown.current = function () {\n            return pressOutHandler(gestureTouchToPressableEvent(event));\n          };\n          return;\n        }\n        if (!hasPassedBoundsChecks.current || event.allTouches.length > event.changedTouches.length) {\n          return;\n        }\n        pressOutHandler(gestureTouchToPressableEvent(event));\n      };\n      _f._closure = {\n        isPressCallbackEnabled: isPressCallbackEnabled,\n        handlingOnTouchesDown: handlingOnTouchesDown,\n        cancelledMidPress: cancelledMidPress,\n        onEndHandlingTouchesDown: onEndHandlingTouchesDown,\n        pressOutHandler: pressOutHandler,\n        gestureTouchToPressableEvent: gestureTouchToPressableEvent,\n        hasPassedBoundsChecks: hasPassedBoundsChecks\n      };\n      _f.__initData = _worklet_3445247687534_init_data;\n      _f.__workletHash = 3445247687534;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }());\n  }, [activateLongPress, longPressMinDuration, normalizedHitSlop, pressInHandler, pressOutHandler, unstable_pressDelay]);\n  var buttonGesture = useMemo(function () {\n    return Gesture.Native().onBegin(function () {\n      var _e = [new global.Error(), -3, -27];\n      var _f = function _f() {\n        if (Platform.OS === 'android' || Platform.OS === 'macos') {\n          isTouchPropagationAllowed.current = true;\n        }\n      };\n      _f._closure = {\n        Platform: Platform,\n        isTouchPropagationAllowed: isTouchPropagationAllowed\n      };\n      _f.__initData = _worklet_6397195514966_init_data;\n      _f.__workletHash = 6397195514966;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }()).onStart(function () {\n      var _e = [new global.Error(), -8, -27];\n      var _f = function _f() {\n        if (Platform.OS === 'web') {\n          isTouchPropagationAllowed.current = true;\n        }\n        if (Platform.OS !== 'ios') {\n          return;\n        }\n        if (deferredEventPayload.current) {\n          isTouchPropagationAllowed.current = true;\n          if (hasPassedBoundsChecks.current) {\n            pressInHandler(deferredEventPayload.current);\n            deferredEventPayload.current = null;\n          } else {\n            pressOutHandler(deferredEventPayload.current);\n            isTouchPropagationAllowed.current = false;\n          }\n          return;\n        }\n        if (hasPassedBoundsChecks.current) {\n          isTouchPropagationAllowed.current = true;\n          return;\n        }\n        if (shouldPreventNativeEffects.current) {\n          shouldPreventNativeEffects.current = false;\n          return;\n        }\n        isTouchPropagationAllowed.current = true;\n      };\n      _f._closure = {\n        Platform: Platform,\n        isTouchPropagationAllowed: isTouchPropagationAllowed,\n        deferredEventPayload: deferredEventPayload,\n        hasPassedBoundsChecks: hasPassedBoundsChecks,\n        pressInHandler: pressInHandler,\n        pressOutHandler: pressOutHandler,\n        shouldPreventNativeEffects: shouldPreventNativeEffects\n      };\n      _f.__initData = _worklet_14860699155626_init_data;\n      _f.__workletHash = 14860699155626;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }());\n  }, [pressInHandler, pressOutHandler]);\n  var appliedHitSlop = addInsets(normalizedHitSlop, normalizedPressRetentionOffset);\n  var isPressableEnabled = disabled !== true;\n  var gestures = [pressAndTouchGesture, hoverGesture, buttonGesture];\n  for (var _gesture of gestures) {\n    _gesture.enabled(isPressableEnabled);\n    _gesture.runOnJS(true);\n    _gesture.hitSlop(appliedHitSlop);\n    _gesture.shouldCancelWhenOutside(Platform.OS === 'web' ? false : true);\n  }\n  buttonGesture.hitSlop(normalizedHitSlop);\n  var gesture = Gesture.Simultaneous.apply(Gesture, gestures);\n  var defaultRippleColor = android_ripple ? undefined : 'transparent';\n  var pointerStyle = Platform.OS === 'web' ? {\n    cursor: 'pointer'\n  } : {};\n  var styleProp = typeof style === 'function' ? style({\n    pressed: pressedState\n  }) : style;\n  var childrenProp = typeof children === 'function' ? children({\n    pressed: pressedState\n  }) : children;\n  return React.createElement(GestureDetector, {\n    gesture: gesture\n  }, React.createElement(NativeButton, _extends({}, remainingProps, {\n    ref: pressableRef,\n    hitSlop: appliedHitSlop,\n    enabled: isPressableEnabled,\n    touchSoundDisabled: android_disableSound !== null && android_disableSound !== void 0 ? android_disableSound : undefined,\n    rippleColor: processColor((_android_ripple$color = android_ripple === null || android_ripple === void 0 ? void 0 : android_ripple.color) !== null && _android_ripple$color !== void 0 ? _android_ripple$color : defaultRippleColor),\n    rippleRadius: (_android_ripple$radiu = android_ripple === null || android_ripple === void 0 ? void 0 : android_ripple.radius) !== null && _android_ripple$radiu !== void 0 ? _android_ripple$radiu : undefined,\n    style: [pointerStyle, styleProp]\n  }), childrenProp, __DEV__ ? React.createElement(PressabilityDebugView, {\n    color: \"red\",\n    hitSlop: normalizedHitSlop\n  }) : null));\n}","map":{"version":3,"names":["React","useCallback","useMemo","useRef","useState","GestureObjects","Gesture","GestureDetector","Platform","processColor","NativeButton","numberAsInset","gestureToPressableEvent","isTouchWithinInset","gestureTouchToPressableEvent","addInsets","PressabilityDebugView","INT32_MAX","DEFAULT_LONG_PRESS_DURATION","_worklet_10632780403964_init_data","code","location","sourceMap","_worklet_15239916168259_init_data","_worklet_3445247687534_init_data","_worklet_6397195514966_init_data","_worklet_14860699155626_init_data","Pressable","props","_android_ripple$color","_android_ripple$radiu","testOnly_pressed","hitSlop","pressRetentionOffset","delayHoverIn","onHoverIn","delayHoverOut","onHoverOut","delayLongPress","unstable_pressDelay","onPress","onPressIn","onPressOut","onLongPress","style","children","android_disableSound","android_ripple","disabled","remainingProps","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","pressedState","setPressedState","pressableRef","isPressCallbackEnabled","hasPassedBoundsChecks","shouldPreventNativeEffects","normalizedHitSlop","normalizedPressRetentionOffset","hoverInTimeout","hoverOutTimeout","hoverGesture","Hover","manualActivation","cancelsTouchesInView","onBegin","event","current","clearTimeout","setTimeout","onFinalize","pressDelayTimeoutRef","isTouchPropagationAllowed","deferredEventPayload","pressInHandler","handlingOnTouchesDown","pressOutHandler","nativeEvent","touches","length","changedTouches","longPressTimeoutRef","onEndHandlingTouchesDown","cancelledMidPress","activateLongPress","longPressMinDuration","pressAndTouchGesture","LongPress","minDuration","maxDistance","onTouchesDown","_e","global","Error","_f","_pressableRef$current","measure","_x","_y","width","height","_onEndHandlingTouches","at","call","_closure","__initData","__workletHash","__stackDetails","__version","onTouchesUp","onTouchesCancelled","allTouches","buttonGesture","Native","OS","onStart","appliedHitSlop","isPressableEnabled","gestures","gesture","enabled","runOnJS","shouldCancelWhenOutside","Simultaneous","apply","defaultRippleColor","undefined","pointerStyle","cursor","styleProp","pressed","childrenProp","createElement","_extends","ref","touchSoundDisabled","rippleColor","color","rippleRadius","radius","__DEV__"],"sources":["d:\\CODING\\random\\12-13\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\Pressable\\Pressable.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { GestureObjects as Gesture } from '../../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../../handlers/gestures/GestureDetector';\nimport { PressableEvent, PressableProps } from './PressableProps';\nimport {\n  Insets,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  processColor,\n} from 'react-native';\nimport NativeButton from '../GestureHandlerButton';\nimport {\n  numberAsInset,\n  gestureToPressableEvent,\n  isTouchWithinInset,\n  gestureTouchToPressableEvent,\n  addInsets,\n} from './utils';\nimport { PressabilityDebugView } from '../../handlers/PressabilityDebugView';\nimport { GestureTouchEvent } from '../../handlers/gestureHandlerCommon';\nimport { INT32_MAX } from '../../utils';\n\nconst DEFAULT_LONG_PRESS_DURATION = 500;\n\nexport default function Pressable(props: PressableProps) {\n  const {\n    testOnly_pressed,\n    hitSlop,\n    pressRetentionOffset,\n    delayHoverIn,\n    onHoverIn,\n    delayHoverOut,\n    onHoverOut,\n    delayLongPress,\n    unstable_pressDelay,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    style,\n    children,\n    android_disableSound,\n    android_ripple,\n    disabled,\n    ...remainingProps\n  } = props;\n\n  const [pressedState, setPressedState] = useState(testOnly_pressed ?? false);\n\n  const pressableRef = useRef<View>(null);\n\n  // Disabled when onLongPress has been called\n  const isPressCallbackEnabled = useRef<boolean>(true);\n  const hasPassedBoundsChecks = useRef<boolean>(false);\n  const shouldPreventNativeEffects = useRef<boolean>(false);\n\n  const normalizedHitSlop: Insets = useMemo(\n    () =>\n      typeof hitSlop === 'number' ? numberAsInset(hitSlop) : hitSlop ?? {},\n    [hitSlop]\n  );\n\n  const normalizedPressRetentionOffset: Insets = useMemo(\n    () =>\n      typeof pressRetentionOffset === 'number'\n        ? numberAsInset(pressRetentionOffset)\n        : pressRetentionOffset ?? {},\n    [pressRetentionOffset]\n  );\n\n  const hoverInTimeout = useRef<number | null>(null);\n  const hoverOutTimeout = useRef<number | null>(null);\n\n  const hoverGesture = useMemo(\n    () =>\n      Gesture.Hover()\n        .manualActivation(true) // Stops Hover from blocking Native gesture activation on web\n        .cancelsTouchesInView(false)\n        .onBegin((event) => {\n          if (hoverOutTimeout.current) {\n            clearTimeout(hoverOutTimeout.current);\n          }\n          if (delayHoverIn) {\n            hoverInTimeout.current = setTimeout(\n              () => onHoverIn?.(gestureToPressableEvent(event)),\n              delayHoverIn\n            );\n            return;\n          }\n          onHoverIn?.(gestureToPressableEvent(event));\n        })\n        .onFinalize((event) => {\n          if (hoverInTimeout.current) {\n            clearTimeout(hoverInTimeout.current);\n          }\n          if (delayHoverOut) {\n            hoverOutTimeout.current = setTimeout(\n              () => onHoverOut?.(gestureToPressableEvent(event)),\n              delayHoverOut\n            );\n            return;\n          }\n          onHoverOut?.(gestureToPressableEvent(event));\n        }),\n    [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]\n  );\n\n  const pressDelayTimeoutRef = useRef<number | null>(null);\n  const isTouchPropagationAllowed = useRef<boolean>(false);\n\n  // iOS only: due to varying flow of gestures, events sometimes have to be saved for later use\n  const deferredEventPayload = useRef<PressableEvent | null>(null);\n\n  const pressInHandler = useCallback(\n    (event: PressableEvent) => {\n      if (handlingOnTouchesDown.current) {\n        deferredEventPayload.current = event;\n      }\n\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      deferredEventPayload.current = null;\n\n      onPressIn?.(event);\n      isPressCallbackEnabled.current = true;\n      pressDelayTimeoutRef.current = null;\n      setPressedState(true);\n    },\n    [onPressIn]\n  );\n\n  const pressOutHandler = useCallback(\n    (event: PressableEvent) => {\n      if (\n        !hasPassedBoundsChecks.current ||\n        event.nativeEvent.touches.length >\n          event.nativeEvent.changedTouches.length\n      ) {\n        return;\n      }\n\n      if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n        // When delay is preemptively finished by lifting touches,\n        // we want to immediately activate it's effects - pressInHandler,\n        // even though we are located at the pressOutHandler\n        clearTimeout(pressDelayTimeoutRef.current);\n        pressInHandler(event);\n      }\n\n      if (deferredEventPayload.current) {\n        onPressIn?.(deferredEventPayload.current);\n        deferredEventPayload.current = null;\n      }\n\n      onPressOut?.(event);\n\n      if (isPressCallbackEnabled.current) {\n        onPress?.(event);\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n\n      isTouchPropagationAllowed.current = false;\n      hasPassedBoundsChecks.current = false;\n      isPressCallbackEnabled.current = true;\n      setPressedState(false);\n    },\n    [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]\n  );\n\n  const handlingOnTouchesDown = useRef<boolean>(false);\n  const onEndHandlingTouchesDown = useRef<(() => void) | null>(null);\n  const cancelledMidPress = useRef<boolean>(false);\n\n  const activateLongPress = useCallback(\n    (event: GestureTouchEvent) => {\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      if (hasPassedBoundsChecks.current) {\n        onLongPress?.(gestureTouchToPressableEvent(event));\n        isPressCallbackEnabled.current = false;\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n    },\n    [onLongPress]\n  );\n\n  const longPressTimeoutRef = useRef<number | null>(null);\n  const longPressMinDuration =\n    (delayLongPress ?? DEFAULT_LONG_PRESS_DURATION) +\n    (unstable_pressDelay ?? 0);\n\n  const pressAndTouchGesture = useMemo(\n    () =>\n      Gesture.LongPress()\n        .minDuration(INT32_MAX) // Stops long press from blocking native gesture\n        .maxDistance(INT32_MAX) // Stops long press from cancelling after set distance\n        .cancelsTouchesInView(false)\n        .onTouchesDown((event) => {\n          handlingOnTouchesDown.current = true;\n          pressableRef.current?.measure((_x, _y, width, height) => {\n            if (\n              !isTouchWithinInset(\n                {\n                  width,\n                  height,\n                },\n                normalizedHitSlop,\n                event.changedTouches.at(-1)\n              ) ||\n              hasPassedBoundsChecks.current ||\n              cancelledMidPress.current\n            ) {\n              cancelledMidPress.current = false;\n              onEndHandlingTouchesDown.current = null;\n              handlingOnTouchesDown.current = false;\n              return;\n            }\n\n            hasPassedBoundsChecks.current = true;\n\n            // In case of multiple touches, the first one starts long press gesture\n            if (longPressTimeoutRef.current === null) {\n              // Start long press gesture timer\n              longPressTimeoutRef.current = setTimeout(\n                () => activateLongPress(event),\n                longPressMinDuration\n              );\n            }\n\n            if (unstable_pressDelay) {\n              pressDelayTimeoutRef.current = setTimeout(() => {\n                pressInHandler(gestureTouchToPressableEvent(event));\n              }, unstable_pressDelay);\n            } else {\n              pressInHandler(gestureTouchToPressableEvent(event));\n            }\n\n            onEndHandlingTouchesDown.current?.();\n            onEndHandlingTouchesDown.current = null;\n            handlingOnTouchesDown.current = false;\n          });\n        })\n        .onTouchesUp((event) => {\n          if (handlingOnTouchesDown.current) {\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n          // On iOS, short taps will make LongPress gesture call onTouchesUp before Native gesture calls onStart\n          // This variable ensures that onStart isn't detected as the first gesture since Pressable is pressed.\n          if (deferredEventPayload.current !== null) {\n            shouldPreventNativeEffects.current = true;\n          }\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        })\n        .onTouchesCancelled((event) => {\n          isPressCallbackEnabled.current = false;\n\n          if (handlingOnTouchesDown.current) {\n            cancelledMidPress.current = true;\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n\n          if (\n            !hasPassedBoundsChecks.current ||\n            event.allTouches.length > event.changedTouches.length\n          ) {\n            return;\n          }\n\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        }),\n    [\n      activateLongPress,\n      longPressMinDuration,\n      normalizedHitSlop,\n      pressInHandler,\n      pressOutHandler,\n      unstable_pressDelay,\n    ]\n  );\n\n  // RNButton is placed inside ButtonGesture to enable Android's ripple and to capture non-propagating events\n  const buttonGesture = useMemo(\n    () =>\n      Gesture.Native()\n        .onBegin(() => {\n          // Android sets BEGAN state on press down\n          if (Platform.OS === 'android' || Platform.OS === 'macos') {\n            isTouchPropagationAllowed.current = true;\n          }\n        })\n        .onStart(() => {\n          if (Platform.OS === 'web') {\n            isTouchPropagationAllowed.current = true;\n          }\n\n          // iOS sets ACTIVE state on press down\n          if (Platform.OS !== 'ios') {\n            return;\n          }\n\n          if (deferredEventPayload.current) {\n            isTouchPropagationAllowed.current = true;\n\n            if (hasPassedBoundsChecks.current) {\n              pressInHandler(deferredEventPayload.current);\n              deferredEventPayload.current = null;\n            } else {\n              pressOutHandler(deferredEventPayload.current);\n              isTouchPropagationAllowed.current = false;\n            }\n\n            return;\n          }\n\n          if (hasPassedBoundsChecks.current) {\n            isTouchPropagationAllowed.current = true;\n            return;\n          }\n\n          if (shouldPreventNativeEffects.current) {\n            shouldPreventNativeEffects.current = false;\n            return;\n          }\n\n          isTouchPropagationAllowed.current = true;\n        }),\n    [pressInHandler, pressOutHandler]\n  );\n\n  const appliedHitSlop = addInsets(\n    normalizedHitSlop,\n    normalizedPressRetentionOffset\n  );\n\n  const isPressableEnabled = disabled !== true;\n\n  const gestures = [pressAndTouchGesture, hoverGesture, buttonGesture];\n\n  for (const gesture of gestures) {\n    gesture.enabled(isPressableEnabled);\n    gesture.runOnJS(true);\n    gesture.hitSlop(appliedHitSlop);\n    gesture.shouldCancelWhenOutside(Platform.OS === 'web' ? false : true);\n  }\n\n  // Uses different hitSlop, to activate on hitSlop area instead of pressRetentionOffset area\n  buttonGesture.hitSlop(normalizedHitSlop);\n\n  const gesture = Gesture.Simultaneous(...gestures);\n\n  const defaultRippleColor = android_ripple ? undefined : 'transparent';\n\n  // `cursor: 'pointer'` on `RNButton` crashes iOS\n  const pointerStyle: StyleProp<ViewStyle> =\n    Platform.OS === 'web' ? { cursor: 'pointer' } : {};\n\n  const styleProp =\n    typeof style === 'function' ? style({ pressed: pressedState }) : style;\n\n  const childrenProp =\n    typeof children === 'function'\n      ? children({ pressed: pressedState })\n      : children;\n\n  return (\n    <GestureDetector gesture={gesture}>\n      <NativeButton\n        {...remainingProps}\n        ref={pressableRef}\n        hitSlop={appliedHitSlop}\n        enabled={isPressableEnabled}\n        touchSoundDisabled={android_disableSound ?? undefined}\n        rippleColor={processColor(android_ripple?.color ?? defaultRippleColor)}\n        rippleRadius={android_ripple?.radius ?? undefined}\n        style={[pointerStyle, styleProp]}>\n        {childrenProp}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"red\" hitSlop={normalizedHitSlop} />\n        ) : null}\n      </NativeButton>\n    </GestureDetector>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}