{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Text, Button, TextInput, Card, IconButton, Snackbar } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { supabase } from \"../lib/supabase\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar chatIcon = require(\"../assets/chat-icon.png\");\nvar archiveIcon = require(\"../assets/archive-icon.png\");\nexport default function Home() {\n  var navigation = useNavigation();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showHistory = _useState2[0],\n    setShowHistory = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chats = _useState6[0],\n    setChats = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    archivedChats = _useState8[0],\n    setArchivedChats = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    deletingChat = _useState12[0],\n    setDeletingChat = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    snackbarVisible = _useState14[0],\n    setSnackbarVisible = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    snackbarMessage = _useState16[0],\n    setSnackbarMessage = _useState16[1];\n  var _useState17 = useState('success'),\n    _useState18 = _slicedToArray(_useState17, 2),\n    snackbarType = _useState18[0],\n    setSnackbarType = _useState18[1];\n  var searchWidth = useRef(new Animated.Value(40)).current;\n  var pathOpacity = useRef(new Animated.Value(1)).current;\n  var pathScale = useRef(new Animated.Value(1)).current;\n  useEffect(function () {\n    var _animate = function animate() {\n      Animated.sequence([Animated.parallel([Animated.timing(pathOpacity, {\n        toValue: 0.5,\n        duration: 1000,\n        useNativeDriver: true\n      }), Animated.timing(pathScale, {\n        toValue: 1.1,\n        duration: 1000,\n        useNativeDriver: true\n      })]), Animated.parallel([Animated.timing(pathOpacity, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      }), Animated.timing(pathScale, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      })])]).start(function () {\n        return _animate();\n      });\n    };\n    _animate();\n  }, []);\n  var toggleSearch = function toggleSearch() {\n    Animated.timing(searchWidth, {\n      toValue: searchWidth._value === 40 ? 200 : 40,\n      duration: 300,\n      useNativeDriver: false\n    }).start();\n  };\n  useFocusEffect(React.useCallback(function () {\n    loadChats();\n  }, []));\n  var handleLogout = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield supabase.auth.signOut();\n        navigation.navigate('Login');\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var loadChats = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$supabase$auth$ = yield supabase.auth.getUser(),\n          user = _yield$supabase$auth$.data.user;\n        if (!user) {\n          console.error('No user found');\n          navigation.navigate('Login');\n          return;\n        }\n        console.log('Loading chats for user:', user.id);\n        var _yield$supabase$from$ = yield supabase.from('chats').select('*').limit(1),\n          tableInfo = _yield$supabase$from$.data,\n          tableError = _yield$supabase$from$.error;\n        if (tableError) {\n          console.error('Error checking table:', tableError);\n          return;\n        }\n        console.log('Table structure:', tableInfo);\n        var _yield$supabase$from$2 = yield supabase.from('chats').select(`\n          id,\n          user_id,\n          question,\n          response,\n          created_at,\n          is_archived\n        `).eq('user_id', user.id).order('created_at', {\n            ascending: false\n          }),\n          chatData = _yield$supabase$from$2.data,\n          error = _yield$supabase$from$2.error;\n        if (error) {\n          console.error('Error loading chats:', error);\n          return;\n        }\n        console.log('Loaded chats:', chatData);\n        if (!chatData) {\n          console.log('No chat data returned');\n          setChats([]);\n          setArchivedChats([]);\n          return;\n        }\n        var processedChats = chatData.map(function (chat) {\n          return _objectSpread(_objectSpread({}, chat), {}, {\n            response: typeof chat.response === 'string' ? JSON.parse(chat.response) : chat.response\n          });\n        });\n        console.log('Processed chats:', processedChats);\n        setChats(processedChats.filter(function (chat) {\n          return !chat.is_archived;\n        }));\n        setArchivedChats(processedChats.filter(function (chat) {\n          return chat.is_archived;\n        }));\n      } catch (error) {\n        console.error('Error in loadChats:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadChats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleArchiveToggle = function () {\n    var _ref3 = _asyncToGenerator(function* (chatId, currentlyArchived) {\n      try {\n        var _yield$supabase$from$3 = yield supabase.from('chats').update({\n            is_archived: !currentlyArchived\n          }).eq('id', chatId),\n          error = _yield$supabase$from$3.error;\n        if (error) {\n          console.error('Error toggling archive status:', error);\n          return;\n        }\n        loadChats();\n      } catch (error) {\n        console.error('Error in handleArchiveToggle:', error);\n      }\n    });\n    return function handleArchiveToggle(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleDelete = function () {\n    var _ref4 = _asyncToGenerator(function* (chatId) {\n      try {\n        setDeletingChat(chatId);\n        var _yield$supabase$from$4 = yield supabase.from('chats').delete().eq('id', chatId),\n          error = _yield$supabase$from$4.error;\n        if (error) {\n          throw new Error('Error deleting chat: ' + error.message);\n        }\n        setSnackbarType('success');\n        setSnackbarMessage('Chat deleted successfully');\n        setSnackbarVisible(true);\n        loadChats();\n      } catch (err) {\n        console.error('Error in handleDelete:', err);\n        setSnackbarType('error');\n        setSnackbarMessage(err instanceof Error ? err.message : 'Failed to delete chat');\n        setSnackbarVisible(true);\n      } finally {\n        setDeletingChat(null);\n      }\n    });\n    return function handleDelete(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var filteredChats = (showHistory ? chats : archivedChats).filter(function (chat) {\n    return chat.question.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  var renderChatItem = function renderChatItem(chat) {\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Response', {\n          question: chat.question,\n          verse: chat.response.verse,\n          reference: chat.response.reference,\n          relevance: chat.response.relevance,\n          explanation: chat.response.explanation\n        });\n      },\n      children: _jsxs(Card, {\n        style: styles.historyCard,\n        children: [_jsxs(View, {\n          style: styles.historyCardHeader,\n          children: [_jsx(Text, {\n            style: styles.historyCardTitle,\n            children: chat.question\n          }), _jsxs(View, {\n            style: styles.cardActions,\n            children: [_jsx(IconButton, {\n              icon: chat.is_archived ? 'archive-remove' : 'archive',\n              size: 24,\n              onPress: function onPress() {\n                return handleArchiveToggle(chat.id, chat.is_archived);\n              }\n            }), _jsx(IconButton, {\n              icon: \"delete\",\n              size: 24,\n              loading: deletingChat === chat.id,\n              disabled: deletingChat === chat.id,\n              onPress: function onPress() {\n                return handleDelete(chat.id);\n              },\n              iconColor: \"#FF6B6B\"\n            })]\n          })]\n        }), _jsxs(Text, {\n          style: styles.historyCardContent,\n          children: [chat.response.verse, \" - \", chat.response.reference]\n        }), _jsx(Text, {\n          style: styles.historyCardTime,\n          children: new Date(chat.created_at).toLocaleDateString()\n        })]\n      })\n    }, chat.id);\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Image, {\n          source: require(\"../assets/logo-full.png\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        }), _jsx(View, {\n          style: styles.titleContainer,\n          children: _jsxs(Text, {\n            style: styles.mainTitle,\n            children: [\"Seek Your Verse, Find Your\", ' ', _jsx(Animated.Text, {\n              style: [styles.mainTitle, styles.highlight, {\n                opacity: pathOpacity,\n                transform: [{\n                  scale: pathScale\n                }]\n              }],\n              children: \"Path\"\n            })]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.newTopicButton,\n          onPress: function onPress() {\n            return navigation.navigate('Question');\n          },\n          children: _jsx(Text, {\n            style: styles.newTopicText,\n            children: \"+ New Topic\"\n          })\n        }), _jsxs(View, {\n          style: styles.historySection,\n          children: [_jsxs(View, {\n            style: styles.historyHeader,\n            children: [_jsxs(View, {\n              style: styles.toggleContainer,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.toggleButton, showHistory && styles.activeToggle],\n                onPress: function onPress() {\n                  return setShowHistory(true);\n                },\n                children: _jsx(Text, {\n                  style: [styles.toggleText, showHistory && styles.activeToggleText],\n                  children: \"Chats\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.toggleButton, !showHistory && styles.activeToggle],\n                onPress: function onPress() {\n                  return setShowHistory(false);\n                },\n                children: _jsx(Text, {\n                  style: [styles.toggleText, !showHistory && styles.activeToggleText],\n                  children: \"Archived\"\n                })\n              })]\n            }), _jsxs(Animated.View, {\n              style: [styles.searchContainer, {\n                width: searchWidth,\n                flexDirection: 'row',\n                alignItems: 'center'\n              }],\n              children: [_jsx(TouchableOpacity, {\n                onPress: toggleSearch,\n                children: _jsx(MaterialCommunityIcons, {\n                  name: \"magnify\",\n                  size: 24,\n                  color: \"#fff\"\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  flex: 1,\n                  overflow: 'hidden',\n                  width: searchWidth\n                },\n                children: _jsx(TextInput, {\n                  style: styles.searchInput,\n                  placeholder: \"Search history...\",\n                  value: searchQuery,\n                  onChangeText: setSearchQuery,\n                  placeholderTextColor: \"#666\"\n                })\n              })]\n            })]\n          }), loading ? _jsx(Text, {\n            style: styles.loadingText,\n            children: \"Loading your conversations...\"\n          }) : filteredChats.length === 0 ? _jsx(Text, {\n            style: styles.emptyText,\n            children: showHistory ? \"No chat history yet. Start a new topic!\" : \"No archived chats yet.\"\n          }) : _jsx(View, {\n            style: styles.historyCards,\n            children: filteredChats.map(renderChatItem)\n          })]\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          onPress: handleLogout,\n          style: styles.logoutButton,\n          children: \"Logout\"\n        })]\n      })\n    }), _jsx(Snackbar, {\n      visible: snackbarVisible,\n      onDismiss: function onDismiss() {\n        return setSnackbarVisible(false);\n      },\n      duration: 2000,\n      style: [styles.snackbar, snackbarType === 'success' ? styles.successSnackbar : styles.errorSnackbar],\n      children: snackbarMessage\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000'\n  },\n  content: {\n    flex: 1,\n    padding: 20\n  },\n  scrollContent: {\n    flexGrow: 1\n  },\n  logo: {\n    width: '100%',\n    height: 159,\n    marginTop: 20,\n    marginBottom: 30\n  },\n  titleContainer: {\n    marginBottom: 32\n  },\n  mainTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 24,\n    color: '#FFFFFF',\n    textAlign: 'center',\n    lineHeight: 32,\n    fontWeight: '400'\n  },\n  highlight: {\n    color: '#FFD9D0'\n  },\n  newTopicButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 40,\n    alignItems: 'center'\n  },\n  newTopicText: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFD9D0',\n    fontWeight: '400'\n  },\n  historySection: {\n    flex: 1\n  },\n  historyHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n    paddingHorizontal: 16\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#1a1a1a',\n    borderRadius: 25,\n    padding: 4\n  },\n  toggleButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 20\n  },\n  activeToggle: {\n    backgroundColor: '#333'\n  },\n  toggleText: {\n    color: '#666',\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  activeToggleText: {\n    color: '#fff'\n  },\n  searchContainer: {\n    backgroundColor: '#1a1a1a',\n    borderRadius: 25,\n    padding: 8,\n    overflow: 'hidden'\n  },\n  searchInput: {\n    backgroundColor: 'transparent',\n    paddingHorizontal: 10,\n    color: '#fff',\n    height: 40\n  },\n  historyCard: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    marginBottom: 16,\n    borderRadius: 12\n  },\n  historyCardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    padding: 16\n  },\n  historyCardTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFFFFF',\n    flex: 1,\n    marginRight: 16,\n    fontWeight: '400',\n    lineHeight: 22\n  },\n  historyCardContent: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.7)',\n    paddingHorizontal: 16,\n    paddingBottom: 12,\n    lineHeight: 20,\n    fontWeight: '400'\n  },\n  historyCardTime: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.5)',\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n    fontWeight: '400'\n  },\n  historyCards: {\n    marginTop: 20\n  },\n  loadingText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16\n  },\n  emptyText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16\n  },\n  logoutButton: {\n    marginTop: 20,\n    borderColor: '#FFD9D0'\n  },\n  cardActions: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  snackbar: {\n    position: 'absolute',\n    bottom: 0,\n    margin: 16,\n    borderRadius: 8\n  },\n  successSnackbar: {\n    backgroundColor: '#4CAF50'\n  },\n  errorSnackbar: {\n    backgroundColor: '#F44336'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useRef","StyleSheet","View","ScrollView","TouchableOpacity","Image","Animated","Text","Button","TextInput","Card","IconButton","Snackbar","SafeAreaView","useNavigation","useFocusEffect","supabase","MaterialCommunityIcons","jsx","_jsx","jsxs","_jsxs","chatIcon","require","archiveIcon","Home","navigation","_useState","_useState2","_slicedToArray","showHistory","setShowHistory","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","chats","setChats","_useState7","_useState8","archivedChats","setArchivedChats","_useState9","_useState10","loading","setLoading","_useState11","_useState12","deletingChat","setDeletingChat","_useState13","_useState14","snackbarVisible","setSnackbarVisible","_useState15","_useState16","snackbarMessage","setSnackbarMessage","_useState17","_useState18","snackbarType","setSnackbarType","searchWidth","Value","current","pathOpacity","pathScale","animate","sequence","parallel","timing","toValue","duration","useNativeDriver","start","toggleSearch","_value","useCallback","loadChats","handleLogout","_ref","_asyncToGenerator","auth","signOut","navigate","error","console","apply","arguments","_ref2","_yield$supabase$auth$","getUser","user","data","log","id","_yield$supabase$from$","from","select","limit","tableInfo","tableError","_yield$supabase$from$2","eq","order","ascending","chatData","processedChats","map","chat","_objectSpread","response","JSON","parse","filter","is_archived","handleArchiveToggle","_ref3","chatId","currentlyArchived","_yield$supabase$from$3","update","_x","_x2","handleDelete","_ref4","_yield$supabase$from$4","delete","Error","message","err","_x3","filteredChats","question","toLowerCase","includes","renderChatItem","onPress","verse","reference","relevance","explanation","children","style","styles","historyCard","historyCardHeader","historyCardTitle","cardActions","icon","size","disabled","iconColor","historyCardContent","historyCardTime","Date","created_at","toLocaleDateString","container","contentContainerStyle","scrollContent","content","source","logo","resizeMode","titleContainer","mainTitle","highlight","opacity","transform","scale","newTopicButton","newTopicText","historySection","historyHeader","toggleContainer","toggleButton","activeToggle","toggleText","activeToggleText","searchContainer","width","flexDirection","alignItems","name","color","flex","overflow","searchInput","placeholder","value","onChangeText","placeholderTextColor","loadingText","length","emptyText","historyCards","mode","logoutButton","visible","onDismiss","snackbar","successSnackbar","errorSnackbar","create","backgroundColor","padding","flexGrow","height","marginTop","marginBottom","fontFamily","fontSize","textAlign","lineHeight","fontWeight","borderRadius","justifyContent","paddingHorizontal","paddingVertical","marginRight","paddingBottom","borderColor","position","bottom","margin"],"sources":["d:/CODING/random/12-13/bible_verse_app/frontend/pages/Home.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { StyleSheet, View, ScrollView, TouchableOpacity, Image, Animated, Dimensions } from 'react-native';\nimport { Text, Button, TextInput, Card, IconButton, Snackbar } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { supabase } from '../lib/supabase';\nimport { NavigationProps } from '../navigation.types';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\n// Import icons\nconst chatIcon = require('../assets/chat-icon.png');\nconst archiveIcon = require('../assets/archive-icon.png');\n\ninterface ChatItem {\n  id: string;\n  question: string;\n  response: {\n    verse: string;\n    reference: string;\n    relevance: string;\n    explanation: string;\n  };\n  created_at: string;\n  is_archived: boolean;\n}\n\nexport default function Home() {\n  const navigation = useNavigation<NavigationProps>();\n  const [showHistory, setShowHistory] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [chats, setChats] = useState<ChatItem[]>([]);\n  const [archivedChats, setArchivedChats] = useState<ChatItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [deletingChat, setDeletingChat] = useState<string | null>(null);\n  const [snackbarVisible, setSnackbarVisible] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarType, setSnackbarType] = useState<'success' | 'error'>('success');\n\n  const searchWidth = useRef(new Animated.Value(40)).current;\n  const pathOpacity = useRef(new Animated.Value(1)).current;\n  const pathScale = useRef(new Animated.Value(1)).current;\n\n  useEffect(() => {\n    const animate = () => {\n      Animated.sequence([\n        Animated.parallel([\n          Animated.timing(pathOpacity, {\n            toValue: 0.5,\n            duration: 1000,\n            useNativeDriver: true,\n          }),\n          Animated.timing(pathScale, {\n            toValue: 1.1,\n            duration: 1000,\n            useNativeDriver: true,\n          }),\n        ]),\n        Animated.parallel([\n          Animated.timing(pathOpacity, {\n            toValue: 1,\n            duration: 1000,\n            useNativeDriver: true,\n          }),\n          Animated.timing(pathScale, {\n            toValue: 1,\n            duration: 1000,\n            useNativeDriver: true,\n          }),\n        ]),\n      ]).start(() => animate());\n    };\n\n    animate();\n  }, []);\n\n  const toggleSearch = () => {\n    Animated.timing(searchWidth, {\n      toValue: searchWidth._value === 40 ? 200 : 40,\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  // Load chats when the screen comes into focus\n  useFocusEffect(\n    React.useCallback(() => {\n      loadChats();\n    }, [])\n  );\n\n  const handleLogout = async () => {\n    try {\n      await supabase.auth.signOut();\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  const loadChats = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.error('No user found');\n        navigation.navigate('Login');\n        return;\n      }\n\n      console.log('Loading chats for user:', user.id);\n\n      // First, check if the table exists and has the correct structure\n      const { data: tableInfo, error: tableError } = await supabase\n        .from('chats')\n        .select('*')\n        .limit(1);\n\n      if (tableError) {\n        console.error('Error checking table:', tableError);\n        return;\n      }\n\n      console.log('Table structure:', tableInfo);\n\n      // Now fetch the actual chats with all fields explicitly specified\n      const { data: chatData, error } = await supabase\n        .from('chats')\n        .select(`\n          id,\n          user_id,\n          question,\n          response,\n          created_at,\n          is_archived\n        `)\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        console.error('Error loading chats:', error);\n        return;\n      }\n\n      console.log('Loaded chats:', chatData);\n\n      if (!chatData) {\n        console.log('No chat data returned');\n        setChats([]);\n        setArchivedChats([]);\n        return;\n      }\n\n      // Parse the response field if it's stored as a string\n      const processedChats = chatData.map(chat => ({\n        ...chat,\n        response: typeof chat.response === 'string' \n          ? JSON.parse(chat.response)\n          : chat.response\n      }));\n\n      console.log('Processed chats:', processedChats);\n\n      setChats(processedChats.filter(chat => !chat.is_archived));\n      setArchivedChats(processedChats.filter(chat => chat.is_archived));\n    } catch (error) {\n      console.error('Error in loadChats:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleArchiveToggle = async (chatId: string, currentlyArchived: boolean) => {\n    try {\n      const { error } = await supabase\n        .from('chats')\n        .update({ is_archived: !currentlyArchived })\n        .eq('id', chatId);\n\n      if (error) {\n        console.error('Error toggling archive status:', error);\n        return;\n      }\n\n      // Reload chats after updating\n      loadChats();\n    } catch (error) {\n      console.error('Error in handleArchiveToggle:', error);\n    }\n  };\n\n  const handleDelete = async (chatId: string) => {\n    try {\n      setDeletingChat(chatId);\n      const { error } = await supabase\n        .from('chats')\n        .delete()\n        .eq('id', chatId);\n\n      if (error) {\n        throw new Error('Error deleting chat: ' + error.message);\n      }\n\n      setSnackbarType('success');\n      setSnackbarMessage('Chat deleted successfully');\n      setSnackbarVisible(true);\n      loadChats();\n    } catch (err) {\n      console.error('Error in handleDelete:', err);\n      setSnackbarType('error');\n      setSnackbarMessage(err instanceof Error ? err.message : 'Failed to delete chat');\n      setSnackbarVisible(true);\n    } finally {\n      setDeletingChat(null);\n    }\n  };\n\n  const filteredChats = (showHistory ? chats : archivedChats).filter(chat =>\n    chat.question.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const renderChatItem = (chat: ChatItem) => (\n    <TouchableOpacity\n      key={chat.id}\n      onPress={() => navigation.navigate('Response', {\n        question: chat.question,\n        verse: chat.response.verse,\n        reference: chat.response.reference,\n        relevance: chat.response.relevance,\n        explanation: chat.response.explanation\n      })}\n    >\n      <Card style={styles.historyCard}>\n        <View style={styles.historyCardHeader}>\n          <Text style={styles.historyCardTitle}>{chat.question}</Text>\n          <View style={styles.cardActions}>\n            <IconButton\n              icon={chat.is_archived ? 'archive-remove' : 'archive'}\n              size={24}\n              onPress={() => handleArchiveToggle(chat.id, chat.is_archived)}\n            />\n            <IconButton\n              icon=\"delete\"\n              size={24}\n              loading={deletingChat === chat.id}\n              disabled={deletingChat === chat.id}\n              onPress={() => handleDelete(chat.id)}\n              iconColor=\"#FF6B6B\"\n            />\n          </View>\n        </View>\n        <Text style={styles.historyCardContent}>\n          {chat.response.verse} - {chat.response.reference}\n        </Text>\n        <Text style={styles.historyCardTime}>\n          {new Date(chat.created_at).toLocaleDateString()}\n        </Text>\n      </Card>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.content}>\n          <Image \n            source={require('../assets/logo-full.png')} \n            style={styles.logo} \n            resizeMode=\"contain\"\n          />\n\n          <View style={styles.titleContainer}>\n            <Text style={styles.mainTitle}>\n              Seek Your Verse, Find Your{' '}\n              <Animated.Text \n                style={[\n                  styles.mainTitle, \n                  styles.highlight,\n                  {\n                    opacity: pathOpacity,\n                    transform: [{ scale: pathScale }]\n                  }\n                ]}\n              >\n                Path\n              </Animated.Text>\n            </Text>\n          </View>\n\n          <TouchableOpacity \n            style={styles.newTopicButton} \n            onPress={() => navigation.navigate('Question')}\n          >\n            <Text style={styles.newTopicText}>+ New Topic</Text>\n          </TouchableOpacity>\n\n          <View style={styles.historySection}>\n            <View style={styles.historyHeader}>\n              <View style={styles.toggleContainer}>\n                <TouchableOpacity\n                  style={[\n                    styles.toggleButton,\n                    showHistory && styles.activeToggle\n                  ]}\n                  onPress={() => setShowHistory(true)}\n                >\n                  <Text style={[\n                    styles.toggleText,\n                    showHistory && styles.activeToggleText\n                  ]}>Chats</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[\n                    styles.toggleButton,\n                    !showHistory && styles.activeToggle\n                  ]}\n                  onPress={() => setShowHistory(false)}\n                >\n                  <Text style={[\n                    styles.toggleText,\n                    !showHistory && styles.activeToggleText\n                  ]}>Archived</Text>\n                </TouchableOpacity>\n              </View>\n              <Animated.View style={[styles.searchContainer, {\n                width: searchWidth,\n                flexDirection: 'row',\n                alignItems: 'center',\n              }]}>\n                <TouchableOpacity onPress={toggleSearch}>\n                  <MaterialCommunityIcons name=\"magnify\" size={24} color=\"#fff\" />\n                </TouchableOpacity>\n                <Animated.View style={{ flex: 1, overflow: 'hidden', width: searchWidth }}>\n                  <TextInput\n                    style={styles.searchInput}\n                    placeholder=\"Search history...\"\n                    value={searchQuery}\n                    onChangeText={setSearchQuery}\n                    placeholderTextColor=\"#666\"\n                  />\n                </Animated.View>\n              </Animated.View>\n            </View>\n\n            {loading ? (\n              <Text style={styles.loadingText}>Loading your conversations...</Text>\n            ) : filteredChats.length === 0 ? (\n              <Text style={styles.emptyText}>\n                {showHistory \n                  ? \"No chat history yet. Start a new topic!\" \n                  : \"No archived chats yet.\"}\n              </Text>\n            ) : (\n              <View style={styles.historyCards}>\n                {filteredChats.map(renderChatItem)}\n              </View>\n            )}\n          </View>\n\n          <Button mode=\"outlined\" onPress={handleLogout} style={styles.logoutButton}>\n            Logout\n          </Button>\n        </View>\n      </ScrollView>\n      <Snackbar\n        visible={snackbarVisible}\n        onDismiss={() => setSnackbarVisible(false)}\n        duration={2000}\n        style={[\n          styles.snackbar,\n          snackbarType === 'success' ? styles.successSnackbar : styles.errorSnackbar\n        ]}\n      >\n        {snackbarMessage}\n      </Snackbar>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  logo: {\n    width: '100%',\n    height: 159,\n    marginTop: 20,\n    marginBottom: 30,\n  },\n  titleContainer: {\n    marginBottom: 32,\n  },\n  mainTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 24,\n    color: '#FFFFFF',\n    textAlign: 'center',\n    lineHeight: 32,\n    fontWeight: '400',\n  },\n  highlight: {\n    color: '#FFD9D0',\n  },\n  newTopicButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 40,\n    alignItems: 'center',\n  },\n  newTopicText: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFD9D0',\n    fontWeight: '400',\n  },\n  historySection: {\n    flex: 1,\n  },\n  historyHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n    paddingHorizontal: 16,\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#1a1a1a',\n    borderRadius: 25,\n    padding: 4,\n  },\n  toggleButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 20,\n  },\n  activeToggle: {\n    backgroundColor: '#333',\n  },\n  toggleText: {\n    color: '#666',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  activeToggleText: {\n    color: '#fff',\n  },\n  searchContainer: {\n    backgroundColor: '#1a1a1a',\n    borderRadius: 25,\n    padding: 8,\n    overflow: 'hidden',\n  },\n  searchInput: {\n    backgroundColor: 'transparent',\n    paddingHorizontal: 10,\n    color: '#fff',\n    height: 40,\n  },\n  historyCard: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    marginBottom: 16,\n    borderRadius: 12,\n  },\n  historyCardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    padding: 16,\n  },\n  historyCardTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFFFFF',\n    flex: 1,\n    marginRight: 16,\n    fontWeight: '400',\n    lineHeight: 22,\n  },\n  historyCardContent: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.7)',\n    paddingHorizontal: 16,\n    paddingBottom: 12,\n    lineHeight: 20,\n    fontWeight: '400',\n  },\n  historyCardTime: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.5)',\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n    fontWeight: '400',\n  },\n  historyCards: {\n    marginTop: 20,\n  },\n  loadingText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n  },\n  emptyText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n  },\n  logoutButton: {\n    marginTop: 20,\n    borderColor: '#FFD9D0',\n  },\n  cardActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  snackbar: {\n    position: 'absolute',\n    bottom: 0,\n    margin: 16,\n    borderRadius: 8,\n  },\n  successSnackbar: {\n    backgroundColor: '#4CAF50',\n  },\n  errorSnackbar: {\n    backgroundColor: '#F44336',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}