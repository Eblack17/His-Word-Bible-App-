{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"./errors.js\";\nexport var Extrapolation = function (Extrapolation) {\n  Extrapolation[\"IDENTITY\"] = \"identity\";\n  Extrapolation[\"CLAMP\"] = \"clamp\";\n  Extrapolation[\"EXTEND\"] = \"extend\";\n  return Extrapolation;\n}({});\nvar _worklet_15627513880224_init_data = {\n  code: \"function getVal(type, coef, val, leftEdgeOutput, rightEdgeOutput, x) {\\n  const {\\n    Extrapolation\\n  } = this._closure;\\n  switch (type) {\\n    case Extrapolation.IDENTITY:\\n      return x;\\n    case Extrapolation.CLAMP:\\n      if (coef * val < coef * leftEdgeOutput) {\\n        return leftEdgeOutput;\\n      }\\n      return rightEdgeOutput;\\n    case Extrapolation.EXTEND:\\n    default:\\n      return val;\\n  }\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getVal\\\",\\\"type\\\",\\\"coef\\\",\\\"val\\\",\\\"leftEdgeOutput\\\",\\\"rightEdgeOutput\\\",\\\"x\\\",\\\"Extrapolation\\\",\\\"_closure\\\",\\\"IDENTITY\\\",\\\"CLAMP\\\",\\\"EXTEND\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/interpolation.js\\\"],\\\"mappings\\\":\\\"AAkBA,SAAAA,OAAAC,IAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,cAAA,EAAAC,eAAA,EAAAC,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;;IAEA,KAAAD,aAAA,CAAAE,QAAA;;IAEA,KAAAF,aAAA,CAAAG,KAAA;;QAEA,OAAeN,cAAa;MAG1B;MACE,OAAKC,eAAc;SACjBE,aAAQ,CAAAI,MAAA;IACV;MACE,OAAIR,GAAI\\\",\\\"ignoreList\\\":[]}\"\n};\nvar getVal = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(type, coef, val, leftEdgeOutput, rightEdgeOutput, x) {\n    switch (type) {\n      case Extrapolation.IDENTITY:\n        return x;\n      case Extrapolation.CLAMP:\n        if (coef * val < coef * leftEdgeOutput) {\n          return leftEdgeOutput;\n        }\n        return rightEdgeOutput;\n      case Extrapolation.EXTEND:\n      default:\n        return val;\n    }\n  };\n  _f._closure = {\n    Extrapolation: Extrapolation\n  };\n  _f.__initData = _worklet_15627513880224_init_data;\n  _f.__workletHash = 15627513880224;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_4592001914569_init_data = {\n  code: \"function isExtrapolate(value) {\\n  const {\\n    Extrapolation\\n  } = this._closure;\\n  return value === Extrapolation.EXTEND || value === Extrapolation.CLAMP || value === Extrapolation.IDENTITY;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isExtrapolate\\\",\\\"value\\\",\\\"Extrapolation\\\",\\\"_closure\\\",\\\"EXTEND\\\",\\\"CLAMP\\\",\\\"IDENTITY\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/interpolation.js\\\"],\\\"mappings\\\":\\\"AAwCA,SAAAA,aAASA,CAAcC,KAAA,EAAK;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG1B,OACEF,KAAK,KAAKC,aAAa,CAACE,MAAM,IAAIH,KAAK,KAAKC,aAAa,CAACG,KAAK,IAAIJ,KAAK,KAAKC,aAAa,CAACI,QAAA;AAG/F\\\",\\\"ignoreList\\\":[]}\"\n};\nvar isExtrapolate = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(value) {\n    return value === Extrapolation.EXTEND || value === Extrapolation.CLAMP || value === Extrapolation.IDENTITY;\n  };\n  _f._closure = {\n    Extrapolation: Extrapolation\n  };\n  _f.__initData = _worklet_4592001914569_init_data;\n  _f.__workletHash = 4592001914569;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_10348138611897_init_data = {\n  code: \"function validateType(type) {\\n  const {\\n    Extrapolation,\\n    isExtrapolate,\\n    ReanimatedError\\n  } = this._closure;\\n  const extrapolationConfig = {\\n    extrapolateLeft: Extrapolation.EXTEND,\\n    extrapolateRight: Extrapolation.EXTEND\\n  };\\n  if (!type) {\\n    return extrapolationConfig;\\n  }\\n  if (typeof type === 'string') {\\n    if (!isExtrapolate(type)) {\\n      throw new ReanimatedError(\\\"Unsupported value for \\\\\\\"interpolate\\\\\\\" \\\\nSupported values: [\\\\\\\"extend\\\\\\\", \\\\\\\"clamp\\\\\\\", \\\\\\\"identity\\\\\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\\\n Valid example:\\\\n        interpolate(value, [inputRange], [outputRange], \\\\\\\"clamp\\\\\\\")\\\");\\n    }\\n    extrapolationConfig.extrapolateLeft = type;\\n    extrapolationConfig.extrapolateRight = type;\\n    return extrapolationConfig;\\n  }\\n  if (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft) || type.extrapolateRight && !isExtrapolate(type.extrapolateRight)) {\\n    throw new ReanimatedError(\\\"Unsupported value for \\\\\\\"interpolate\\\\\\\" \\\\nSupported values: [\\\\\\\"extend\\\\\\\", \\\\\\\"clamp\\\\\\\", \\\\\\\"identity\\\\\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\\\n Valid example:\\\\n      interpolate(value, [inputRange], [outputRange], {\\\\n        extrapolateLeft: Extrapolation.CLAMP,\\\\n        extrapolateRight: Extrapolation.IDENTITY\\\\n      }})\\\");\\n  }\\n  Object.assign(extrapolationConfig, type);\\n  return extrapolationConfig;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"validateType\\\",\\\"type\\\",\\\"Extrapolation\\\",\\\"isExtrapolate\\\",\\\"ReanimatedError\\\",\\\"_closure\\\",\\\"extrapolationConfig\\\",\\\"extrapolateLeft\\\",\\\"EXTEND\\\",\\\"extrapolateRight\\\",\\\"Object\\\",\\\"assign\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/interpolation.js\\\"],\\\"mappings\\\":\\\"AAiDA,SAAAA,aAAAC,IAAA;EAAA;IAAAC,aAAA;IAAAC,aAAA;IAAAC;EAAA,SAAAC,QAAA;EACA,MAAAC,mBAAA;IACAC,eAAS,EAAYL,aAAO,CAAAM,MAAA;IAG1BC,gBAAA,EAAAP,aAAA,CAAAM;EACA;MACE,CAAAP,IAAA;IACA,OAAAK,mBAAkB;EACpB;EACA,IAAI,OAAOL,IAAA;IACT,KAAAE,aAAO,CAAAF,IAAA,GAAmB;MAC5B,UAAAG,eAAA;IACA;IACEE,mBAAmB,CAAAC,eAAO,GAAAN,IAAA;uBACd,CAAAQ,gBAAe,GAAAR,IAAA;IAE3B,OAAAK,mBAAA;;EAIF,IAAAL,IAAA,CAAAM,eAAA,KAAAJ,aAAA,CAAAF,IAAA,CAAAM,eAAA,KAAAN,IAAA,CAAAQ,gBAAA,KAAAN,aAAA,CAAAF,IAAA,CAAAQ,gBAAA;;EAEA;EACAC,MAAI,CAAAC,MAAK,CAAAL,mBAAoB,EAAAL,IAAA;SAC3BK,mBAAU\\\",\\\"ignoreList\\\":[]}\"\n};\nvar validateType = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f(type) {\n    var extrapolationConfig = {\n      extrapolateLeft: Extrapolation.EXTEND,\n      extrapolateRight: Extrapolation.EXTEND\n    };\n    if (!type) {\n      return extrapolationConfig;\n    }\n    if (typeof type === 'string') {\n      if (!isExtrapolate(type)) {\n        throw new ReanimatedError(`Unsupported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n        interpolate(value, [inputRange], [outputRange], \"clamp\")`);\n      }\n      extrapolationConfig.extrapolateLeft = type;\n      extrapolationConfig.extrapolateRight = type;\n      return extrapolationConfig;\n    }\n    if (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft) || type.extrapolateRight && !isExtrapolate(type.extrapolateRight)) {\n      throw new ReanimatedError(`Unsupported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n      interpolate(value, [inputRange], [outputRange], {\n        extrapolateLeft: Extrapolation.CLAMP,\n        extrapolateRight: Extrapolation.IDENTITY\n      }})`);\n    }\n    Object.assign(extrapolationConfig, type);\n    return extrapolationConfig;\n  };\n  _f._closure = {\n    Extrapolation: Extrapolation,\n    isExtrapolate: isExtrapolate,\n    ReanimatedError: ReanimatedError\n  };\n  _f.__initData = _worklet_10348138611897_init_data;\n  _f.__workletHash = 10348138611897;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_4370790458213_init_data = {\n  code: \"function internalInterpolate(x, narrowedInput, extrapolationConfig) {\\n  const {\\n    getVal\\n  } = this._closure;\\n  const {\\n    leftEdgeInput: leftEdgeInput,\\n    rightEdgeInput: rightEdgeInput,\\n    leftEdgeOutput: leftEdgeOutput,\\n    rightEdgeOutput: rightEdgeOutput\\n  } = narrowedInput;\\n  if (rightEdgeInput - leftEdgeInput === 0) {\\n    return leftEdgeOutput;\\n  }\\n  const progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);\\n  const val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);\\n  const coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;\\n  if (coef * val < coef * leftEdgeOutput) {\\n    return getVal(extrapolationConfig.extrapolateLeft, coef, val, leftEdgeOutput, rightEdgeOutput, x);\\n  } else if (coef * val > coef * rightEdgeOutput) {\\n    return getVal(extrapolationConfig.extrapolateRight, coef, val, leftEdgeOutput, rightEdgeOutput, x);\\n  }\\n  return val;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"internalInterpolate\\\",\\\"x\\\",\\\"narrowedInput\\\",\\\"extrapolationConfig\\\",\\\"getVal\\\",\\\"_closure\\\",\\\"leftEdgeInput\\\",\\\"rightEdgeInput\\\",\\\"leftEdgeOutput\\\",\\\"rightEdgeOutput\\\",\\\"progress\\\",\\\"val\\\",\\\"coef\\\",\\\"extrapolateLeft\\\",\\\"extrapolateRight\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/interpolation.js\\\"],\\\"mappings\\\":\\\"AAmFA,SAAAA,mBAASA,CAAoBC,CAAC,EAAAC,aAAE,EAAaC,mBAAE,EAAmB;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGhE,MAAM;IACJC,aAAa,EAAbA,aAAa;IACbC,cAAc,EAAdA,cAAc;IACdC,cAAc,EAAdA,cAAc;IACdC,eAAA,EAAAA;EACF,CAAC,GAAGP,aAAa;EACjB,IAAIK,cAAc,GAAGD,aAAa,KAAK,CAAC,EAAE;IACxC,OAAOE,cAAc;EACvB;EACA,MAAME,QAAQ,GAAG,CAACT,CAAC,GAAGK,aAAa,KAAKC,cAAc,GAAGD,aAAa,CAAC;EACvE,MAAMK,GAAG,GAAGH,cAAc,GAAGE,QAAQ,IAAID,eAAe,GAAGD,cAAc,CAAC;EAC1E,MAAMI,IAAI,GAAGH,eAAe,IAAID,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;EACvD,IAAII,IAAI,GAAGD,GAAG,GAAGC,IAAI,GAAGJ,cAAc,EAAE;IACtC,OAAOJ,MAAM,CAACD,mBAAmB,CAACU,eAAe,EAAED,IAAI,EAAED,GAAG,EAAEH,cAAc,EAAEC,eAAe,EAAER,CAAC,CAAC;EACnG,CAAC,MAAM,IAAIW,IAAI,GAAGD,GAAG,GAAGC,IAAI,GAAGH,eAAe,EAAE;IAC9C,OAAOL,MAAM,CAACD,mBAAmB,CAACW,gBAAgB,EAAEF,IAAI,EAAED,GAAG,EAAEH,cAAc,EAAEC,eAAe,EAAER,CAAC,CAAC;EACpG;EACA,OAAOU,GAAG;AACZ\\\",\\\"ignoreList\\\":[]}\"\n};\nvar internalInterpolate = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(x, narrowedInput, extrapolationConfig) {\n    var leftEdgeInput = narrowedInput.leftEdgeInput,\n      rightEdgeInput = narrowedInput.rightEdgeInput,\n      leftEdgeOutput = narrowedInput.leftEdgeOutput,\n      rightEdgeOutput = narrowedInput.rightEdgeOutput;\n    if (rightEdgeInput - leftEdgeInput === 0) {\n      return leftEdgeOutput;\n    }\n    var progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);\n    var val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);\n    var coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;\n    if (coef * val < coef * leftEdgeOutput) {\n      return getVal(extrapolationConfig.extrapolateLeft, coef, val, leftEdgeOutput, rightEdgeOutput, x);\n    } else if (coef * val > coef * rightEdgeOutput) {\n      return getVal(extrapolationConfig.extrapolateRight, coef, val, leftEdgeOutput, rightEdgeOutput, x);\n    }\n    return val;\n  };\n  _f._closure = {\n    getVal: getVal\n  };\n  _f.__initData = _worklet_4370790458213_init_data;\n  _f.__workletHash = 4370790458213;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_4024276931879_init_data = {\n  code: \"function interpolate(x, inputRange, outputRange, type) {\\n  const {\\n    ReanimatedError,\\n    validateType,\\n    internalInterpolate\\n  } = this._closure;\\n  if (inputRange.length < 2 || outputRange.length < 2) {\\n    throw new ReanimatedError('Interpolation input and output ranges should contain at least two values.');\\n  }\\n  const extrapolationConfig = validateType(type);\\n  const length = inputRange.length;\\n  const narrowedInput = {\\n    leftEdgeInput: inputRange[0],\\n    rightEdgeInput: inputRange[1],\\n    leftEdgeOutput: outputRange[0],\\n    rightEdgeOutput: outputRange[1]\\n  };\\n  if (length > 2) {\\n    if (x > inputRange[length - 1]) {\\n      narrowedInput.leftEdgeInput = inputRange[length - 2];\\n      narrowedInput.rightEdgeInput = inputRange[length - 1];\\n      narrowedInput.leftEdgeOutput = outputRange[length - 2];\\n      narrowedInput.rightEdgeOutput = outputRange[length - 1];\\n    } else {\\n      for (let i = 1; i < length; ++i) {\\n        if (x <= inputRange[i]) {\\n          narrowedInput.leftEdgeInput = inputRange[i - 1];\\n          narrowedInput.rightEdgeInput = inputRange[i];\\n          narrowedInput.leftEdgeOutput = outputRange[i - 1];\\n          narrowedInput.rightEdgeOutput = outputRange[i];\\n          break;\\n        }\\n      }\\n    }\\n  }\\n  return internalInterpolate(x, narrowedInput, extrapolationConfig);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolate\\\",\\\"x\\\",\\\"inputRange\\\",\\\"outputRange\\\",\\\"type\\\",\\\"ReanimatedError\\\",\\\"validateType\\\",\\\"internalInterpolate\\\",\\\"_closure\\\",\\\"length\\\",\\\"extrapolationConfig\\\",\\\"narrowedInput\\\",\\\"leftEdgeInput\\\",\\\"rightEdgeInput\\\",\\\"leftEdgeOutput\\\",\\\"rightEdgeOutput\\\",\\\"i\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/interpolation.js\\\"],\\\"mappings\\\":\\\"AAyHO,SAAAA,WAASA,CAAYC,CAAC,EAAAC,UAAE,EAAUC,WAAE,EAAWC,IAAE,EAAI;EAAA;IAAAC,eAAA;IAAAC,YAAA;IAAAC;EAAA,SAAAC,QAAA;EAG1D,IAAIN,UAAU,CAACO,MAAM,GAAG,CAAC,IAAIN,WAAW,CAACM,MAAM,GAAG,CAAC,EAAE;IACnD,MAAM,IAAIJ,eAAe,CAAC,2EAA2E,CAAC;EACxG;EACA,MAAMK,mBAAmB,GAAGJ,YAAY,CAACF,IAAI,CAAC;EAC9C,MAAMK,MAAM,GAAGP,UAAU,CAACO,MAAM;EAChC,MAAME,aAAa,GAAG;IACpBC,aAAa,EAAEV,UAAU,CAAC,CAAC,CAAC;IAC5BW,cAAc,EAAEX,UAAU,CAAC,CAAC,CAAC;IAC7BY,cAAc,EAAEX,WAAW,CAAC,CAAC,CAAC;IAC9BY,eAAe,EAAEZ,WAAW,CAAC,CAAC;EAChC,CAAC;EACD,IAAIM,MAAM,GAAG,CAAC,EAAE;IACd,IAAIR,CAAC,GAAGC,UAAU,CAACO,MAAM,GAAG,CAAC,CAAC,EAAE;MAC9BE,aAAa,CAACC,aAAa,GAAGV,UAAU,CAACO,MAAM,GAAG,CAAC,CAAC;MACpDE,aAAa,CAACE,cAAc,GAAGX,UAAU,CAACO,MAAM,GAAG,CAAC,CAAC;MACrDE,aAAa,CAACG,cAAc,GAAGX,WAAW,CAACM,MAAM,GAAG,CAAC,CAAC;MACtDE,aAAa,CAACI,eAAe,GAAGZ,WAAW,CAACM,MAAM,GAAG,CAAC,CAAC;IACzD,CAAC,MAAM;MACL,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,EAAE,EAAEO,CAAC,EAAE;QAC/B,IAAIf,CAAC,IAAIC,UAAU,CAACc,CAAC,CAAC,EAAE;UACtBL,aAAa,CAACC,aAAa,GAAGV,UAAU,CAACc,CAAC,GAAG,CAAC,CAAC;UAC/CL,aAAa,CAACE,cAAc,GAAGX,UAAU,CAACc,CAAC,CAAC;UAC5CL,aAAa,CAACG,cAAc,GAAGX,WAAW,CAACa,CAAC,GAAG,CAAC,CAAC;UACjDL,aAAa,CAACI,eAAe,GAAGZ,WAAW,CAACa,CAAC,CAAC;UAC9C;QACF;MACF;IACF;EACF;EACA,OAAOT,mBAAmB,CAACN,CAAC,EAAEU,aAAa,EAAED,mBAAmB,CAAC;AACnE\\\",\\\"ignoreList\\\":[]}\"\n};\nexport var interpolate = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f(x, inputRange, outputRange, type) {\n    if (inputRange.length < 2 || outputRange.length < 2) {\n      throw new ReanimatedError('Interpolation input and output ranges should contain at least two values.');\n    }\n    var extrapolationConfig = validateType(type);\n    var length = inputRange.length;\n    var narrowedInput = {\n      leftEdgeInput: inputRange[0],\n      rightEdgeInput: inputRange[1],\n      leftEdgeOutput: outputRange[0],\n      rightEdgeOutput: outputRange[1]\n    };\n    if (length > 2) {\n      if (x > inputRange[length - 1]) {\n        narrowedInput.leftEdgeInput = inputRange[length - 2];\n        narrowedInput.rightEdgeInput = inputRange[length - 1];\n        narrowedInput.leftEdgeOutput = outputRange[length - 2];\n        narrowedInput.rightEdgeOutput = outputRange[length - 1];\n      } else {\n        for (var i = 1; i < length; ++i) {\n          if (x <= inputRange[i]) {\n            narrowedInput.leftEdgeInput = inputRange[i - 1];\n            narrowedInput.rightEdgeInput = inputRange[i];\n            narrowedInput.leftEdgeOutput = outputRange[i - 1];\n            narrowedInput.rightEdgeOutput = outputRange[i];\n            break;\n          }\n        }\n      }\n    }\n    return internalInterpolate(x, narrowedInput, extrapolationConfig);\n  };\n  _f._closure = {\n    ReanimatedError: ReanimatedError,\n    validateType: validateType,\n    internalInterpolate: internalInterpolate\n  };\n  _f.__initData = _worklet_4024276931879_init_data;\n  _f.__workletHash = 4024276931879;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_1367031203294_init_data = {\n  code: \"function clamp(value, min, max) {\\n  return Math.min(Math.max(value, min), max);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolation.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"clamp\\\",\\\"value\\\",\\\"min\\\",\\\"max\\\",\\\"Math\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/interpolation.js\\\"],\\\"mappings\\\":\\\"AAwKO,SAAAA,KAASA,CAAMC,KAAA,EAAKC,GAAE,EAAGC,GAAE,EAAG;EAGnC,OAAOC,IAAI,CAACF,GAAG,CAACE,IAAI,CAACD,GAAG,CAACF,KAAK,EAAEC,GAAG,CAAC,EAAEC,GAAG,CAAC;AAC5C\\\",\\\"ignoreList\\\":[]}\"\n};\nexport var clamp = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_1367031203294_init_data;\n  _f.__workletHash = 1367031203294;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();","map":{"version":3,"names":["ReanimatedError","Extrapolation","_worklet_15627513880224_init_data","code","location","sourceMap","getVal","_e","global","Error","_f","type","coef","val","leftEdgeOutput","rightEdgeOutput","x","IDENTITY","CLAMP","EXTEND","_closure","__initData","__workletHash","__stackDetails","__version","_worklet_4592001914569_init_data","isExtrapolate","value","validateType","extrapolationConfig","extrapolateLeft","extrapolateRight","Object","assign","internalInterpolate","narrowedInput","leftEdgeInput","rightEdgeInput","progress","_worklet_4370790458213_init_data","_worklet_4024276931879_init_data","interpolate","inputRange","outputRange","length","i","_worklet_1367031203294_init_data","clamp","min","max","Math"],"sources":["d:\\CODING\\random\\12-13\\node_modules\\react-native-reanimated\\src\\interpolation.ts"],"sourcesContent":["'use strict';\n\nimport { ReanimatedError } from './errors';\n\n/**\n * Extrapolation type.\n *\n * @param IDENTITY - Returns the provided value as is.\n * @param CLAMP - Clamps the value to the edge of the output range.\n * @param EXTEND - Predicts the values beyond the output range.\n */\nexport enum Extrapolation {\n  IDENTITY = 'identity',\n  CLAMP = 'clamp',\n  EXTEND = 'extend',\n}\n\n/** Represents the possible values for extrapolation as a string. */\ntype ExtrapolationAsString = 'identity' | 'clamp' | 'extend';\n\ninterface InterpolationNarrowedInput {\n  leftEdgeInput: number;\n  rightEdgeInput: number;\n  leftEdgeOutput: number;\n  rightEdgeOutput: number;\n}\n\n/** Allows to specify extrapolation for left and right edge of the interpolation. */\nexport interface ExtrapolationConfig {\n  extrapolateLeft?: Extrapolation | string;\n  extrapolateRight?: Extrapolation | string;\n}\n\ninterface RequiredExtrapolationConfig {\n  extrapolateLeft: Extrapolation;\n  extrapolateRight: Extrapolation;\n}\n\n/** Configuration options for extrapolation. */\nexport type ExtrapolationType =\n  | ExtrapolationConfig\n  | Extrapolation\n  | ExtrapolationAsString\n  | undefined;\n\nfunction getVal(\n  type: Extrapolation,\n  coef: number,\n  val: number,\n  leftEdgeOutput: number,\n  rightEdgeOutput: number,\n  x: number\n): number {\n  'worklet';\n\n  switch (type) {\n    case Extrapolation.IDENTITY:\n      return x;\n    case Extrapolation.CLAMP:\n      if (coef * val < coef * leftEdgeOutput) {\n        return leftEdgeOutput;\n      }\n      return rightEdgeOutput;\n    case Extrapolation.EXTEND:\n    default:\n      return val;\n  }\n}\n\nfunction isExtrapolate(value: string): value is Extrapolation {\n  'worklet';\n\n  return (\n    /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n    value === Extrapolation.EXTEND ||\n    value === Extrapolation.CLAMP ||\n    value === Extrapolation.IDENTITY\n    /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n  );\n}\n\n// validates extrapolations type\n// if type is correct, converts it to ExtrapolationConfig\nfunction validateType(type: ExtrapolationType): RequiredExtrapolationConfig {\n  'worklet';\n  // initialize extrapolationConfig with default extrapolation\n  const extrapolationConfig: RequiredExtrapolationConfig = {\n    extrapolateLeft: Extrapolation.EXTEND,\n    extrapolateRight: Extrapolation.EXTEND,\n  };\n\n  if (!type) {\n    return extrapolationConfig;\n  }\n\n  if (typeof type === 'string') {\n    if (!isExtrapolate(type)) {\n      throw new ReanimatedError(\n        `Unsupported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n        interpolate(value, [inputRange], [outputRange], \"clamp\")`\n      );\n    }\n    extrapolationConfig.extrapolateLeft = type;\n    extrapolationConfig.extrapolateRight = type;\n    return extrapolationConfig;\n  }\n\n  // otherwise type is extrapolation config object\n  if (\n    (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft)) ||\n    (type.extrapolateRight && !isExtrapolate(type.extrapolateRight))\n  ) {\n    throw new ReanimatedError(\n      `Unsupported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\n      interpolate(value, [inputRange], [outputRange], {\n        extrapolateLeft: Extrapolation.CLAMP,\n        extrapolateRight: Extrapolation.IDENTITY\n      }})`\n    );\n  }\n\n  Object.assign(extrapolationConfig, type);\n  return extrapolationConfig;\n}\n\nfunction internalInterpolate(\n  x: number,\n  narrowedInput: InterpolationNarrowedInput,\n  extrapolationConfig: RequiredExtrapolationConfig\n) {\n  'worklet';\n  const { leftEdgeInput, rightEdgeInput, leftEdgeOutput, rightEdgeOutput } =\n    narrowedInput;\n  if (rightEdgeInput - leftEdgeInput === 0) {\n    return leftEdgeOutput;\n  }\n  const progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);\n  const val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);\n  const coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;\n\n  if (coef * val < coef * leftEdgeOutput) {\n    return getVal(\n      extrapolationConfig.extrapolateLeft,\n      coef,\n      val,\n      leftEdgeOutput,\n      rightEdgeOutput,\n      x\n    );\n  } else if (coef * val > coef * rightEdgeOutput) {\n    return getVal(\n      extrapolationConfig.extrapolateRight,\n      coef,\n      val,\n      leftEdgeOutput,\n      rightEdgeOutput,\n      x\n    );\n  }\n\n  return val;\n}\n\n/**\n * Lets you map a value from one range to another using linear interpolation.\n *\n * @param value - A number from the `input` range that is going to be mapped to\n *   the `output` range.\n * @param inputRange - An array of numbers specifying the input range of the\n *   interpolation.\n * @param outputRange - An array of numbers specifying the output range of the\n *   interpolation.\n * @param extrapolate - Determines what happens when the `value` goes beyond the\n *   `input` range. Defaults to `Extrapolation.EXTEND` -\n *   {@link ExtrapolationType}.\n * @returns A mapped value within the output range.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/utilities/interpolate\n */\nexport function interpolate(\n  x: number,\n  inputRange: readonly number[],\n  outputRange: readonly number[],\n  type?: ExtrapolationType\n): number {\n  'worklet';\n  if (inputRange.length < 2 || outputRange.length < 2) {\n    throw new ReanimatedError(\n      'Interpolation input and output ranges should contain at least two values.'\n    );\n  }\n\n  const extrapolationConfig = validateType(type);\n  const length = inputRange.length;\n  const narrowedInput: InterpolationNarrowedInput = {\n    leftEdgeInput: inputRange[0],\n    rightEdgeInput: inputRange[1],\n    leftEdgeOutput: outputRange[0],\n    rightEdgeOutput: outputRange[1],\n  };\n  if (length > 2) {\n    if (x > inputRange[length - 1]) {\n      narrowedInput.leftEdgeInput = inputRange[length - 2];\n      narrowedInput.rightEdgeInput = inputRange[length - 1];\n      narrowedInput.leftEdgeOutput = outputRange[length - 2];\n      narrowedInput.rightEdgeOutput = outputRange[length - 1];\n    } else {\n      for (let i = 1; i < length; ++i) {\n        if (x <= inputRange[i]) {\n          narrowedInput.leftEdgeInput = inputRange[i - 1];\n          narrowedInput.rightEdgeInput = inputRange[i];\n          narrowedInput.leftEdgeOutput = outputRange[i - 1];\n          narrowedInput.rightEdgeOutput = outputRange[i];\n          break;\n        }\n      }\n    }\n  }\n\n  return internalInterpolate(x, narrowedInput, extrapolationConfig);\n}\n\n/**\n * Lets you limit a value within a specified range.\n *\n * @param value - A number that will be returned as long as the provided value\n *   is in range between `min` and `max`.\n * @param min - A number which will be returned when provided `value` is lower\n *   than `min`.\n * @param max - A number which will be returned when provided `value` is higher\n *   than `max`.\n * @returns A number between min and max bounds.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/utilities/clamp/\n */\nexport function clamp(value: number, min: number, max: number) {\n  'worklet';\n  return Math.min(Math.max(value, min), max);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}