{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Text, Button, TextInput, Card, IconButton } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { supabase } from \"../lib/supabase\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar chatIcon = require(\"../assets/chat-icon.png\");\nvar archiveIcon = require(\"../assets/archive-icon.png\");\nexport default function Home() {\n  var navigation = useNavigation();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showHistory = _useState2[0],\n    setShowHistory = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chats = _useState6[0],\n    setChats = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    archivedChats = _useState8[0],\n    setArchivedChats = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var searchWidth = useRef(new Animated.Value(40)).current;\n  var toggleSearch = function toggleSearch() {\n    Animated.timing(searchWidth, {\n      toValue: searchWidth._value === 40 ? Dimensions.get('window').width - 40 : 40,\n      duration: 300\n    }).start();\n  };\n  useFocusEffect(React.useCallback(function () {\n    loadChats();\n  }, []));\n  var handleLogout = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield supabase.auth.signOut();\n        navigation.navigate('Login');\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var loadChats = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$supabase$auth$ = yield supabase.auth.getUser(),\n          user = _yield$supabase$auth$.data.user;\n        if (!user) {\n          console.error('No user found');\n          navigation.navigate('Login');\n          return;\n        }\n        console.log('Loading chats for user:', user.id);\n        var _yield$supabase$from$ = yield supabase.from('chats').select('*').limit(1),\n          tableInfo = _yield$supabase$from$.data,\n          tableError = _yield$supabase$from$.error;\n        if (tableError) {\n          console.error('Error checking table:', tableError);\n          return;\n        }\n        console.log('Table structure:', tableInfo);\n        var _yield$supabase$from$2 = yield supabase.from('chats').select(`\n          id,\n          user_id,\n          question,\n          response,\n          created_at,\n          is_archived\n        `).eq('user_id', user.id).order('created_at', {\n            ascending: false\n          }),\n          chatData = _yield$supabase$from$2.data,\n          error = _yield$supabase$from$2.error;\n        if (error) {\n          console.error('Error loading chats:', error);\n          return;\n        }\n        console.log('Loaded chats:', chatData);\n        if (!chatData) {\n          console.log('No chat data returned');\n          setChats([]);\n          setArchivedChats([]);\n          return;\n        }\n        var processedChats = chatData.map(function (chat) {\n          return _objectSpread(_objectSpread({}, chat), {}, {\n            response: typeof chat.response === 'string' ? JSON.parse(chat.response) : chat.response\n          });\n        });\n        console.log('Processed chats:', processedChats);\n        setChats(processedChats.filter(function (chat) {\n          return !chat.is_archived;\n        }));\n        setArchivedChats(processedChats.filter(function (chat) {\n          return chat.is_archived;\n        }));\n      } catch (error) {\n        console.error('Error in loadChats:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadChats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleArchiveToggle = function () {\n    var _ref3 = _asyncToGenerator(function* (chatId, currentlyArchived) {\n      try {\n        var _yield$supabase$from$3 = yield supabase.from('chats').update({\n            is_archived: !currentlyArchived\n          }).eq('id', chatId),\n          error = _yield$supabase$from$3.error;\n        if (error) {\n          console.error('Error toggling archive status:', error);\n          return;\n        }\n        loadChats();\n      } catch (error) {\n        console.error('Error in handleArchiveToggle:', error);\n      }\n    });\n    return function handleArchiveToggle(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var filteredChats = (showHistory ? chats : archivedChats).filter(function (chat) {\n    return chat.question.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  var renderChatItem = function renderChatItem(chat) {\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Response', {\n          question: chat.question,\n          verse: chat.response.verse,\n          reference: chat.response.reference,\n          relevance: chat.response.relevance,\n          explanation: chat.response.explanation\n        });\n      },\n      children: _jsxs(Card, {\n        style: styles.historyCard,\n        children: [_jsxs(View, {\n          style: styles.historyCardHeader,\n          children: [_jsx(Text, {\n            style: styles.historyCardTitle,\n            children: chat.question\n          }), _jsx(IconButton, {\n            icon: chat.is_archived ? 'archive-remove' : 'archive',\n            size: 24,\n            onPress: function onPress() {\n              return handleArchiveToggle(chat.id, chat.is_archived);\n            }\n          })]\n        }), _jsxs(Text, {\n          style: styles.historyCardContent,\n          children: [chat.response.verse, \" - \", chat.response.reference]\n        }), _jsx(Text, {\n          style: styles.historyCardTime,\n          children: new Date(chat.created_at).toLocaleDateString()\n        })]\n      })\n    }, chat.id);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Image, {\n          source: require(\"../assets/logo-full.png\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        }), _jsxs(View, {\n          style: styles.titleContainer,\n          children: [_jsx(Text, {\n            style: styles.mainTitle,\n            children: \"Seek Your Verse,\"\n          }), _jsxs(Text, {\n            style: styles.mainTitle,\n            children: [\"Find Your \", _jsx(Text, {\n              style: [styles.mainTitle, styles.highlight],\n              children: \"Path\"\n            })]\n          })]\n        }), _jsx(TouchableOpacity, {\n          style: styles.newTopicButton,\n          onPress: function onPress() {\n            return navigation.navigate('Question');\n          },\n          children: _jsx(Text, {\n            style: styles.newTopicText,\n            children: \"+ New Topic\"\n          })\n        }), _jsxs(View, {\n          style: styles.historySection,\n          children: [_jsxs(View, {\n            style: styles.historyHeader,\n            children: [_jsx(Text, {\n              style: styles.historyTitle,\n              children: \"History\"\n            }), _jsxs(Animated.View, {\n              style: [styles.searchContainer, {\n                width: searchWidth,\n                flexDirection: 'row',\n                alignItems: 'center'\n              }],\n              children: [_jsx(TouchableOpacity, {\n                onPress: toggleSearch,\n                children: _jsx(MaterialCommunityIcons, {\n                  name: \"magnify\",\n                  size: 24,\n                  color: \"#fff\"\n                })\n              }), _jsx(Animated.View, {\n                style: {\n                  flex: 1,\n                  overflow: 'hidden',\n                  width: searchWidth\n                },\n                children: _jsx(TextInput, {\n                  style: styles.searchInput,\n                  placeholder: \"Search history...\",\n                  value: searchQuery,\n                  onChangeText: setSearchQuery,\n                  placeholderTextColor: \"#666\"\n                })\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.toggleContainer,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.toggleButton, showHistory && styles.activeToggle],\n              onPress: function onPress() {\n                return setShowHistory(true);\n              },\n              children: _jsxs(View, {\n                style: styles.buttonContent,\n                children: [_jsx(Image, {\n                  source: chatIcon,\n                  style: [styles.buttonIcon, showHistory && styles.activeButtonIcon]\n                }), _jsx(Text, {\n                  style: [styles.toggleText, showHistory && styles.activeToggleText],\n                  children: \"Chats\"\n                })]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.toggleButton, !showHistory && styles.activeToggle],\n              onPress: function onPress() {\n                return setShowHistory(false);\n              },\n              children: _jsxs(View, {\n                style: styles.buttonContent,\n                children: [_jsx(Image, {\n                  source: archiveIcon,\n                  style: [styles.buttonIcon, !showHistory && styles.activeButtonIcon]\n                }), _jsx(Text, {\n                  style: [styles.toggleText, !showHistory && styles.activeToggleText],\n                  children: \"Archived\"\n                })]\n              })\n            })]\n          }), loading ? _jsx(Text, {\n            style: styles.loadingText,\n            children: \"Loading your conversations...\"\n          }) : filteredChats.length === 0 ? _jsx(Text, {\n            style: styles.emptyText,\n            children: showHistory ? \"No chat history yet. Start a new topic!\" : \"No archived chats yet.\"\n          }) : _jsx(View, {\n            style: styles.historyCards,\n            children: filteredChats.map(renderChatItem)\n          })]\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          onPress: handleLogout,\n          style: styles.logoutButton,\n          children: \"Logout\"\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000'\n  },\n  content: {\n    flex: 1,\n    padding: 20\n  },\n  scrollContent: {\n    flexGrow: 1\n  },\n  logo: {\n    width: '100%',\n    height: 159,\n    marginTop: 20,\n    marginBottom: 30\n  },\n  titleContainer: {\n    marginBottom: 40,\n    alignItems: 'center'\n  },\n  mainTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 32,\n    color: '#FFFFFF',\n    textAlign: 'center',\n    lineHeight: 40,\n    fontWeight: '400'\n  },\n  highlight: {\n    color: '#FFD9D0'\n  },\n  newTopicButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 40,\n    alignItems: 'center'\n  },\n  newTopicText: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFD9D0',\n    fontWeight: '400'\n  },\n  historySection: {\n    flex: 1\n  },\n  historyHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  historyTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 24,\n    color: '#FFFFFF',\n    fontWeight: '400'\n  },\n  searchContainer: {\n    backgroundColor: '#1a1a1a',\n    borderRadius: 25,\n    padding: 8,\n    overflow: 'hidden'\n  },\n  searchInput: {\n    backgroundColor: 'transparent',\n    paddingHorizontal: 10,\n    color: '#fff',\n    height: 40\n  },\n  historyCard: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    marginBottom: 16,\n    borderRadius: 12\n  },\n  historyCardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    padding: 16\n  },\n  historyCardTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFFFFF',\n    flex: 1,\n    marginRight: 16,\n    fontWeight: '400',\n    lineHeight: 22\n  },\n  historyCardContent: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.7)',\n    paddingHorizontal: 16,\n    paddingBottom: 12,\n    lineHeight: 20,\n    fontWeight: '400'\n  },\n  historyCardTime: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.5)',\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n    fontWeight: '400'\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    marginBottom: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  toggleButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 25,\n    marginHorizontal: 5,\n    backgroundColor: '#1A1A1A',\n    minWidth: 120\n  },\n  activeToggle: {\n    backgroundColor: '#FFFFFF'\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonIcon: {\n    width: 20,\n    height: 20,\n    marginRight: 8,\n    tintColor: '#666'\n  },\n  activeButtonIcon: {\n    tintColor: '#000000'\n  },\n  toggleText: {\n    fontSize: 16,\n    color: '#666',\n    fontWeight: '500'\n  },\n  activeToggleText: {\n    color: '#000000',\n    fontWeight: '600'\n  },\n  historyCards: {\n    marginTop: 20\n  },\n  loadingText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16\n  },\n  emptyText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16\n  },\n  logoutButton: {\n    marginTop: 20,\n    borderColor: '#FFD9D0'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","StyleSheet","View","ScrollView","TouchableOpacity","Image","Animated","Dimensions","Text","Button","TextInput","Card","IconButton","SafeAreaView","useNavigation","useFocusEffect","supabase","MaterialCommunityIcons","jsx","_jsx","jsxs","_jsxs","chatIcon","require","archiveIcon","Home","navigation","_useState","_useState2","_slicedToArray","showHistory","setShowHistory","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","chats","setChats","_useState7","_useState8","archivedChats","setArchivedChats","_useState9","_useState10","loading","setLoading","searchWidth","Value","current","toggleSearch","timing","toValue","_value","get","width","duration","start","useCallback","loadChats","handleLogout","_ref","_asyncToGenerator","auth","signOut","navigate","error","console","apply","arguments","_ref2","_yield$supabase$auth$","getUser","user","data","log","id","_yield$supabase$from$","from","select","limit","tableInfo","tableError","_yield$supabase$from$2","eq","order","ascending","chatData","processedChats","map","chat","_objectSpread","response","JSON","parse","filter","is_archived","handleArchiveToggle","_ref3","chatId","currentlyArchived","_yield$supabase$from$3","update","_x","_x2","filteredChats","question","toLowerCase","includes","renderChatItem","onPress","verse","reference","relevance","explanation","children","style","styles","historyCard","historyCardHeader","historyCardTitle","icon","size","historyCardContent","historyCardTime","Date","created_at","toLocaleDateString","container","contentContainerStyle","scrollContent","content","source","logo","resizeMode","titleContainer","mainTitle","highlight","newTopicButton","newTopicText","historySection","historyHeader","historyTitle","searchContainer","flexDirection","alignItems","name","color","flex","overflow","searchInput","placeholder","value","onChangeText","placeholderTextColor","toggleContainer","toggleButton","activeToggle","buttonContent","buttonIcon","activeButtonIcon","toggleText","activeToggleText","loadingText","length","emptyText","historyCards","mode","logoutButton","create","backgroundColor","padding","flexGrow","height","marginTop","marginBottom","fontFamily","fontSize","textAlign","lineHeight","fontWeight","borderRadius","justifyContent","paddingHorizontal","marginRight","paddingBottom","paddingVertical","marginHorizontal","minWidth","tintColor","borderColor"],"sources":["d:/CODING/random/12-13/bible_verse_app/frontend/pages/Home.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { StyleSheet, View, ScrollView, TouchableOpacity, Image, Animated, Dimensions } from 'react-native';\nimport { Text, Button, TextInput, Card, IconButton } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { supabase } from '../lib/supabase';\nimport { NavigationProps } from '../navigation.types';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\n// Import icons\nconst chatIcon = require('../assets/chat-icon.png');\nconst archiveIcon = require('../assets/archive-icon.png');\n\ninterface ChatItem {\n  id: string;\n  question: string;\n  response: {\n    verse: string;\n    reference: string;\n    relevance: string;\n    explanation: string;\n  };\n  created_at: string;\n  is_archived: boolean;\n}\n\nexport default function Home() {\n  const navigation = useNavigation<NavigationProps>();\n  const [showHistory, setShowHistory] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [chats, setChats] = useState<ChatItem[]>([]);\n  const [archivedChats, setArchivedChats] = useState<ChatItem[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const searchWidth = useRef(new Animated.Value(40)).current;\n\n  const toggleSearch = () => {\n    Animated.timing(searchWidth, {\n      toValue: searchWidth._value === 40 ? Dimensions.get('window').width - 40 : 40,\n      duration: 300,\n    }).start();\n  };\n\n  // Load chats when the screen comes into focus\n  useFocusEffect(\n    React.useCallback(() => {\n      loadChats();\n    }, [])\n  );\n\n  const handleLogout = async () => {\n    try {\n      await supabase.auth.signOut();\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  const loadChats = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.error('No user found');\n        navigation.navigate('Login');\n        return;\n      }\n\n      console.log('Loading chats for user:', user.id);\n\n      // First, check if the table exists and has the correct structure\n      const { data: tableInfo, error: tableError } = await supabase\n        .from('chats')\n        .select('*')\n        .limit(1);\n\n      if (tableError) {\n        console.error('Error checking table:', tableError);\n        return;\n      }\n\n      console.log('Table structure:', tableInfo);\n\n      // Now fetch the actual chats with all fields explicitly specified\n      const { data: chatData, error } = await supabase\n        .from('chats')\n        .select(`\n          id,\n          user_id,\n          question,\n          response,\n          created_at,\n          is_archived\n        `)\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        console.error('Error loading chats:', error);\n        return;\n      }\n\n      console.log('Loaded chats:', chatData);\n\n      if (!chatData) {\n        console.log('No chat data returned');\n        setChats([]);\n        setArchivedChats([]);\n        return;\n      }\n\n      // Parse the response field if it's stored as a string\n      const processedChats = chatData.map(chat => ({\n        ...chat,\n        response: typeof chat.response === 'string' \n          ? JSON.parse(chat.response)\n          : chat.response\n      }));\n\n      console.log('Processed chats:', processedChats);\n\n      setChats(processedChats.filter(chat => !chat.is_archived));\n      setArchivedChats(processedChats.filter(chat => chat.is_archived));\n    } catch (error) {\n      console.error('Error in loadChats:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleArchiveToggle = async (chatId: string, currentlyArchived: boolean) => {\n    try {\n      const { error } = await supabase\n        .from('chats')\n        .update({ is_archived: !currentlyArchived })\n        .eq('id', chatId);\n\n      if (error) {\n        console.error('Error toggling archive status:', error);\n        return;\n      }\n\n      // Reload chats after updating\n      loadChats();\n    } catch (error) {\n      console.error('Error in handleArchiveToggle:', error);\n    }\n  };\n\n  const filteredChats = (showHistory ? chats : archivedChats).filter(chat =>\n    chat.question.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const renderChatItem = (chat: ChatItem) => (\n    <TouchableOpacity\n      key={chat.id}\n      onPress={() => navigation.navigate('Response', {\n        question: chat.question,\n        verse: chat.response.verse,\n        reference: chat.response.reference,\n        relevance: chat.response.relevance,\n        explanation: chat.response.explanation\n      })}\n    >\n      <Card style={styles.historyCard}>\n        <View style={styles.historyCardHeader}>\n          <Text style={styles.historyCardTitle}>{chat.question}</Text>\n          <IconButton\n            icon={chat.is_archived ? 'archive-remove' : 'archive'}\n            size={24}\n            onPress={() => handleArchiveToggle(chat.id, chat.is_archived)}\n          />\n        </View>\n        <Text style={styles.historyCardContent}>\n          {chat.response.verse} - {chat.response.reference}\n        </Text>\n        <Text style={styles.historyCardTime}>\n          {new Date(chat.created_at).toLocaleDateString()}\n        </Text>\n      </Card>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.content}>\n          <Image \n            source={require('../assets/logo-full.png')} \n            style={styles.logo} \n            resizeMode=\"contain\"\n          />\n\n          <View style={styles.titleContainer}>\n            <Text style={styles.mainTitle}>Seek Your Verse,</Text>\n            <Text style={styles.mainTitle}>Find Your <Text style={[styles.mainTitle, styles.highlight]}>Path</Text></Text>\n          </View>\n\n          <TouchableOpacity \n            style={styles.newTopicButton} \n            onPress={() => navigation.navigate('Question')}\n          >\n            <Text style={styles.newTopicText}>+ New Topic</Text>\n          </TouchableOpacity>\n\n          <View style={styles.historySection}>\n            <View style={styles.historyHeader}>\n              <Text style={styles.historyTitle}>History</Text>\n              <Animated.View style={[styles.searchContainer, {\n                width: searchWidth,\n                flexDirection: 'row',\n                alignItems: 'center',\n              }]}>\n                <TouchableOpacity onPress={toggleSearch}>\n                  <MaterialCommunityIcons name=\"magnify\" size={24} color=\"#fff\" />\n                </TouchableOpacity>\n                <Animated.View style={{ flex: 1, overflow: 'hidden', width: searchWidth }}>\n                  <TextInput\n                    style={styles.searchInput}\n                    placeholder=\"Search history...\"\n                    value={searchQuery}\n                    onChangeText={setSearchQuery}\n                    placeholderTextColor=\"#666\"\n                  />\n                </Animated.View>\n              </Animated.View>\n            </View>\n\n            <View style={styles.toggleContainer}>\n              <TouchableOpacity \n                style={[styles.toggleButton, showHistory && styles.activeToggle]}\n                onPress={() => setShowHistory(true)}\n              >\n                <View style={styles.buttonContent}>\n                  <Image \n                    source={chatIcon}\n                    style={[\n                      styles.buttonIcon,\n                      showHistory && styles.activeButtonIcon\n                    ]}\n                  />\n                  <Text style={[styles.toggleText, showHistory && styles.activeToggleText]}>Chats</Text>\n                </View>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={[styles.toggleButton, !showHistory && styles.activeToggle]}\n                onPress={() => setShowHistory(false)}\n              >\n                <View style={styles.buttonContent}>\n                  <Image \n                    source={archiveIcon}\n                    style={[\n                      styles.buttonIcon,\n                      !showHistory && styles.activeButtonIcon\n                    ]}\n                  />\n                  <Text style={[styles.toggleText, !showHistory && styles.activeToggleText]}>Archived</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n\n            {loading ? (\n              <Text style={styles.loadingText}>Loading your conversations...</Text>\n            ) : filteredChats.length === 0 ? (\n              <Text style={styles.emptyText}>\n                {showHistory \n                  ? \"No chat history yet. Start a new topic!\" \n                  : \"No archived chats yet.\"}\n              </Text>\n            ) : (\n              <View style={styles.historyCards}>\n                {filteredChats.map(renderChatItem)}\n              </View>\n            )}\n          </View>\n\n          <Button mode=\"outlined\" onPress={handleLogout} style={styles.logoutButton}>\n            Logout\n          </Button>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  logo: {\n    width: '100%',\n    height: 159,\n    marginTop: 20,\n    marginBottom: 30,\n  },\n  titleContainer: {\n    marginBottom: 40,\n    alignItems: 'center',\n  },\n  mainTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 32,\n    color: '#FFFFFF',\n    textAlign: 'center',\n    lineHeight: 40,\n    fontWeight: '400',\n  },\n  highlight: {\n    color: '#FFD9D0',\n  },\n  newTopicButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 40,\n    alignItems: 'center',\n  },\n  newTopicText: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFD9D0',\n    fontWeight: '400',\n  },\n  historySection: {\n    flex: 1,\n  },\n  historyHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  historyTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 24,\n    color: '#FFFFFF',\n    fontWeight: '400',\n  },\n  searchContainer: {\n    backgroundColor: '#1a1a1a',\n    borderRadius: 25,\n    padding: 8,\n    overflow: 'hidden',\n  },\n  searchInput: {\n    backgroundColor: 'transparent',\n    paddingHorizontal: 10,\n    color: '#fff',\n    height: 40,\n  },\n  historyCard: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    marginBottom: 16,\n    borderRadius: 12,\n  },\n  historyCardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    padding: 16,\n  },\n  historyCardTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFFFFF',\n    flex: 1,\n    marginRight: 16,\n    fontWeight: '400',\n    lineHeight: 22,\n  },\n  historyCardContent: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.7)',\n    paddingHorizontal: 16,\n    paddingBottom: 12,\n    lineHeight: 20,\n    fontWeight: '400',\n  },\n  historyCardTime: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.5)',\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n    fontWeight: '400',\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    marginBottom: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  toggleButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 25,\n    marginHorizontal: 5,\n    backgroundColor: '#1A1A1A',\n    minWidth: 120,\n  },\n  activeToggle: {\n    backgroundColor: '#FFFFFF',\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonIcon: {\n    width: 20,\n    height: 20,\n    marginRight: 8,\n    tintColor: '#666',\n  },\n  activeButtonIcon: {\n    tintColor: '#000000',\n  },\n  toggleText: {\n    fontSize: 16,\n    color: '#666',\n    fontWeight: '500',\n  },\n  activeToggleText: {\n    color: '#000000',\n    fontWeight: '600',\n  },\n  historyCards: {\n    marginTop: 20,\n  },\n  loadingText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n  },\n  emptyText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n  },\n  logoutButton: {\n    marginTop: 20,\n    borderColor: '#FFD9D0',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}