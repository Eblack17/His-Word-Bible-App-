{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, Button, TextInput, Card, IconButton } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { supabase } from \"../lib/supabase\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar chatIcon = require(\"../assets/chat-icon.png\");\nvar archiveIcon = require(\"../assets/archive-icon.png\");\nexport default function Home() {\n  var navigation = useNavigation();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    showHistory = _useState2[0],\n    setShowHistory = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chats = _useState6[0],\n    setChats = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    archivedChats = _useState8[0],\n    setArchivedChats = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  useFocusEffect(React.useCallback(function () {\n    loadChats();\n  }, []));\n  var handleLogout = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield supabase.auth.signOut();\n        navigation.navigate('Login');\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var loadChats = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var _yield$supabase$auth$ = yield supabase.auth.getUser(),\n          user = _yield$supabase$auth$.data.user;\n        if (!user) {\n          console.error('No user found');\n          navigation.navigate('Login');\n          return;\n        }\n        console.log('Loading chats for user:', user.id);\n        var _yield$supabase$from$ = yield supabase.from('chats').select('*').limit(1),\n          tableInfo = _yield$supabase$from$.data,\n          tableError = _yield$supabase$from$.error;\n        if (tableError) {\n          console.error('Error checking table:', tableError);\n          return;\n        }\n        console.log('Table structure:', tableInfo);\n        var _yield$supabase$from$2 = yield supabase.from('chats').select(`\n          id,\n          user_id,\n          question,\n          response,\n          created_at,\n          is_archived\n        `).eq('user_id', user.id).order('created_at', {\n            ascending: false\n          }),\n          chatData = _yield$supabase$from$2.data,\n          error = _yield$supabase$from$2.error;\n        if (error) {\n          console.error('Error loading chats:', error);\n          return;\n        }\n        console.log('Loaded chats:', chatData);\n        if (!chatData) {\n          console.log('No chat data returned');\n          setChats([]);\n          setArchivedChats([]);\n          return;\n        }\n        var processedChats = chatData.map(function (chat) {\n          return _objectSpread(_objectSpread({}, chat), {}, {\n            response: typeof chat.response === 'string' ? JSON.parse(chat.response) : chat.response\n          });\n        });\n        console.log('Processed chats:', processedChats);\n        setChats(processedChats.filter(function (chat) {\n          return !chat.is_archived;\n        }));\n        setArchivedChats(processedChats.filter(function (chat) {\n          return chat.is_archived;\n        }));\n      } catch (error) {\n        console.error('Error in loadChats:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadChats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleArchiveToggle = function () {\n    var _ref3 = _asyncToGenerator(function* (chatId, currentlyArchived) {\n      try {\n        var _yield$supabase$from$3 = yield supabase.from('chats').update({\n            is_archived: !currentlyArchived\n          }).eq('id', chatId),\n          error = _yield$supabase$from$3.error;\n        if (error) {\n          console.error('Error toggling archive status:', error);\n          return;\n        }\n        loadChats();\n      } catch (error) {\n        console.error('Error in handleArchiveToggle:', error);\n      }\n    });\n    return function handleArchiveToggle(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var filteredChats = (showHistory ? chats : archivedChats).filter(function (chat) {\n    return chat.question.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  var renderChatItem = function renderChatItem(chat) {\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Response', {\n          question: chat.question,\n          verse: chat.response.verse,\n          reference: chat.response.reference,\n          relevance: chat.response.relevance,\n          explanation: chat.response.explanation\n        });\n      },\n      children: _jsxs(Card, {\n        style: styles.historyCard,\n        children: [_jsxs(View, {\n          style: styles.historyCardHeader,\n          children: [_jsx(Text, {\n            style: styles.historyCardTitle,\n            children: chat.question\n          }), _jsx(IconButton, {\n            icon: chat.is_archived ? 'archive-remove' : 'archive',\n            size: 24,\n            onPress: function onPress() {\n              return handleArchiveToggle(chat.id, chat.is_archived);\n            }\n          })]\n        }), _jsxs(Text, {\n          style: styles.historyCardContent,\n          children: [chat.response.verse, \" - \", chat.response.reference]\n        }), _jsx(Text, {\n          style: styles.historyCardTime,\n          children: new Date(chat.created_at).toLocaleDateString()\n        })]\n      })\n    }, chat.id);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Image, {\n          source: require(\"../assets/logo-full.png\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        }), _jsxs(View, {\n          style: styles.titleContainer,\n          children: [_jsx(Text, {\n            style: styles.mainTitle,\n            children: \"Seek Your Verse,\"\n          }), _jsxs(Text, {\n            style: styles.mainTitle,\n            children: [\"Find Your \", _jsx(Text, {\n              style: [styles.mainTitle, styles.highlight],\n              children: \"Path\"\n            })]\n          })]\n        }), _jsx(TouchableOpacity, {\n          style: styles.newTopicButton,\n          onPress: function onPress() {\n            return navigation.navigate('Question');\n          },\n          children: _jsx(Text, {\n            style: styles.newTopicText,\n            children: \"+ New Topic\"\n          })\n        }), _jsxs(View, {\n          style: styles.historySection,\n          children: [_jsxs(View, {\n            style: styles.historyHeader,\n            children: [_jsx(Text, {\n              style: styles.historyTitle,\n              children: \"History\"\n            }), _jsx(View, {\n              style: styles.searchContainer,\n              children: _jsx(TextInput, {\n                style: styles.searchInput,\n                placeholder: \"Search ...\",\n                placeholderTextColor: \"#666\",\n                mode: \"flat\",\n                value: searchQuery,\n                onChangeText: setSearchQuery,\n                theme: {\n                  colors: {\n                    primary: '#FFD9D0',\n                    underlineColor: 'transparent'\n                  }\n                },\n                underlineColor: \"transparent\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.toggleContainer,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.toggleButton, showHistory && styles.activeToggle],\n              onPress: function onPress() {\n                return setShowHistory(true);\n              },\n              children: _jsxs(View, {\n                style: styles.buttonContent,\n                children: [_jsx(Image, {\n                  source: chatIcon,\n                  style: [styles.buttonIcon, showHistory && styles.activeButtonIcon]\n                }), _jsx(Text, {\n                  style: [styles.toggleText, showHistory && styles.activeToggleText],\n                  children: \"Chats\"\n                })]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.toggleButton, !showHistory && styles.activeToggle],\n              onPress: function onPress() {\n                return setShowHistory(false);\n              },\n              children: _jsxs(View, {\n                style: styles.buttonContent,\n                children: [_jsx(Image, {\n                  source: archiveIcon,\n                  style: [styles.buttonIcon, !showHistory && styles.activeButtonIcon]\n                }), _jsx(Text, {\n                  style: [styles.toggleText, !showHistory && styles.activeToggleText],\n                  children: \"Archived\"\n                })]\n              })\n            })]\n          }), loading ? _jsx(Text, {\n            style: styles.loadingText,\n            children: \"Loading your conversations...\"\n          }) : filteredChats.length === 0 ? _jsx(Text, {\n            style: styles.emptyText,\n            children: showHistory ? \"No chat history yet. Start a new topic!\" : \"No archived chats yet.\"\n          }) : _jsx(View, {\n            style: styles.historyCards,\n            children: filteredChats.map(renderChatItem)\n          })]\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          onPress: handleLogout,\n          style: styles.logoutButton,\n          children: \"Logout\"\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000'\n  },\n  content: {\n    flex: 1,\n    padding: 20\n  },\n  scrollContent: {\n    flexGrow: 1\n  },\n  logo: {\n    width: '100%',\n    height: 159,\n    marginTop: 20,\n    marginBottom: 30\n  },\n  titleContainer: {\n    marginBottom: 40,\n    alignItems: 'center'\n  },\n  mainTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 32,\n    color: '#FFFFFF',\n    textAlign: 'center',\n    lineHeight: 40,\n    fontWeight: '400'\n  },\n  highlight: {\n    color: '#FFD9D0'\n  },\n  newTopicButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 40,\n    alignItems: 'center'\n  },\n  newTopicText: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFD9D0',\n    fontWeight: '400'\n  },\n  historySection: {\n    flex: 1\n  },\n  historyHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  historyTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 24,\n    color: '#FFFFFF',\n    fontWeight: '400'\n  },\n  searchContainer: {\n    flex: 1,\n    marginLeft: 16\n  },\n  historyCard: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    marginBottom: 16,\n    borderRadius: 12\n  },\n  historyCardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    padding: 16\n  },\n  historyCardTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFFFFF',\n    flex: 1,\n    marginRight: 16,\n    fontWeight: '400',\n    lineHeight: 22\n  },\n  historyCardContent: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.7)',\n    paddingHorizontal: 16,\n    paddingBottom: 12,\n    lineHeight: 20,\n    fontWeight: '400'\n  },\n  historyCardTime: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.5)',\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n    fontWeight: '400'\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    marginBottom: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  toggleButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 25,\n    marginHorizontal: 5,\n    backgroundColor: '#1A1A1A',\n    minWidth: 120\n  },\n  activeToggle: {\n    backgroundColor: '#FFFFFF'\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonIcon: {\n    width: 20,\n    height: 20,\n    marginRight: 8,\n    tintColor: '#666'\n  },\n  activeButtonIcon: {\n    tintColor: '#000000'\n  },\n  toggleText: {\n    fontSize: 16,\n    color: '#666',\n    fontWeight: '500'\n  },\n  activeToggleText: {\n    color: '#000000',\n    fontWeight: '600'\n  },\n  historyCards: {\n    marginTop: 20\n  },\n  loadingText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16\n  },\n  emptyText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16\n  },\n  logoutButton: {\n    marginTop: 20,\n    borderColor: '#FFD9D0'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","ScrollView","TouchableOpacity","Image","Text","Button","TextInput","Card","IconButton","SafeAreaView","useNavigation","useFocusEffect","supabase","jsx","_jsx","jsxs","_jsxs","chatIcon","require","archiveIcon","Home","navigation","_useState","_useState2","_slicedToArray","showHistory","setShowHistory","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","chats","setChats","_useState7","_useState8","archivedChats","setArchivedChats","_useState9","_useState10","loading","setLoading","useCallback","loadChats","handleLogout","_ref","_asyncToGenerator","auth","signOut","navigate","error","console","apply","arguments","_ref2","_yield$supabase$auth$","getUser","user","data","log","id","_yield$supabase$from$","from","select","limit","tableInfo","tableError","_yield$supabase$from$2","eq","order","ascending","chatData","processedChats","map","chat","_objectSpread","response","JSON","parse","filter","is_archived","handleArchiveToggle","_ref3","chatId","currentlyArchived","_yield$supabase$from$3","update","_x","_x2","filteredChats","question","toLowerCase","includes","renderChatItem","onPress","verse","reference","relevance","explanation","children","style","styles","historyCard","historyCardHeader","historyCardTitle","icon","size","historyCardContent","historyCardTime","Date","created_at","toLocaleDateString","container","contentContainerStyle","scrollContent","content","source","logo","resizeMode","titleContainer","mainTitle","highlight","newTopicButton","newTopicText","historySection","historyHeader","historyTitle","searchContainer","searchInput","placeholder","placeholderTextColor","mode","value","onChangeText","theme","colors","primary","underlineColor","toggleContainer","toggleButton","activeToggle","buttonContent","buttonIcon","activeButtonIcon","toggleText","activeToggleText","loadingText","length","emptyText","historyCards","logoutButton","create","flex","backgroundColor","padding","flexGrow","width","height","marginTop","marginBottom","alignItems","fontFamily","fontSize","color","textAlign","lineHeight","fontWeight","borderRadius","flexDirection","justifyContent","marginLeft","marginRight","paddingHorizontal","paddingBottom","paddingVertical","marginHorizontal","minWidth","tintColor","borderColor"],"sources":["d:/CODING/random/12-13/bible_verse_app/frontend/pages/Home.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { Text, Button, TextInput, Card, IconButton } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { supabase } from '../lib/supabase';\nimport { NavigationProps } from '../navigation.types';\n\n// Import icons\nconst chatIcon = require('../assets/chat-icon.png');\nconst archiveIcon = require('../assets/archive-icon.png');\n\ninterface ChatItem {\n  id: string;\n  question: string;\n  response: {\n    verse: string;\n    reference: string;\n    relevance: string;\n    explanation: string;\n  };\n  created_at: string;\n  is_archived: boolean;\n}\n\nexport default function Home() {\n  const navigation = useNavigation<NavigationProps>();\n  const [showHistory, setShowHistory] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [chats, setChats] = useState<ChatItem[]>([]);\n  const [archivedChats, setArchivedChats] = useState<ChatItem[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // Load chats when the screen comes into focus\n  useFocusEffect(\n    React.useCallback(() => {\n      loadChats();\n    }, [])\n  );\n\n  const handleLogout = async () => {\n    try {\n      await supabase.auth.signOut();\n      navigation.navigate('Login');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  const loadChats = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.error('No user found');\n        navigation.navigate('Login');\n        return;\n      }\n\n      console.log('Loading chats for user:', user.id);\n\n      // First, check if the table exists and has the correct structure\n      const { data: tableInfo, error: tableError } = await supabase\n        .from('chats')\n        .select('*')\n        .limit(1);\n\n      if (tableError) {\n        console.error('Error checking table:', tableError);\n        return;\n      }\n\n      console.log('Table structure:', tableInfo);\n\n      // Now fetch the actual chats with all fields explicitly specified\n      const { data: chatData, error } = await supabase\n        .from('chats')\n        .select(`\n          id,\n          user_id,\n          question,\n          response,\n          created_at,\n          is_archived\n        `)\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        console.error('Error loading chats:', error);\n        return;\n      }\n\n      console.log('Loaded chats:', chatData);\n\n      if (!chatData) {\n        console.log('No chat data returned');\n        setChats([]);\n        setArchivedChats([]);\n        return;\n      }\n\n      // Parse the response field if it's stored as a string\n      const processedChats = chatData.map(chat => ({\n        ...chat,\n        response: typeof chat.response === 'string' \n          ? JSON.parse(chat.response)\n          : chat.response\n      }));\n\n      console.log('Processed chats:', processedChats);\n\n      setChats(processedChats.filter(chat => !chat.is_archived));\n      setArchivedChats(processedChats.filter(chat => chat.is_archived));\n    } catch (error) {\n      console.error('Error in loadChats:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleArchiveToggle = async (chatId: string, currentlyArchived: boolean) => {\n    try {\n      const { error } = await supabase\n        .from('chats')\n        .update({ is_archived: !currentlyArchived })\n        .eq('id', chatId);\n\n      if (error) {\n        console.error('Error toggling archive status:', error);\n        return;\n      }\n\n      // Reload chats after updating\n      loadChats();\n    } catch (error) {\n      console.error('Error in handleArchiveToggle:', error);\n    }\n  };\n\n  const filteredChats = (showHistory ? chats : archivedChats).filter(chat =>\n    chat.question.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const renderChatItem = (chat: ChatItem) => (\n    <TouchableOpacity\n      key={chat.id}\n      onPress={() => navigation.navigate('Response', {\n        question: chat.question,\n        verse: chat.response.verse,\n        reference: chat.response.reference,\n        relevance: chat.response.relevance,\n        explanation: chat.response.explanation\n      })}\n    >\n      <Card style={styles.historyCard}>\n        <View style={styles.historyCardHeader}>\n          <Text style={styles.historyCardTitle}>{chat.question}</Text>\n          <IconButton\n            icon={chat.is_archived ? 'archive-remove' : 'archive'}\n            size={24}\n            onPress={() => handleArchiveToggle(chat.id, chat.is_archived)}\n          />\n        </View>\n        <Text style={styles.historyCardContent}>\n          {chat.response.verse} - {chat.response.reference}\n        </Text>\n        <Text style={styles.historyCardTime}>\n          {new Date(chat.created_at).toLocaleDateString()}\n        </Text>\n      </Card>\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.content}>\n          <Image \n            source={require('../assets/logo-full.png')} \n            style={styles.logo} \n            resizeMode=\"contain\"\n          />\n\n          <View style={styles.titleContainer}>\n            <Text style={styles.mainTitle}>Seek Your Verse,</Text>\n            <Text style={styles.mainTitle}>Find Your <Text style={[styles.mainTitle, styles.highlight]}>Path</Text></Text>\n          </View>\n\n          <TouchableOpacity \n            style={styles.newTopicButton} \n            onPress={() => navigation.navigate('Question')}\n          >\n            <Text style={styles.newTopicText}>+ New Topic</Text>\n          </TouchableOpacity>\n\n          <View style={styles.historySection}>\n            <View style={styles.historyHeader}>\n              <Text style={styles.historyTitle}>History</Text>\n              <View style={styles.searchContainer}>\n                <TextInput\n                  style={styles.searchInput}\n                  placeholder=\"Search ...\"\n                  placeholderTextColor=\"#666\"\n                  mode=\"flat\"\n                  value={searchQuery}\n                  onChangeText={setSearchQuery}\n                  theme={{ \n                    colors: { \n                      primary: '#FFD9D0',\n                      underlineColor: 'transparent',\n                    }\n                  }}\n                  underlineColor=\"transparent\"\n                />\n              </View>\n            </View>\n\n            <View style={styles.toggleContainer}>\n              <TouchableOpacity \n                style={[styles.toggleButton, showHistory && styles.activeToggle]}\n                onPress={() => setShowHistory(true)}\n              >\n                <View style={styles.buttonContent}>\n                  <Image \n                    source={chatIcon}\n                    style={[\n                      styles.buttonIcon,\n                      showHistory && styles.activeButtonIcon\n                    ]}\n                  />\n                  <Text style={[styles.toggleText, showHistory && styles.activeToggleText]}>Chats</Text>\n                </View>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={[styles.toggleButton, !showHistory && styles.activeToggle]}\n                onPress={() => setShowHistory(false)}\n              >\n                <View style={styles.buttonContent}>\n                  <Image \n                    source={archiveIcon}\n                    style={[\n                      styles.buttonIcon,\n                      !showHistory && styles.activeButtonIcon\n                    ]}\n                  />\n                  <Text style={[styles.toggleText, !showHistory && styles.activeToggleText]}>Archived</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n\n            {loading ? (\n              <Text style={styles.loadingText}>Loading your conversations...</Text>\n            ) : filteredChats.length === 0 ? (\n              <Text style={styles.emptyText}>\n                {showHistory \n                  ? \"No chat history yet. Start a new topic!\" \n                  : \"No archived chats yet.\"}\n              </Text>\n            ) : (\n              <View style={styles.historyCards}>\n                {filteredChats.map(renderChatItem)}\n              </View>\n            )}\n          </View>\n\n          <Button mode=\"outlined\" onPress={handleLogout} style={styles.logoutButton}>\n            Logout\n          </Button>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  logo: {\n    width: '100%',\n    height: 159,\n    marginTop: 20,\n    marginBottom: 30,\n  },\n  titleContainer: {\n    marginBottom: 40,\n    alignItems: 'center',\n  },\n  mainTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 32,\n    color: '#FFFFFF',\n    textAlign: 'center',\n    lineHeight: 40,\n    fontWeight: '400',\n  },\n  highlight: {\n    color: '#FFD9D0',\n  },\n  newTopicButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 40,\n    alignItems: 'center',\n  },\n  newTopicText: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFD9D0',\n    fontWeight: '400',\n  },\n  historySection: {\n    flex: 1,\n  },\n  historyHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  historyTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 24,\n    color: '#FFFFFF',\n    fontWeight: '400',\n  },\n  searchContainer: {\n    flex: 1,\n    marginLeft: 16,\n  },\n  historyCard: {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    marginBottom: 16,\n    borderRadius: 12,\n  },\n  historyCardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    padding: 16,\n  },\n  historyCardTitle: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 16,\n    color: '#FFFFFF',\n    flex: 1,\n    marginRight: 16,\n    fontWeight: '400',\n    lineHeight: 22,\n  },\n  historyCardContent: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.7)',\n    paddingHorizontal: 16,\n    paddingBottom: 12,\n    lineHeight: 20,\n    fontWeight: '400',\n  },\n  historyCardTime: {\n    fontFamily: 'SF Pro Display',\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.5)',\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n    fontWeight: '400',\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    marginBottom: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  toggleButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 25,\n    marginHorizontal: 5,\n    backgroundColor: '#1A1A1A',\n    minWidth: 120,\n  },\n  activeToggle: {\n    backgroundColor: '#FFFFFF',\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonIcon: {\n    width: 20,\n    height: 20,\n    marginRight: 8,\n    tintColor: '#666',\n  },\n  activeButtonIcon: {\n    tintColor: '#000000',\n  },\n  toggleText: {\n    fontSize: 16,\n    color: '#666',\n    fontWeight: '500',\n  },\n  activeToggleText: {\n    color: '#000000',\n    fontWeight: '600',\n  },\n  historyCards: {\n    marginTop: 20,\n  },\n  loadingText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n  },\n  emptyText: {\n    color: '#666666',\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16,\n  },\n  logoutButton: {\n    marginTop: 20,\n    borderColor: '#FFD9D0',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}