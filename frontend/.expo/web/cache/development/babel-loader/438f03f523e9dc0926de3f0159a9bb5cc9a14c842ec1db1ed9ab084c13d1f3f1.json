{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"./errors.js\";\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nvar _worklet_3374392297911_init_data = {\n  code: \"function A(aA1, aA2) {\\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"A\\\",\\\"aA1\\\",\\\"aA2\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAiBA,SAAAA,CAAUA,CAACC,GAAA,EAAGC,GAAE,EAAG;EAGjB,OAAO,GAAG,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAG,GAAGD,GAAG;AACpC\\\",\\\"ignoreList\\\":[]}\"\n};\nvar A = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(aA1, aA2) {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_3374392297911_init_data;\n  _f.__workletHash = 3374392297911;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_16740236581141_init_data = {\n  code: \"function B(aA1, aA2) {\\n  return 3.0 * aA2 - 6.0 * aA1;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"B\\\",\\\"aA1\\\",\\\"aA2\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAsBA,SAAAA,CAAUA,CAACC,GAAA,EAAGC,GAAE,EAAG;EAGjB,OAAO,GAAG,GAAGA,GAAG,GAAG,GAAG,GAAGD,GAAG;AAC9B\\\",\\\"ignoreList\\\":[]}\"\n};\nvar B = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(aA1, aA2) {\n    return 3.0 * aA2 - 6.0 * aA1;\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_16740236581141_init_data;\n  _f.__workletHash = 16740236581141;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_17250667303223_init_data = {\n  code: \"function C(aA1) {\\n  return 3.0 * aA1;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"C\\\",\\\"aA1\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA2BA,SAAAA,CAAUA,CAACC,GAAA,EAAG;EAGZ,OAAO,GAAG,GAAGA,GAAG;AAClB\\\",\\\"ignoreList\\\":[]}\"\n};\nvar C = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(aA1) {\n    return 3.0 * aA1;\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_17250667303223_init_data;\n  _f.__workletHash = 17250667303223;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_3336129670125_init_data = {\n  code: \"function calcBezier(aT, aA1, aA2) {\\n  const {\\n    A,\\n    B,\\n    C\\n  } = this._closure;\\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"calcBezier\\\",\\\"aT\\\",\\\"aA1\\\",\\\"aA2\\\",\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAiCA,SAAAA,WAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,SAAAH,CAAA,CAAAF,GAAA,EAAAC,GAAA,IAAAF,EAAA,GAAAI,CAAA,CAAAH,GAAA,EAAAC,GAAA,KAAAF,EAAA,GAAAK,CAAA,CAAAJ,GAAA,KAAAD,EAAA;AACA\\\",\\\"ignoreList\\\":[]}\"\n};\nvar calcBezier = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f(aT, aA1, aA2) {\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  };\n  _f._closure = {\n    A: A,\n    B: B,\n    C: C\n  };\n  _f.__initData = _worklet_3336129670125_init_data;\n  _f.__workletHash = 3336129670125;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_6461718455249_init_data = {\n  code: \"function getSlope(aT, aA1, aA2) {\\n  const {\\n    A,\\n    B,\\n    C\\n  } = this._closure;\\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getSlope\\\",\\\"aT\\\",\\\"aA1\\\",\\\"aA2\\\",\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAwCA,SAAAA,SAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,aAAAH,CAAA,CAAAF,GAAA,EAAAC,GAAA,IAAAF,EAAA,GAAAA,EAAA,SAAAI,CAAA,CAAAH,GAAA,EAAAC,GAAA,IAAAF,EAAA,GAAAK,CAAA,CAAAJ,GAAA;AACA\\\",\\\"ignoreList\\\":[]}\"\n};\nvar getSlope = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  };\n  _f._closure = {\n    A: A,\n    B: B,\n    C: C\n  };\n  _f.__initData = _worklet_6461718455249_init_data;\n  _f.__workletHash = 6461718455249;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_1297637313222_init_data = {\n  code: \"function binarySubdivide(aX, aA, aB, mX1, mX2) {\\n  const {\\n    calcBezier,\\n    SUBDIVISION_PRECISION,\\n    SUBDIVISION_MAX_ITERATIONS\\n  } = this._closure;\\n  let currentX;\\n  let currentT;\\n  let i = 0;\\n  do {\\n    currentT = aA + (aB - aA) / 2.0;\\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\\n    if (currentX > 0.0) {\\n      aB = currentT;\\n    } else {\\n      aA = currentT;\\n    }\\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\\n  return currentT;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"binarySubdivide\\\",\\\"aX\\\",\\\"aA\\\",\\\"aB\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"calcBezier\\\",\\\"SUBDIVISION_PRECISION\\\",\\\"SUBDIVISION_MAX_ITERATIONS\\\",\\\"_closure\\\",\\\"currentX\\\",\\\"currentT\\\",\\\"i\\\",\\\"Math\\\",\\\"abs\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA8CA,SAAAA,eAASA,CAAgBC,EAAA,EAAEC,EAAE,EAAEC,EAAE,EAAEC,GAAE,EAAGC,GAAE,EAAG;EAAA;IAAAC,UAAA;IAAAC,qBAAA;IAAAC;EAAA,SAAAC,QAAA;EAG3C,IAAIC,QAAQ;EACZ,IAAIC,QAAQ;EACZ,IAAIC,CAAC,GAAG,CAAC;EACT,GAAG;IACDD,QAAQ,GAAGT,EAAE,GAAG,CAACC,EAAE,GAAGD,EAAE,IAAI,GAAG;IAC/BQ,QAAQ,GAAGJ,UAAU,CAACK,QAAQ,EAAEP,GAAG,EAAEC,GAAG,CAAC,GAAGJ,EAAE;IAC9C,IAAIS,QAAQ,GAAG,GAAG,EAAE;MAClBP,EAAE,GAAGQ,QAAQ;IACf,CAAC,MAAM;MACLT,EAAE,GAAGS,QAAQ;IACf;EACF,CAAC,QAAQE,IAAI,CAACC,GAAG,CAACJ,QAAQ,CAAC,GAAGH,qBAAqB,IAAI,EAAEK,CAAC,GAAGJ,0BAA0B;EACvF,OAAOG,QAAQ;AACjB\\\",\\\"ignoreList\\\":[]}\"\n};\nvar binarySubdivide = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n    return currentT;\n  };\n  _f._closure = {\n    calcBezier: calcBezier,\n    SUBDIVISION_PRECISION: SUBDIVISION_PRECISION,\n    SUBDIVISION_MAX_ITERATIONS: SUBDIVISION_MAX_ITERATIONS\n  };\n  _f.__initData = _worklet_1297637313222_init_data;\n  _f.__workletHash = 1297637313222;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_303592406761_init_data = {\n  code: \"function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\\n  const {\\n    NEWTON_ITERATIONS,\\n    getSlope,\\n    calcBezier\\n  } = this._closure;\\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\\n    const currentSlope = getSlope(aGuessT, mX1, mX2);\\n    if (currentSlope === 0.0) {\\n      return aGuessT;\\n    }\\n    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\\n    aGuessT -= currentX / currentSlope;\\n  }\\n  return aGuessT;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"newtonRaphsonIterate\\\",\\\"aX\\\",\\\"aGuessT\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"NEWTON_ITERATIONS\\\",\\\"getSlope\\\",\\\"calcBezier\\\",\\\"_closure\\\",\\\"i\\\",\\\"currentSlope\\\",\\\"currentX\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA+DA,SAAAA,oBAASA,CAAqBC,EAAA,EAAEC,OAAE,EAAOC,GAAE,EAAGC,GAAE,EAAG;EAAA;IAAAC,iBAAA;IAAAC,QAAA;IAAAC;EAAA,SAAAC,QAAA;EAGjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,iBAAiB,EAAE,EAAEI,CAAC,EAAE;IAC1C,MAAMC,YAAY,GAAGJ,QAAQ,CAACJ,OAAO,EAAEC,GAAG,EAAEC,GAAG,CAAC;IAChD,IAAIM,YAAY,KAAK,GAAG,EAAE;MACxB,OAAOR,OAAO;IAChB;IACA,MAAMS,QAAQ,GAAGJ,UAAU,CAACL,OAAO,EAAEC,GAAG,EAAEC,GAAG,CAAC,GAAGH,EAAE;IACnDC,OAAO,IAAIS,QAAQ,GAAGD,YAAY;EACpC;EACA,OAAOR,OAAO;AAChB\\\",\\\"ignoreList\\\":[]}\"\n};\nvar newtonRaphsonIterate = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n  _f._closure = {\n    NEWTON_ITERATIONS: NEWTON_ITERATIONS,\n    getSlope: getSlope,\n    calcBezier: calcBezier\n  };\n  _f.__initData = _worklet_303592406761_init_data;\n  _f.__workletHash = 303592406761;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_9377783840138_init_data = {\n  code: \"function Bezier(mX1, mY1, mX2, mY2) {\\n  const {\\n    ReanimatedError,\\n    kSplineTableSize,\\n    calcBezier,\\n    kSampleStepSize,\\n    getSlope,\\n    NEWTON_MIN_SLOPE,\\n    newtonRaphsonIterate,\\n    binarySubdivide\\n  } = this._closure;\\n  function LinearEasing(x) {\\n    'worklet';\\n\\n    return x;\\n  }\\n  if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\\n    throw new ReanimatedError('Bezier x values must be in [0, 1] range.');\\n  }\\n  if (mX1 === mY1 && mX2 === mY2) {\\n    return LinearEasing;\\n  }\\n  const sampleValues = new Array(kSplineTableSize);\\n  for (let i = 0; i < kSplineTableSize; ++i) {\\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\\n  }\\n  function getTForX(aX) {\\n    'worklet';\\n\\n    let intervalStart = 0.0;\\n    let currentSample = 1;\\n    const lastSample = kSplineTableSize - 1;\\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\\n      intervalStart += kSampleStepSize;\\n    }\\n    --currentSample;\\n    const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\\n    const guessForT = intervalStart + dist * kSampleStepSize;\\n    const initialSlope = getSlope(guessForT, mX1, mX2);\\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\\n    } else if (initialSlope === 0.0) {\\n      return guessForT;\\n    } else {\\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\\n    }\\n  }\\n  return function BezierEasing(x) {\\n    'worklet';\\n\\n    if (mX1 === mY1 && mX2 === mY2) {\\n      return x;\\n    }\\n    if (x === 0) {\\n      return 0;\\n    }\\n    if (x === 1) {\\n      return 1;\\n    }\\n    return calcBezier(getTForX(x), mY1, mY2);\\n  };\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"Bezier\\\",\\\"mX1\\\",\\\"mY1\\\",\\\"mX2\\\",\\\"mY2\\\",\\\"ReanimatedError\\\",\\\"kSplineTableSize\\\",\\\"calcBezier\\\",\\\"kSampleStepSize\\\",\\\"getSlope\\\",\\\"NEWTON_MIN_SLOPE\\\",\\\"newtonRaphsonIterate\\\",\\\"binarySubdivide\\\",\\\"_closure\\\",\\\"LinearEasing\\\",\\\"x\\\",\\\"sampleValues\\\",\\\"Array\\\",\\\"i\\\",\\\"getTForX\\\",\\\"aX\\\",\\\"intervalStart\\\",\\\"currentSample\\\",\\\"lastSample\\\",\\\"dist\\\",\\\"guessForT\\\",\\\"initialSlope\\\",\\\"BezierEasing\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA4EO,SAAAA,MAASA,CAAOC,GAAA,EAAGC,GAAE,EAAGC,GAAE,EAAGC,GAAE,EAAG;EAAA;IAAAC,eAAA;IAAAC,gBAAA;IAAAC,UAAA;IAAAC,eAAA;IAAAC,QAAA;IAAAC,gBAAA;IAAAC,oBAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvC,SAASC,YAAYA,CAACC,CAAC,EAAE;IACvB,SAAS;;IAET,OAAOA,CAAC;EACV;EACA,IAAI,EAAEd,GAAG,IAAI,CAAC,IAAIA,GAAG,IAAI,CAAC,IAAIE,GAAG,IAAI,CAAC,IAAIA,GAAG,IAAI,CAAC,CAAC,EAAE;IACnD,MAAM,IAAIE,eAAe,CAAC,0CAA0C,CAAC;EACvE;EACA,IAAIJ,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,EAAE;IAC9B,OAAOU,YAAY;EACrB;EACA,MAAME,YAAY,GAAG,IAAIC,KAAK,CAACX,gBAAgB,CAAC;EAGhD,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,gBAAgB,EAAE,EAAEY,CAAC,EAAE;IACzCF,YAAY,CAACE,CAAC,CAAC,GAAGX,UAAU,CAACW,CAAC,GAAGV,eAAe,EAAEP,GAAG,EAAEE,GAAG,CAAC;EAC7D;EACA,SAASgB,QAAQA,CAACC,EAAE,EAAE;IACpB,SAAS;;IAET,IAAIC,aAAa,GAAG,GAAG;IACvB,IAAIC,aAAa,GAAG,CAAC;IACrB,MAAMC,UAAU,GAAGjB,gBAAgB,GAAG,CAAC;IACvC,OAAOgB,aAAa,KAAKC,UAAU,IAAIP,YAAY,CAACM,aAAa,CAAC,IAAIF,EAAE,EAAE,EAAEE,aAAa,EAAE;MACzFD,aAAa,IAAIb,eAAe;IAClC;IACA,EAAEc,aAAa;IAGf,MAAME,IAAI,GAAG,CAACJ,EAAE,GAAGJ,YAAY,CAACM,aAAa,CAAC,KAAKN,YAAY,CAACM,aAAa,GAAG,CAAC,CAAC,GAAGN,YAAY,CAACM,aAAa,CAAC,CAAC;IACjH,MAAMG,SAAS,GAAGJ,aAAa,GAAGG,IAAI,GAAGhB,eAAe;IACxD,MAAMkB,YAAY,GAAGjB,QAAQ,CAACgB,SAAS,EAAExB,GAAG,EAAEE,GAAG,CAAC;IAClD,IAAIuB,YAAY,IAAIhB,gBAAgB,EAAE;MACpC,OAAOC,oBAAoB,CAACS,EAAE,EAAEK,SAAS,EAAExB,GAAG,EAAEE,GAAG,CAAC;IACtD,CAAC,MAAM,IAAIuB,YAAY,KAAK,GAAG,EAAE;MAC/B,OAAOD,SAAS;IAClB,CAAC,MAAM;MACL,OAAOb,eAAe,CAACQ,EAAE,EAAEC,aAAa,EAAEA,aAAa,GAAGb,eAAe,EAAEP,GAAG,EAAEE,GAAG,CAAC;IACtF;EACF;EACA,OAAO,SAASwB,YAAYA,CAACZ,CAAC,EAAE;IAC9B,SAAS;;IAET,IAAId,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,EAAE;MAC9B,OAAOW,CAAC;IACV;IAEA,IAAIA,CAAC,KAAK,CAAC,EAAE;MACX,OAAO,CAAC;IACV;IACA,IAAIA,CAAC,KAAK,CAAC,EAAE;MACX,OAAO,CAAC;IACV;IACA,OAAOR,UAAU,CAACY,QAAQ,CAACJ,CAAC,CAAC,EAAEb,GAAG,EAAEE,GAAG,CAAC;EAC1C,CAAC;AACH\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_11601588428153_init_data = {\n  code: \"function LinearEasing(x) {\\n  return x;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"LinearEasing\\\",\\\"x\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA+EE,SAAAA,YAASA,CAAaC,CAAC;EAGrB,OAAOA,CAAC;AACV\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_16767251613109_init_data = {\n  code: \"function getTForX(aX) {\\n  const {\\n    kSplineTableSize,\\n    sampleValues,\\n    kSampleStepSize,\\n    getSlope,\\n    mX1,\\n    mX2,\\n    NEWTON_MIN_SLOPE,\\n    newtonRaphsonIterate,\\n    binarySubdivide\\n  } = this._closure;\\n  let intervalStart = 0.0;\\n  let currentSample = 1;\\n  const lastSample = kSplineTableSize - 1;\\n  for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\\n    intervalStart += kSampleStepSize;\\n  }\\n  --currentSample;\\n  const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\\n  const guessForT = intervalStart + dist * kSampleStepSize;\\n  const initialSlope = getSlope(guessForT, mX1, mX2);\\n  if (initialSlope >= NEWTON_MIN_SLOPE) {\\n    return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\\n  } else if (initialSlope === 0.0) {\\n    return guessForT;\\n  } else {\\n    return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\\n  }\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getTForX\\\",\\\"aX\\\",\\\"kSplineTableSize\\\",\\\"sampleValues\\\",\\\"kSampleStepSize\\\",\\\"getSlope\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"NEWTON_MIN_SLOPE\\\",\\\"newtonRaphsonIterate\\\",\\\"binarySubdivide\\\",\\\"_closure\\\",\\\"intervalStart\\\",\\\"currentSample\\\",\\\"lastSample\\\",\\\"dist\\\",\\\"guessForT\\\",\\\"initialSlope\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAgGE,SAAAA,QAASA,CAASC,EAAA,EAAE;EAAA;IAAAC,gBAAA;IAAAC,YAAA;IAAAC,eAAA;IAAAC,QAAA;IAAAC,GAAA;IAAAC,GAAA;IAAAC,gBAAA;IAAAC,oBAAA;IAAAC;EAAA,SAAAC,QAAA;EAGlB,IAAIC,aAAa,GAAG,GAAG;EACvB,IAAIC,aAAa,GAAG,CAAC;EACrB,MAAMC,UAAU,GAAGZ,gBAAgB,GAAG,CAAC;EACvC,OAAOW,aAAa,KAAKC,UAAU,IAAIX,YAAY,CAACU,aAAa,CAAC,IAAIZ,EAAE,EAAE,EAAEY,aAAa,EAAE;IACzFD,aAAa,IAAIR,eAAe;EAClC;EACA,EAAES,aAAa;EAGf,MAAME,IAAI,GAAG,CAACd,EAAE,GAAGE,YAAY,CAACU,aAAa,CAAC,KAAKV,YAAY,CAACU,aAAa,GAAG,CAAC,CAAC,GAAGV,YAAY,CAACU,aAAa,CAAC,CAAC;EACjH,MAAMG,SAAS,GAAGJ,aAAa,GAAGG,IAAI,GAAGX,eAAe;EACxD,MAAMa,YAAY,GAAGZ,QAAQ,CAACW,SAAS,EAAEV,GAAG,EAAEC,GAAG,CAAC;EAClD,IAAIU,YAAY,IAAIT,gBAAgB,EAAE;IACpC,OAAOC,oBAAoB,CAACR,EAAE,EAAEe,SAAS,EAAEV,GAAG,EAAEC,GAAG,CAAC;EACtD,CAAC,MAAM,IAAIU,YAAY,KAAK,GAAG,EAAE;IAC/B,OAAOD,SAAS;EAClB,CAAC,MAAM;IACL,OAAON,eAAe,CAACT,EAAE,EAAEW,aAAa,EAAEA,aAAa,GAAGR,eAAe,EAAEE,GAAG,EAAEC,GAAG,CAAC;EACtF;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_11458292201024_init_data = {\n  code: \"function BezierEasing(x) {\\n  const {\\n    mX1,\\n    mY1,\\n    mX2,\\n    mY2,\\n    calcBezier,\\n    getTForX\\n  } = this._closure;\\n  if (mX1 === mY1 && mX2 === mY2) {\\n    return x;\\n  }\\n  if (x === 0) {\\n    return 0;\\n  }\\n  if (x === 1) {\\n    return 1;\\n  }\\n  return calcBezier(getTForX(x), mY1, mY2);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\Bezier.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"BezierEasing\\\",\\\"x\\\",\\\"mX1\\\",\\\"mY1\\\",\\\"mX2\\\",\\\"mY2\\\",\\\"calcBezier\\\",\\\"getTForX\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAuHS,SAAAA,YAASA,CAAaC,CAAC;EAAA;IAAAC,GAAA;IAAAC,GAAA;IAAAC,GAAA;IAAAC,GAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EAG5B,IAAIN,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,EAAE;IAC9B,OAAOJ,CAAC;EACV;EAEA,IAAIA,CAAC,KAAK,CAAC,EAAE;IACX,OAAO,CAAC;EACV;EACA,IAAIA,CAAC,KAAK,CAAC,EAAE;IACX,OAAO,CAAC;EACV;EACA,OAAOK,UAAU,CAACC,QAAQ,CAACN,CAAC,CAAC,EAAEE,GAAG,EAAEE,GAAG,CAAC;AAC1C\\\",\\\"ignoreList\\\":[]}\"\n};\nexport var Bezier = function () {\n  var _e = [new global.Error(), -9, -27];\n  var _f = function _f(mX1, mY1, mX2, mY2) {\n    var LinearEasing = function () {\n      var _e = [new global.Error(), 1, -27];\n      var _f = function _f(x) {\n        return x;\n      };\n      _f._closure = {};\n      _f.__initData = _worklet_11601588428153_init_data;\n      _f.__workletHash = 11601588428153;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }();\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n      throw new ReanimatedError('Bezier x values must be in [0, 1] range.');\n    }\n    if (mX1 === mY1 && mX2 === mY2) {\n      return LinearEasing;\n    }\n    var sampleValues = new Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    var getTForX = function () {\n      var _e = [new global.Error(), -10, -27];\n      var _f = function _f(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n          return guessForT;\n        } else {\n          return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n      };\n      _f._closure = {\n        kSplineTableSize: kSplineTableSize,\n        sampleValues: sampleValues,\n        kSampleStepSize: kSampleStepSize,\n        getSlope: getSlope,\n        mX1: mX1,\n        mX2: mX2,\n        NEWTON_MIN_SLOPE: NEWTON_MIN_SLOPE,\n        newtonRaphsonIterate: newtonRaphsonIterate,\n        binarySubdivide: binarySubdivide\n      };\n      _f.__initData = _worklet_16767251613109_init_data;\n      _f.__workletHash = 16767251613109;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }();\n    return function () {\n      var _e = [new global.Error(), -7, -27];\n      var _f = function _f(x) {\n        if (mX1 === mY1 && mX2 === mY2) {\n          return x;\n        }\n        if (x === 0) {\n          return 0;\n        }\n        if (x === 1) {\n          return 1;\n        }\n        return calcBezier(getTForX(x), mY1, mY2);\n      };\n      _f._closure = {\n        mX1: mX1,\n        mY1: mY1,\n        mX2: mX2,\n        mY2: mY2,\n        calcBezier: calcBezier,\n        getTForX: getTForX\n      };\n      _f.__initData = _worklet_11458292201024_init_data;\n      _f.__workletHash = 11458292201024;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }();\n  };\n  _f._closure = {\n    ReanimatedError: ReanimatedError,\n    kSplineTableSize: kSplineTableSize,\n    calcBezier: calcBezier,\n    kSampleStepSize: kSampleStepSize,\n    getSlope: getSlope,\n    NEWTON_MIN_SLOPE: NEWTON_MIN_SLOPE,\n    newtonRaphsonIterate: newtonRaphsonIterate,\n    binarySubdivide: binarySubdivide\n  };\n  _f.__initData = _worklet_9377783840138_init_data;\n  _f.__workletHash = 9377783840138;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();","map":{"version":3,"names":["ReanimatedError","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","_worklet_3374392297911_init_data","code","location","sourceMap","A","_e","global","Error","_f","aA1","aA2","_closure","__initData","__workletHash","__stackDetails","__version","_worklet_16740236581141_init_data","B","_worklet_17250667303223_init_data","C","_worklet_3336129670125_init_data","calcBezier","aT","_worklet_6461718455249_init_data","getSlope","_worklet_1297637313222_init_data","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","i","Math","abs","_worklet_303592406761_init_data","newtonRaphsonIterate","aGuessT","currentSlope","_worklet_9377783840138_init_data","_worklet_11601588428153_init_data","_worklet_16767251613109_init_data","_worklet_11458292201024_init_data","Bezier","mY1","mY2","LinearEasing","x","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope"],"sources":["d:\\CODING\\random\\12-13\\node_modules\\react-native-reanimated\\src\\Bezier.ts"],"sourcesContent":["'use strict';\n\nimport { ReanimatedError } from './errors';\n\n/**\n * https://github.com/gre/bezier-easing BezierEasing - use bezier curve for\n * transition easing function by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\n\nconst NEWTON_ITERATIONS = 4;\nconst NEWTON_MIN_SLOPE = 0.001;\nconst SUBDIVISION_PRECISION = 0.0000001;\nconst SUBDIVISION_MAX_ITERATIONS = 10;\n\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nfunction A(aA1: number, aA2: number): number {\n  'worklet';\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n}\nfunction B(aA1: number, aA2: number): number {\n  'worklet';\n  return 3.0 * aA2 - 6.0 * aA1;\n}\nfunction C(aA1: number) {\n  'worklet';\n  return 3.0 * aA1;\n}\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier(aT: number, aA1: number, aA2: number): number {\n  'worklet';\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n}\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope(aT: number, aA1: number, aA2: number): number {\n  'worklet';\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n}\n\nfunction binarySubdivide(\n  aX: number,\n  aA: number,\n  aB: number,\n  mX1: number,\n  mX2: number\n): number {\n  'worklet';\n  let currentX;\n  let currentT;\n  let i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (\n    Math.abs(currentX) > SUBDIVISION_PRECISION &&\n    ++i < SUBDIVISION_MAX_ITERATIONS\n  );\n  return currentT;\n}\n\nfunction newtonRaphsonIterate(\n  aX: number,\n  aGuessT: number,\n  mX1: number,\n  mX2: number\n): number {\n  'worklet';\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n    const currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\n\nexport function Bezier(\n  mX1: number,\n  mY1: number,\n  mX2: number,\n  mY2: number\n): (x: number) => number {\n  'worklet';\n\n  function LinearEasing(x: number): number {\n    'worklet';\n    return x;\n  }\n\n  if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n    throw new ReanimatedError('Bezier x values must be in [0, 1] range.');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  const sampleValues = new Array(kSplineTableSize);\n\n  // Precompute samples table\n  for (let i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX(aX: number): number {\n    'worklet';\n    let intervalStart = 0.0;\n    let currentSample = 1;\n    const lastSample = kSplineTableSize - 1;\n\n    for (\n      ;\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\n      ++currentSample\n    ) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    const dist =\n      (aX - sampleValues[currentSample]) /\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    const guessForT = intervalStart + dist * kSampleStepSize;\n\n    const initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(\n        aX,\n        intervalStart,\n        intervalStart + kSampleStepSize,\n        mX1,\n        mX2\n      );\n    }\n  }\n\n  return function BezierEasing(x) {\n    'worklet';\n    if (mX1 === mY1 && mX2 === mY2) {\n      return x; // linear\n    }\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}