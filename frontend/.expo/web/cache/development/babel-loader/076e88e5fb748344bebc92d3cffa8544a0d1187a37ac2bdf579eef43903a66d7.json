{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { runOnUIImmediately } from \"../../threads.js\";\nimport { registerEventHandler, unregisterEventHandler } from \"../../core.js\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { isJest, shouldBeUseWeb } from \"../../PlatformChecker.js\";\nimport { ReanimatedError } from \"../../errors.js\";\nvar IS_ANDROID = Platform.OS === 'android';\nvar _worklet_3191002645810_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    viewTag,\\n    progressAnimation\\n  } = this._closure;\\n  global.ProgressTransitionRegister.addProgressAnimation(viewTag, progressAnimation);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"viewTag\\\",\\\"progressAnimation\\\",\\\"_closure\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"addProgressAnimation\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAkBuB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvBC,MAAM,CAACC,0BAA0B,CAACC,oBAAoB,CAACL,OAAO,EAAEC,iBAAiB,CAAC;AACpF\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_7501295322261_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    viewTag,\\n    isUnmounting\\n  } = this._closure;\\n  global.ProgressTransitionRegister.removeProgressAnimation(viewTag, isUnmounting);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"viewTag\\\",\\\"isUnmounting\\\",\\\"_closure\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"removeProgressAnimation\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AA2BuB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvBC,MAAM,CAACC,0BAA0B,CAACC,uBAAuB,CAACL,OAAO,EAAEC,YAAY,CAAC;AAClF\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_8685801420075_init_data = {\n  code: \"function anonymous(event) {\\n  const {\\n    lastProgressValue\\n  } = this._closure;\\n  const progress = event.progress;\\n  if (progress === lastProgressValue) {\\n    return;\\n  }\\n  lastProgressValue = progress;\\n  global.ProgressTransitionRegister.frame(progress);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"event\\\",\\\"lastProgressValue\\\",\\\"_closure\\\",\\\"progress\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"frame\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAwC+D,SAAAA,SAASA,CAAAC,KAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGhE,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;EAC/B,IAAIA,QAAQ,KAAKF,iBAAiB,EAAE;IAIlC;EACF;EACAA,iBAAiB,GAAGE,QAAQ;EAC5BC,MAAM,CAACC,0BAA0B,CAACC,KAAK,CAACH,QAAQ,CAAC;AACnD\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_6785581466586_init_data = {\n  code: \"function anonymous() {\\n  global.ProgressTransitionRegister.onTransitionEnd();\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"onTransitionEnd\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAqDmD,SAAAA,SAAMA,CAAA;EAGjDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,CAAC;AACrD\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_1451512253981_init_data = {\n  code: \"function anonymous() {\\n  global.ProgressTransitionRegister.onAndroidFinishTransitioning();\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"onAndroidFinishTransitioning\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AA6DwD,SAAAA,SAAMA,CAAA;EAGpDC,MAAM,CAACC,0BAA0B,CAACC,4BAA4B,CAAC,CAAC;AAClE\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_7273231321452_init_data = {\n  code: \"function anonymous() {\\n  global.ProgressTransitionRegister.onTransitionEnd(true);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"onTransitionEnd\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAoEwD,SAAAA,SAAMA,CAAA;EAGpDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,IAAI,CAAC;AACzD\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_6785581466586_init_data2 = {\n  code: \"function anonymous() {\\n  global.ProgressTransitionRegister.onTransitionEnd();\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\",\\\"onTransitionEnd\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AAyE2D,SAAAA,SAAMA,CAAA;EAGvDC,MAAM,CAACC,0BAA0B,CAACC,eAAe,CAAC,CAAC;AACrD\\\",\\\"ignoreList\\\":[]}\"\n};\nexport var ProgressTransitionManager = function () {\n  function ProgressTransitionManager() {\n    _classCallCheck(this, ProgressTransitionManager);\n    this._sharedElementCount = 0;\n    this._eventHandler = {\n      isRegistered: false,\n      onTransitionProgress: -1,\n      onAppear: -1,\n      onDisappear: -1,\n      onSwipeDismiss: -1\n    };\n  }\n  return _createClass(ProgressTransitionManager, [{\n    key: \"addProgressAnimation\",\n    value: function addProgressAnimation(viewTag, progressAnimation) {\n      runOnUIImmediately(function () {\n        var _e = [new global.Error(), -3, -27];\n        var _f = function _f() {\n          global.ProgressTransitionRegister.addProgressAnimation(viewTag, progressAnimation);\n        };\n        _f._closure = {\n          viewTag: viewTag,\n          progressAnimation: progressAnimation\n        };\n        _f.__initData = _worklet_3191002645810_init_data;\n        _f.__workletHash = 3191002645810;\n        _f.__stackDetails = _e;\n        _f.__version = \"3.3.0\";\n        return _f;\n      }())();\n      this.registerEventHandlers();\n    }\n  }, {\n    key: \"removeProgressAnimation\",\n    value: function removeProgressAnimation(viewTag) {\n      var isUnmounting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.unregisterEventHandlers();\n      runOnUIImmediately(function () {\n        var _e = [new global.Error(), -3, -27];\n        var _f = function _f() {\n          global.ProgressTransitionRegister.removeProgressAnimation(viewTag, isUnmounting);\n        };\n        _f._closure = {\n          viewTag: viewTag,\n          isUnmounting: isUnmounting\n        };\n        _f.__initData = _worklet_7501295322261_init_data;\n        _f.__workletHash = 7501295322261;\n        _f.__stackDetails = _e;\n        _f.__version = \"3.3.0\";\n        return _f;\n      }())();\n    }\n  }, {\n    key: \"registerEventHandlers\",\n    value: function registerEventHandlers() {\n      this._sharedElementCount++;\n      var eventHandler = this._eventHandler;\n      if (!eventHandler.isRegistered) {\n        eventHandler.isRegistered = true;\n        var eventPrefix = IS_ANDROID ? 'on' : 'top';\n        var lastProgressValue = -1;\n        eventHandler.onTransitionProgress = registerEventHandler(function () {\n          var _e = [new global.Error(), -2, -27];\n          var _f = function _f(event) {\n            var progress = event.progress;\n            if (progress === lastProgressValue) {\n              return;\n            }\n            lastProgressValue = progress;\n            global.ProgressTransitionRegister.frame(progress);\n          };\n          _f._closure = {\n            lastProgressValue: lastProgressValue\n          };\n          _f.__initData = _worklet_8685801420075_init_data;\n          _f.__workletHash = 8685801420075;\n          _f.__stackDetails = _e;\n          _f.__version = \"3.3.0\";\n          return _f;\n        }(), eventPrefix + 'TransitionProgress');\n        eventHandler.onAppear = registerEventHandler(function () {\n          var _e = [new global.Error(), 1, -27];\n          var _f = function _f() {\n            global.ProgressTransitionRegister.onTransitionEnd();\n          };\n          _f._closure = {};\n          _f.__initData = _worklet_6785581466586_init_data;\n          _f.__workletHash = 6785581466586;\n          _f.__stackDetails = _e;\n          _f.__version = \"3.3.0\";\n          return _f;\n        }(), eventPrefix + 'Appear');\n        if (IS_ANDROID) {\n          eventHandler.onDisappear = registerEventHandler(function () {\n            var _e = [new global.Error(), 1, -27];\n            var _f = function _f() {\n              global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n            };\n            _f._closure = {};\n            _f.__initData = _worklet_1451512253981_init_data;\n            _f.__workletHash = 1451512253981;\n            _f.__stackDetails = _e;\n            _f.__version = \"3.3.0\";\n            return _f;\n          }(), 'onFinishTransitioning');\n        } else if (Platform.OS === 'ios') {\n          eventHandler.onDisappear = registerEventHandler(function () {\n            var _e = [new global.Error(), 1, -27];\n            var _f = function _f() {\n              global.ProgressTransitionRegister.onTransitionEnd(true);\n            };\n            _f._closure = {};\n            _f.__initData = _worklet_7273231321452_init_data;\n            _f.__workletHash = 7273231321452;\n            _f.__stackDetails = _e;\n            _f.__version = \"3.3.0\";\n            return _f;\n          }(), 'topDisappear');\n          eventHandler.onSwipeDismiss = registerEventHandler(function () {\n            var _e = [new global.Error(), 1, -27];\n            var _f = function _f() {\n              global.ProgressTransitionRegister.onTransitionEnd();\n            };\n            _f._closure = {};\n            _f.__initData = _worklet_6785581466586_init_data2;\n            _f.__workletHash = 6785581466586;\n            _f.__stackDetails = _e;\n            _f.__version = \"3.3.0\";\n            return _f;\n          }(), 'topGestureCancel');\n        }\n      }\n    }\n  }, {\n    key: \"unregisterEventHandlers\",\n    value: function unregisterEventHandlers() {\n      this._sharedElementCount--;\n      if (this._sharedElementCount === 0) {\n        var eventHandler = this._eventHandler;\n        eventHandler.isRegistered = false;\n        if (eventHandler.onTransitionProgress !== -1) {\n          unregisterEventHandler(eventHandler.onTransitionProgress);\n          eventHandler.onTransitionProgress = -1;\n        }\n        if (eventHandler.onAppear !== -1) {\n          unregisterEventHandler(eventHandler.onAppear);\n          eventHandler.onAppear = -1;\n        }\n        if (eventHandler.onDisappear !== -1) {\n          unregisterEventHandler(eventHandler.onDisappear);\n          eventHandler.onDisappear = -1;\n        }\n        if (eventHandler.onSwipeDismiss !== -1) {\n          unregisterEventHandler(eventHandler.onSwipeDismiss);\n          eventHandler.onSwipeDismiss = -1;\n        }\n      }\n    }\n  }]);\n}();\nvar _worklet_5099239847904_init_data = {\n  code: \"function createProgressTransitionRegister() {\\n  const {\\n    IS_ANDROID\\n  } = this._closure;\\n  const progressAnimations = new Map();\\n  const snapshots = new Map();\\n  const currentTransitions = new Set();\\n  const toRemove = new Set();\\n  let skipCleaning = false;\\n  let isTransitionRestart = false;\\n  const progressTransitionManager = {\\n    addProgressAnimation: function (viewTag, progressAnimation) {\\n      if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {\\n        isTransitionRestart = !IS_ANDROID;\\n      }\\n      progressAnimations.set(viewTag, progressAnimation);\\n    },\\n    removeProgressAnimation: function (viewTag, isUnmounting) {\\n      if (currentTransitions.size > 0) {\\n        isTransitionRestart = !IS_ANDROID;\\n      }\\n      if (isUnmounting) {\\n        toRemove.add(viewTag);\\n      } else {\\n        progressAnimations.delete(viewTag);\\n      }\\n    },\\n    onTransitionStart: function (viewTag, snapshot) {\\n      skipCleaning = isTransitionRestart;\\n      snapshots.set(viewTag, snapshot);\\n      currentTransitions.add(viewTag);\\n      progressTransitionManager.frame(0);\\n    },\\n    frame: function (progress) {\\n      for (const viewTag of currentTransitions) {\\n        const progressAnimation = progressAnimations.get(viewTag);\\n        if (!progressAnimation) {\\n          continue;\\n        }\\n        const snapshot = snapshots.get(viewTag);\\n        progressAnimation(viewTag, snapshot, progress);\\n      }\\n    },\\n    onAndroidFinishTransitioning: function () {\\n      if (toRemove.size > 0) {\\n        progressTransitionManager.onTransitionEnd();\\n      }\\n    },\\n    onTransitionEnd: function (removeViews = false) {\\n      if (currentTransitions.size === 0) {\\n        toRemove.clear();\\n        return;\\n      }\\n      if (skipCleaning) {\\n        skipCleaning = false;\\n        isTransitionRestart = false;\\n        return;\\n      }\\n      for (const viewTag of currentTransitions) {\\n        global._notifyAboutEnd(viewTag, removeViews);\\n      }\\n      currentTransitions.clear();\\n      if (isTransitionRestart) {\\n        return;\\n      }\\n      snapshots.clear();\\n      if (toRemove.size > 0) {\\n        for (const viewTag of toRemove) {\\n          progressAnimations.delete(viewTag);\\n          global._notifyAboutEnd(viewTag, removeViews);\\n        }\\n        toRemove.clear();\\n      }\\n    }\\n  };\\n  return progressTransitionManager;\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"createProgressTransitionRegister\\\",\\\"IS_ANDROID\\\",\\\"_closure\\\",\\\"progressAnimations\\\",\\\"Map\\\",\\\"snapshots\\\",\\\"currentTransitions\\\",\\\"Set\\\",\\\"toRemove\\\",\\\"skipCleaning\\\",\\\"isTransitionRestart\\\",\\\"progressTransitionManager\\\",\\\"addProgressAnimation\\\",\\\"viewTag\\\",\\\"progressAnimation\\\",\\\"size\\\",\\\"has\\\",\\\"set\\\",\\\"removeProgressAnimation\\\",\\\"isUnmounting\\\",\\\"add\\\",\\\"delete\\\",\\\"onTransitionStart\\\",\\\"snapshot\\\",\\\"frame\\\",\\\"progress\\\",\\\"get\\\",\\\"onAndroidFinishTransitioning\\\",\\\"onTransitionEnd\\\",\\\"removeViews\\\",\\\"clear\\\",\\\"global\\\",\\\"_notifyAboutEnd\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"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\\\",\\\"ignoreList\\\":[]}\"\n};\nvar createProgressTransitionRegister = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f() {\n    var progressAnimations = new Map();\n    var snapshots = new Map();\n    var currentTransitions = new Set();\n    var toRemove = new Set();\n    var skipCleaning = false;\n    var isTransitionRestart = false;\n    var progressTransitionManager = {\n      addProgressAnimation: function addProgressAnimation(viewTag, progressAnimation) {\n        if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {\n          isTransitionRestart = !IS_ANDROID;\n        }\n        progressAnimations.set(viewTag, progressAnimation);\n      },\n      removeProgressAnimation: function removeProgressAnimation(viewTag, isUnmounting) {\n        if (currentTransitions.size > 0) {\n          isTransitionRestart = !IS_ANDROID;\n        }\n        if (isUnmounting) {\n          toRemove.add(viewTag);\n        } else {\n          progressAnimations.delete(viewTag);\n        }\n      },\n      onTransitionStart: function onTransitionStart(viewTag, snapshot) {\n        skipCleaning = isTransitionRestart;\n        snapshots.set(viewTag, snapshot);\n        currentTransitions.add(viewTag);\n        progressTransitionManager.frame(0);\n      },\n      frame: function frame(progress) {\n        for (var viewTag of currentTransitions) {\n          var progressAnimation = progressAnimations.get(viewTag);\n          if (!progressAnimation) {\n            continue;\n          }\n          var snapshot = snapshots.get(viewTag);\n          progressAnimation(viewTag, snapshot, progress);\n        }\n      },\n      onAndroidFinishTransitioning: function onAndroidFinishTransitioning() {\n        if (toRemove.size > 0) {\n          progressTransitionManager.onTransitionEnd();\n        }\n      },\n      onTransitionEnd: function onTransitionEnd() {\n        var removeViews = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (currentTransitions.size === 0) {\n          toRemove.clear();\n          return;\n        }\n        if (skipCleaning) {\n          skipCleaning = false;\n          isTransitionRestart = false;\n          return;\n        }\n        for (var viewTag of currentTransitions) {\n          global._notifyAboutEnd(viewTag, removeViews);\n        }\n        currentTransitions.clear();\n        if (isTransitionRestart) {\n          return;\n        }\n        snapshots.clear();\n        if (toRemove.size > 0) {\n          for (var _viewTag of toRemove) {\n            progressAnimations.delete(_viewTag);\n            global._notifyAboutEnd(_viewTag, removeViews);\n          }\n          toRemove.clear();\n        }\n      }\n    };\n    return progressTransitionManager;\n  };\n  _f._closure = {\n    IS_ANDROID: IS_ANDROID\n  };\n  _f.__initData = _worklet_5099239847904_init_data;\n  _f.__workletHash = 5099239847904;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_16772379664737_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    createProgressTransitionRegister\\n  } = this._closure;\\n  global.ProgressTransitionRegister = createProgressTransitionRegister();\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\layoutReanimation\\\\sharedTransitions\\\\ProgressTransitionManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"createProgressTransitionRegister\\\",\\\"_closure\\\",\\\"global\\\",\\\"ProgressTransitionRegister\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/layoutReanimation/sharedTransitions/ProgressTransitionManager.js\\\"],\\\"mappings\\\":\\\"AA6MqB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvBC,MAAM,CAACC,0BAA0B,GAAGH,gCAAgC,CAAC,CAAC;AACxE\\\",\\\"ignoreList\\\":[]}\"\n};\nif (shouldBeUseWeb()) {\n  var maybeThrowError = function maybeThrowError() {\n    if (!isJest()) {\n      throw new ReanimatedError('`ProgressTransitionRegister` is not available on non-native platform.');\n    }\n  };\n  global.ProgressTransitionRegister = new Proxy({}, {\n    get: maybeThrowError,\n    set: function set() {\n      maybeThrowError();\n      return false;\n    }\n  });\n} else {\n  runOnUIImmediately(function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f() {\n      global.ProgressTransitionRegister = createProgressTransitionRegister();\n    };\n    _f._closure = {\n      createProgressTransitionRegister: createProgressTransitionRegister\n    };\n    _f.__initData = _worklet_16772379664737_init_data;\n    _f.__workletHash = 16772379664737;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }())();\n}","map":{"version":3,"names":["_classCallCheck","_createClass","runOnUIImmediately","registerEventHandler","unregisterEventHandler","Platform","isJest","shouldBeUseWeb","ReanimatedError","IS_ANDROID","OS","_worklet_3191002645810_init_data","code","location","sourceMap","_worklet_7501295322261_init_data","_worklet_8685801420075_init_data","_worklet_6785581466586_init_data","_worklet_1451512253981_init_data","_worklet_7273231321452_init_data","_worklet_6785581466586_init_data2","ProgressTransitionManager","_sharedElementCount","_eventHandler","isRegistered","onTransitionProgress","onAppear","onDisappear","onSwipeDismiss","key","value","addProgressAnimation","viewTag","progressAnimation","_e","global","Error","_f","ProgressTransitionRegister","_closure","registerEventHandlers","removeProgressAnimation","isUnmounting","arguments","length","undefined","unregisterEventHandlers","eventHandler","eventPrefix","lastProgressValue","event","progress","frame","__initData","__workletHash","__stackDetails","__version","onTransitionEnd","onAndroidFinishTransitioning","_worklet_5099239847904_init_data","createProgressTransitionRegister","progressAnimations","Map","snapshots","currentTransitions","Set","toRemove","skipCleaning","isTransitionRestart","progressTransitionManager","size","has","set","add","delete","onTransitionStart","snapshot","get","removeViews","clear","_notifyAboutEnd","_worklet_16772379664737_init_data","maybeThrowError","Proxy"],"sources":["d:\\CODING\\random\\12-13\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\sharedTransitions\\ProgressTransitionManager.ts"],"sourcesContent":["'use strict';\nimport { runOnUIImmediately } from '../../threads';\nimport type {\n  ProgressAnimation,\n  SharedTransitionAnimationsValues,\n} from '../animationBuilder/commonTypes';\nimport { registerEventHandler, unregisterEventHandler } from '../../core';\nimport { Platform } from 'react-native';\nimport { isJest, shouldBeUseWeb } from '../../PlatformChecker';\nimport { ReanimatedError } from '../../errors';\n\ntype TransitionProgressEvent = {\n  closing: number;\n  goingForward: number;\n  eventName: string;\n  progress: number;\n  target: number;\n};\n\nconst IS_ANDROID = Platform.OS === 'android';\n\nexport class ProgressTransitionManager {\n  private _sharedElementCount = 0;\n  private _eventHandler = {\n    isRegistered: false,\n    onTransitionProgress: -1,\n    onAppear: -1,\n    onDisappear: -1,\n    onSwipeDismiss: -1,\n  };\n\n  public addProgressAnimation(\n    viewTag: number,\n    progressAnimation: ProgressAnimation\n  ) {\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.addProgressAnimation(\n        viewTag,\n        progressAnimation\n      );\n    })();\n\n    this.registerEventHandlers();\n  }\n\n  public removeProgressAnimation(viewTag: number, isUnmounting = true) {\n    this.unregisterEventHandlers();\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.removeProgressAnimation(\n        viewTag,\n        isUnmounting\n      );\n    })();\n  }\n\n  private registerEventHandlers() {\n    this._sharedElementCount++;\n    const eventHandler = this._eventHandler;\n    if (!eventHandler.isRegistered) {\n      eventHandler.isRegistered = true;\n      const eventPrefix = IS_ANDROID ? 'on' : 'top';\n      let lastProgressValue = -1;\n      eventHandler.onTransitionProgress = registerEventHandler(\n        (event: TransitionProgressEvent) => {\n          'worklet';\n          const progress = event.progress;\n          if (progress === lastProgressValue) {\n            // During screen transition, handler receives two events with the same progress\n            // value for both screens, but for modals, there is only one event. To optimize\n            // performance and avoid unnecessary worklet calls, let's skip the second event.\n            return;\n          }\n          lastProgressValue = progress;\n          global.ProgressTransitionRegister.frame(progress);\n        },\n        eventPrefix + 'TransitionProgress'\n      );\n      eventHandler.onAppear = registerEventHandler(() => {\n        'worklet';\n        global.ProgressTransitionRegister.onTransitionEnd();\n      }, eventPrefix + 'Appear');\n\n      if (IS_ANDROID) {\n        // onFinishTransitioning event is available only on Android and\n        // is used to handle closing modals\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n        }, 'onFinishTransitioning');\n      } else if (Platform.OS === 'ios') {\n        // topDisappear event is required to handle closing modals on iOS\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd(true);\n        }, 'topDisappear');\n        eventHandler.onSwipeDismiss = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd();\n        }, 'topGestureCancel');\n      }\n    }\n  }\n\n  private unregisterEventHandlers(): void {\n    this._sharedElementCount--;\n    if (this._sharedElementCount === 0) {\n      const eventHandler = this._eventHandler;\n      eventHandler.isRegistered = false;\n      if (eventHandler.onTransitionProgress !== -1) {\n        unregisterEventHandler(eventHandler.onTransitionProgress);\n        eventHandler.onTransitionProgress = -1;\n      }\n      if (eventHandler.onAppear !== -1) {\n        unregisterEventHandler(eventHandler.onAppear);\n        eventHandler.onAppear = -1;\n      }\n      if (eventHandler.onDisappear !== -1) {\n        unregisterEventHandler(eventHandler.onDisappear);\n        eventHandler.onDisappear = -1;\n      }\n      if (eventHandler.onSwipeDismiss !== -1) {\n        unregisterEventHandler(eventHandler.onSwipeDismiss);\n        eventHandler.onSwipeDismiss = -1;\n      }\n    }\n  }\n}\n\nfunction createProgressTransitionRegister() {\n  'worklet';\n  const progressAnimations = new Map<number, ProgressAnimation>();\n  const snapshots = new Map<\n    number,\n    Partial<SharedTransitionAnimationsValues>\n  >();\n  const currentTransitions = new Set<number>();\n  const toRemove = new Set<number>();\n\n  let skipCleaning = false;\n  let isTransitionRestart = false;\n\n  const progressTransitionManager = {\n    addProgressAnimation: (\n      viewTag: number,\n      progressAnimation: ProgressAnimation\n    ) => {\n      if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      progressAnimations.set(viewTag, progressAnimation);\n    },\n    removeProgressAnimation: (viewTag: number, isUnmounting: boolean) => {\n      if (currentTransitions.size > 0) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      if (isUnmounting) {\n        // Remove the animation config after the transition is finished\n        toRemove.add(viewTag);\n      } else {\n        // if the animation is removed, without ever being started, it can be removed immediately\n        progressAnimations.delete(viewTag);\n      }\n    },\n    onTransitionStart: (\n      viewTag: number,\n      snapshot: Partial<SharedTransitionAnimationsValues>\n    ) => {\n      skipCleaning = isTransitionRestart;\n      snapshots.set(viewTag, snapshot);\n      currentTransitions.add(viewTag);\n      // set initial style for re-parented components\n      progressTransitionManager.frame(0);\n    },\n    frame: (progress: number) => {\n      for (const viewTag of currentTransitions) {\n        const progressAnimation = progressAnimations.get(viewTag);\n        if (!progressAnimation) {\n          continue;\n        }\n        const snapshot = snapshots.get(\n          viewTag\n        )! as SharedTransitionAnimationsValues;\n        progressAnimation(viewTag, snapshot, progress);\n      }\n    },\n    onAndroidFinishTransitioning: () => {\n      if (toRemove.size > 0) {\n        // it should be ran only on modal closing\n        progressTransitionManager.onTransitionEnd();\n      }\n    },\n    onTransitionEnd: (removeViews = false) => {\n      if (currentTransitions.size === 0) {\n        toRemove.clear();\n        return;\n      }\n      if (skipCleaning) {\n        skipCleaning = false;\n        isTransitionRestart = false;\n        return;\n      }\n      for (const viewTag of currentTransitions) {\n        global._notifyAboutEnd(viewTag, removeViews);\n      }\n      currentTransitions.clear();\n      if (isTransitionRestart) {\n        // on transition restart, progressAnimations should be saved\n        // because they potentially can be used in the next transition\n        return;\n      }\n      snapshots.clear();\n      if (toRemove.size > 0) {\n        for (const viewTag of toRemove) {\n          progressAnimations.delete(viewTag);\n          global._notifyAboutEnd(viewTag, removeViews);\n        }\n        toRemove.clear();\n      }\n    },\n  };\n  return progressTransitionManager;\n}\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new ReanimatedError(\n        '`ProgressTransitionRegister` is not available on non-native platform.'\n      );\n    }\n  };\n  global.ProgressTransitionRegister = new Proxy(\n    {} as ProgressTransitionRegister,\n    {\n      get: maybeThrowError,\n      set: () => {\n        maybeThrowError();\n        return false;\n      },\n    }\n  );\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.ProgressTransitionRegister = createProgressTransitionRegister();\n  })();\n}\n\nexport type ProgressTransitionRegister = ReturnType<\n  typeof createProgressTransitionRegister\n>;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}