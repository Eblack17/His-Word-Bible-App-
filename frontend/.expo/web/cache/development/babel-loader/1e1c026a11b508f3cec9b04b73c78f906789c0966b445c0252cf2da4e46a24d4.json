{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { registerReanimatedError, reportFatalErrorOnJS } from \"./errors.js\";\nimport { isChromeDebugger, isJest, shouldBeUseWeb } from \"./PlatformChecker.js\";\nimport { runOnJS, setupMicrotasks, callMicrotasks, runOnUIImmediately, executeOnUIRuntimeSync } from \"./threads.js\";\nimport { mockedRequestAnimationFrame } from \"./mockedRequestAnimationFrame.js\";\nimport { DEFAULT_LOGGER_CONFIG, logToLogBoxAndConsole, registerLoggerConfig, replaceLoggerImplementation } from \"./logger/index.js\";\nvar IS_JEST = isJest();\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nvar IS_CHROME_DEBUGGER = isChromeDebugger();\nvar _worklet_7864092337800_init_data = {\n  code: \"function overrideLogFunctionImplementation() {\\n  const {\\n    replaceLoggerImplementation,\\n    runOnJS,\\n    logToLogBoxAndConsole\\n  } = this._closure;\\n  replaceLoggerImplementation(function (data) {\\n    'worklet';\\n\\n    runOnJS(logToLogBoxAndConsole)(data);\\n  });\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\initializers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"overrideLogFunctionImplementation\\\",\\\"replaceLoggerImplementation\\\",\\\"runOnJS\\\",\\\"logToLogBoxAndConsole\\\",\\\"_closure\\\",\\\"data\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/initializers.js\\\"],\\\"mappings\\\":\\\"AAWA,SAAAA,kCAAA;EAAA;IAAAC,2BAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAAAH,2BAAA,WAAAI,IAAA;IACA;;IAEAH,OAAS,CAAAC,qBAAA,EAAAE,IAAA;EAGP\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_1229264253957_init_data = {\n  code: \"function anonymous(data) {\\n  const {\\n    runOnJS,\\n    logToLogBoxAndConsole\\n  } = this._closure;\\n  runOnJS(logToLogBoxAndConsole)(data);\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\initializers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"data\\\",\\\"runOnJS\\\",\\\"logToLogBoxAndConsole\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/initializers.js\\\"],\\\"mappings\\\":\\\"AAiB8B,SAAAA,SAAQA,CAAAC,IAAA;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAGlCF,OAAO,CAACC,qBAAqB,CAAC,CAACF,IAAI,CAAC;AACtC\\\",\\\"ignoreList\\\":[]}\"\n};\nvar overrideLogFunctionImplementation = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f() {\n    replaceLoggerImplementation(function () {\n      var _e = [new global.Error(), -3, -27];\n      var _f = function _f(data) {\n        runOnJS(logToLogBoxAndConsole)(data);\n      };\n      _f._closure = {\n        runOnJS: runOnJS,\n        logToLogBoxAndConsole: logToLogBoxAndConsole\n      };\n      _f.__initData = _worklet_1229264253957_init_data;\n      _f.__workletHash = 1229264253957;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }());\n  };\n  _f._closure = {\n    replaceLoggerImplementation: replaceLoggerImplementation,\n    runOnJS: runOnJS,\n    logToLogBoxAndConsole: logToLogBoxAndConsole\n  };\n  _f.__initData = _worklet_7864092337800_init_data;\n  _f.__workletHash = 7864092337800;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nregisterLoggerConfig(DEFAULT_LOGGER_CONFIG);\noverrideLogFunctionImplementation();\nif (SHOULD_BE_USE_WEB) {\n  global._WORKLET = false;\n  global._log = console.log;\n  global._getAnimationTimestamp = function () {\n    return performance.now();\n  };\n} else {\n  executeOnUIRuntimeSync(registerReanimatedError)();\n  executeOnUIRuntimeSync(registerLoggerConfig)(DEFAULT_LOGGER_CONFIG);\n  executeOnUIRuntimeSync(overrideLogFunctionImplementation)();\n}\nvar _worklet_15594322672200_init_data = {\n  code: \"function callGuardDEV(fn, ...args) {\\n  try {\\n    return fn(...args);\\n  } catch (e) {\\n    if (global.__ErrorUtils) {\\n      global.__ErrorUtils.reportFatalError(e);\\n    } else {\\n      throw e;\\n    }\\n  }\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\initializers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"callGuardDEV\\\",\\\"fn\\\",\\\"args\\\",\\\"e\\\",\\\"global\\\",\\\"__ErrorUtils\\\",\\\"reportFatalError\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/initializers.js\\\"],\\\"mappings\\\":\\\"AA4CO,SAAAA,YAASA,CAAaC,EAAA,EAAE,GAAEC,IAAG,EAAI;EAGtC,IAAI;IACF,OAAOD,EAAE,CAAC,GAAGC,IAAI,CAAC;EACpB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,IAAIC,MAAM,CAACC,YAAY,EAAE;MACvBD,MAAM,CAACC,YAAY,CAACC,gBAAgB,CAACH,CAAC,CAAC;IACzC,CAAC,MAAM;MACL,MAAMA,CAAC;IACT;EACF;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nexport var callGuardDEV = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(fn) {\n    try {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return fn.apply(void 0, args);\n    } catch (e) {\n      if (global.__ErrorUtils) {\n        global.__ErrorUtils.reportFatalError(e);\n      } else {\n        throw e;\n      }\n    }\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_15594322672200_init_data;\n  _f.__workletHash = 15594322672200;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_13827631157996_init_data = {\n  code: \"function setupCallGuard() {\\n  const {\\n    callGuardDEV,\\n    runOnJS,\\n    reportFatalErrorOnJS\\n  } = this._closure;\\n  global.__callGuardDEV = callGuardDEV;\\n  global.__ErrorUtils = {\\n    reportFatalError: function (error) {\\n      runOnJS(reportFatalErrorOnJS)({\\n        message: error.message,\\n        stack: error.stack\\n      });\\n    }\\n  };\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\initializers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"setupCallGuard\\\",\\\"callGuardDEV\\\",\\\"runOnJS\\\",\\\"reportFatalErrorOnJS\\\",\\\"_closure\\\",\\\"global\\\",\\\"__callGuardDEV\\\",\\\"__ErrorUtils\\\",\\\"reportFatalError\\\",\\\"error\\\",\\\"message\\\",\\\"stack\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/initializers.js\\\"],\\\"mappings\\\":\\\"AAyDO,SAAAA,cAASA,CAAA,EAAc;EAAA;IAAAC,YAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAG5BC,MAAM,CAACC,cAAc,GAAGL,YAAY;EACpCI,MAAM,CAACE,YAAY,GAAG;IACpBC,gBAAgB,EAAE,SAAAA,CAAAC,KAAK,EAAI;MACzBP,OAAO,CAACC,oBAAoB,CAAC,CAAC;QAC5BO,OAAO,EAAED,KAAK,CAACC,OAAO;QACtBC,KAAK,EAAEF,KAAK,CAACE;MACf,CAAC,CAAC;IACJ;EACF,CAAC;AACH\\\",\\\"ignoreList\\\":[]}\"\n};\nexport var setupCallGuard = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f() {\n    global.__callGuardDEV = callGuardDEV;\n    global.__ErrorUtils = {\n      reportFatalError: function reportFatalError(error) {\n        runOnJS(reportFatalErrorOnJS)({\n          message: error.message,\n          stack: error.stack\n        });\n      }\n    };\n  };\n  _f._closure = {\n    callGuardDEV: callGuardDEV,\n    runOnJS: runOnJS,\n    reportFatalErrorOnJS: reportFatalErrorOnJS\n  };\n  _f.__initData = _worklet_13827631157996_init_data;\n  _f.__workletHash = 13827631157996;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nfunction createMemorySafeCapturableConsole() {\n  var consoleCopy = Object.fromEntries(Object.entries(console).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      methodName = _ref2[0],\n      method = _ref2[1];\n    var methodWrapper = function methodWrapper() {\n      return method.apply(void 0, arguments);\n    };\n    if (method.name) {\n      Object.defineProperty(methodWrapper, 'name', {\n        value: method.name,\n        writable: false\n      });\n    }\n    return [methodName, methodWrapper];\n  }));\n  return consoleCopy;\n}\nvar capturableConsole = createMemorySafeCapturableConsole();\nvar _worklet_5580589539051_init_data = {\n  code: \"function setupConsole() {\\n  const {\\n    IS_CHROME_DEBUGGER,\\n    runOnJS,\\n    capturableConsole\\n  } = this._closure;\\n  if (!IS_CHROME_DEBUGGER) {\\n    global.console = {\\n      assert: runOnJS(capturableConsole.assert),\\n      debug: runOnJS(capturableConsole.debug),\\n      log: runOnJS(capturableConsole.log),\\n      warn: runOnJS(capturableConsole.warn),\\n      error: runOnJS(capturableConsole.error),\\n      info: runOnJS(capturableConsole.info)\\n    };\\n  }\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\initializers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"setupConsole\\\",\\\"IS_CHROME_DEBUGGER\\\",\\\"runOnJS\\\",\\\"capturableConsole\\\",\\\"_closure\\\",\\\"global\\\",\\\"console\\\",\\\"assert\\\",\\\"debug\\\",\\\"log\\\",\\\"warn\\\",\\\"error\\\",\\\"info\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/initializers.js\\\"],\\\"mappings\\\":\\\"AA8GO,SAAAA,YAASA,CAAA,EAAY;EAAA;IAAAC,kBAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EAG1B,IAAI,CAACH,kBAAkB,EAAE;IAEvBI,MAAM,CAACC,OAAO,GAAG;MAEfC,MAAM,EAAEL,OAAO,CAACC,iBAAiB,CAACI,MAAM,CAAC;MACzCC,KAAK,EAAEN,OAAO,CAACC,iBAAiB,CAACK,KAAK,CAAC;MACvCC,GAAG,EAAEP,OAAO,CAACC,iBAAiB,CAACM,GAAG,CAAC;MACnCC,IAAI,EAAER,OAAO,CAACC,iBAAiB,CAACO,IAAI,CAAC;MACrCC,KAAK,EAAET,OAAO,CAACC,iBAAiB,CAACQ,KAAK,CAAC;MACvCC,IAAI,EAAEV,OAAO,CAACC,iBAAiB,CAACS,IAAI;IAEtC,CAAC;EACH;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nexport var setupConsole = function () {\n  var _e = [new global.Error(), -4, -27];\n  var _f = function _f() {\n    if (!IS_CHROME_DEBUGGER) {\n      global.console = {\n        assert: runOnJS(capturableConsole.assert),\n        debug: runOnJS(capturableConsole.debug),\n        log: runOnJS(capturableConsole.log),\n        warn: runOnJS(capturableConsole.warn),\n        error: runOnJS(capturableConsole.error),\n        info: runOnJS(capturableConsole.info)\n      };\n    }\n  };\n  _f._closure = {\n    IS_CHROME_DEBUGGER: IS_CHROME_DEBUGGER,\n    runOnJS: runOnJS,\n    capturableConsole: capturableConsole\n  };\n  _f.__initData = _worklet_5580589539051_init_data;\n  _f.__workletHash = 5580589539051;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_9993156302748_init_data = {\n  code: \"function setupRequestAnimationFrame() {\\n  const {\\n    callMicrotasks\\n  } = this._closure;\\n  const nativeRequestAnimationFrame = global.requestAnimationFrame;\\n  let animationFrameCallbacks = [];\\n  let flushRequested = false;\\n  global.__flushAnimationFrame = function (frameTimestamp) {\\n    const currentCallbacks = animationFrameCallbacks;\\n    animationFrameCallbacks = [];\\n    currentCallbacks.forEach(function (f) {\\n      return f(frameTimestamp);\\n    });\\n    callMicrotasks();\\n  };\\n  global.requestAnimationFrame = function (callback) {\\n    animationFrameCallbacks.push(callback);\\n    if (!flushRequested) {\\n      flushRequested = true;\\n      nativeRequestAnimationFrame(function (timestamp) {\\n        flushRequested = false;\\n        global.__frameTimestamp = timestamp;\\n        global.__flushAnimationFrame(timestamp);\\n        global.__frameTimestamp = undefined;\\n      });\\n    }\\n    return -1;\\n  };\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\initializers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"setupRequestAnimationFrame\\\",\\\"callMicrotasks\\\",\\\"_closure\\\",\\\"nativeRequestAnimationFrame\\\",\\\"global\\\",\\\"requestAnimationFrame\\\",\\\"animationFrameCallbacks\\\",\\\"flushRequested\\\",\\\"__flushAnimationFrame\\\",\\\"frameTimestamp\\\",\\\"currentCallbacks\\\",\\\"forEach\\\",\\\"f\\\",\\\"callback\\\",\\\"push\\\",\\\"timestamp\\\",\\\"__frameTimestamp\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/initializers.js\\\"],\\\"mappings\\\":\\\"AA+HA,SAAAA,0BAASA,CAAA,EAA0B;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAKjC,MAAMC,2BAA2B,GAAGC,MAAM,CAACC,qBAAqB;EAChE,IAAIC,uBAAuB,GAAG,EAAE;EAChC,IAAIC,cAAc,GAAG,KAAK;EAC1BH,MAAM,CAACI,qBAAqB,GAAG,UAAAC,cAAc,EAAI;IAC/C,MAAMC,gBAAgB,GAAGJ,uBAAuB;IAChDA,uBAAuB,GAAG,EAAE;IAC5BI,gBAAgB,CAACC,OAAO,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACH,cAAc,CAAC;IAAA,EAAC;IAChDR,cAAc,CAAC,CAAC;EAClB,CAAC;EACDG,MAAM,CAACC,qBAAqB,GAAG,UAAAQ,QAAQ,EAAI;IACzCP,uBAAuB,CAACQ,IAAI,CAACD,QAAQ,CAAC;IACtC,IAAI,CAACN,cAAc,EAAE;MACnBA,cAAc,GAAG,IAAI;MACrBJ,2BAA2B,CAAC,UAAAY,SAAS,EAAI;QACvCR,cAAc,GAAG,KAAK;QACtBH,MAAM,CAACY,gBAAgB,GAAGD,SAAS;QACnCX,MAAM,CAACI,qBAAqB,CAACO,SAAS,CAAC;QACvCX,MAAM,CAACY,gBAAgB,GAAGC,SAAS;MACrC,CAAC,CAAC;IACJ;IAKA,OAAO,CAAC,CAAC;EACX,CAAC;AACH\\\",\\\"ignoreList\\\":[]}\"\n};\nvar setupRequestAnimationFrame = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f() {\n    var nativeRequestAnimationFrame = global.requestAnimationFrame;\n    var animationFrameCallbacks = [];\n    var flushRequested = false;\n    global.__flushAnimationFrame = function (frameTimestamp) {\n      var currentCallbacks = animationFrameCallbacks;\n      animationFrameCallbacks = [];\n      currentCallbacks.forEach(function (f) {\n        return f(frameTimestamp);\n      });\n      callMicrotasks();\n    };\n    global.requestAnimationFrame = function (callback) {\n      animationFrameCallbacks.push(callback);\n      if (!flushRequested) {\n        flushRequested = true;\n        nativeRequestAnimationFrame(function (timestamp) {\n          flushRequested = false;\n          global.__frameTimestamp = timestamp;\n          global.__flushAnimationFrame(timestamp);\n          global.__frameTimestamp = undefined;\n        });\n      }\n      return -1;\n    };\n  };\n  _f._closure = {\n    callMicrotasks: callMicrotasks\n  };\n  _f.__initData = _worklet_9993156302748_init_data;\n  _f.__workletHash = 9993156302748;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_14276016364891_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    setupCallGuard,\\n    setupConsole,\\n    SHOULD_BE_USE_WEB,\\n    setupMicrotasks,\\n    setupRequestAnimationFrame\\n  } = this._closure;\\n  setupCallGuard();\\n  setupConsole();\\n  if (!SHOULD_BE_USE_WEB) {\\n    setupMicrotasks();\\n    setupRequestAnimationFrame();\\n  }\\n}\",\n  location: \"d:\\\\CODING\\\\random\\\\12-13\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\initializers.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"setupCallGuard\\\",\\\"setupConsole\\\",\\\"SHOULD_BE_USE_WEB\\\",\\\"setupMicrotasks\\\",\\\"setupRequestAnimationFrame\\\",\\\"_closure\\\"],\\\"sources\\\":[\\\"d:/CODING/random/12-13/node_modules/react-native-reanimated/lib/module/initializers.js\\\"],\\\"mappings\\\":\\\"AAyKqB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,cAAA;IAAAC,YAAA;IAAAC,iBAAA;IAAAC,eAAA;IAAAC;EAAA,SAAAC,QAAA;EAGvBL,cAAc,CAAC,CAAC;EAChBC,YAAY,CAAC,CAAC;EACd,IAAI,CAACC,iBAAiB,EAAE;IACtBC,eAAe,CAAC,CAAC;IACjBC,0BAA0B,CAAC,CAAC;EAC9B;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nexport function initializeUIRuntime() {\n  if (IS_JEST) {\n    globalThis.requestAnimationFrame = mockedRequestAnimationFrame;\n  }\n  runOnUIImmediately(function () {\n    var _e = [new global.Error(), -6, -27];\n    var _f = function _f() {\n      setupCallGuard();\n      setupConsole();\n      if (!SHOULD_BE_USE_WEB) {\n        setupMicrotasks();\n        setupRequestAnimationFrame();\n      }\n    };\n    _f._closure = {\n      setupCallGuard: setupCallGuard,\n      setupConsole: setupConsole,\n      SHOULD_BE_USE_WEB: SHOULD_BE_USE_WEB,\n      setupMicrotasks: setupMicrotasks,\n      setupRequestAnimationFrame: setupRequestAnimationFrame\n    };\n    _f.__initData = _worklet_14276016364891_init_data;\n    _f.__workletHash = 14276016364891;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }())();\n}","map":{"version":3,"names":["_slicedToArray","registerReanimatedError","reportFatalErrorOnJS","isChromeDebugger","isJest","shouldBeUseWeb","runOnJS","setupMicrotasks","callMicrotasks","runOnUIImmediately","executeOnUIRuntimeSync","mockedRequestAnimationFrame","DEFAULT_LOGGER_CONFIG","logToLogBoxAndConsole","registerLoggerConfig","replaceLoggerImplementation","IS_JEST","SHOULD_BE_USE_WEB","IS_CHROME_DEBUGGER","_worklet_7864092337800_init_data","code","location","sourceMap","_worklet_1229264253957_init_data","overrideLogFunctionImplementation","_e","global","Error","_f","data","_closure","__initData","__workletHash","__stackDetails","__version","_WORKLET","_log","console","log","_getAnimationTimestamp","performance","now","_worklet_15594322672200_init_data","callGuardDEV","fn","_len","arguments","length","args","Array","_key","apply","e","__ErrorUtils","reportFatalError","_worklet_13827631157996_init_data","setupCallGuard","__callGuardDEV","error","message","stack","createMemorySafeCapturableConsole","consoleCopy","Object","fromEntries","entries","map","_ref","_ref2","methodName","method","methodWrapper","name","defineProperty","value","writable","capturableConsole","_worklet_5580589539051_init_data","setupConsole","assert","debug","warn","info","_worklet_9993156302748_init_data","setupRequestAnimationFrame","nativeRequestAnimationFrame","requestAnimationFrame","animationFrameCallbacks","flushRequested","__flushAnimationFrame","frameTimestamp","currentCallbacks","forEach","f","callback","push","timestamp","__frameTimestamp","undefined","initializeUIRuntime","globalThis","_worklet_14276016364891_init_data"],"sources":["d:\\CODING\\random\\12-13\\node_modules\\react-native-reanimated\\src\\initializers.ts"],"sourcesContent":["'use strict';\nimport { registerReanimatedError, reportFatalErrorOnJS } from './errors';\nimport { isChromeDebugger, isJest, shouldBeUseWeb } from './PlatformChecker';\nimport {\n  runOnJS,\n  setupMicrotasks,\n  callMicrotasks,\n  runOnUIImmediately,\n  executeOnUIRuntimeSync,\n} from './threads';\nimport { mockedRequestAnimationFrame } from './mockedRequestAnimationFrame';\nimport {\n  DEFAULT_LOGGER_CONFIG,\n  logToLogBoxAndConsole,\n  registerLoggerConfig,\n  replaceLoggerImplementation,\n} from './logger';\n\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\nconst IS_CHROME_DEBUGGER = isChromeDebugger();\n\n// Override the logFunction implementation with the one that adds logs\n// with better stack traces to the LogBox (need to override it after `runOnJS`\n// is defined).\nfunction overrideLogFunctionImplementation() {\n  'worklet';\n  replaceLoggerImplementation((data) => {\n    'worklet';\n    runOnJS(logToLogBoxAndConsole)(data);\n  });\n}\n\n// Register logger config and replace the log function implementation in\n// the React runtime global scope\nregisterLoggerConfig(DEFAULT_LOGGER_CONFIG);\noverrideLogFunctionImplementation();\n\n// this is for web implementation\nif (SHOULD_BE_USE_WEB) {\n  global._WORKLET = false;\n  global._log = console.log;\n  global._getAnimationTimestamp = () => performance.now();\n} else {\n  // Register ReanimatedError and logger config in the UI runtime global scope.\n  // (we are using `executeOnUIRuntimeSync` here to make sure that the changes\n  // are applied before any async operations are executed on the UI runtime)\n  executeOnUIRuntimeSync(registerReanimatedError)();\n  executeOnUIRuntimeSync(registerLoggerConfig)(DEFAULT_LOGGER_CONFIG);\n  executeOnUIRuntimeSync(overrideLogFunctionImplementation)();\n}\n\n// callGuard is only used with debug builds\nexport function callGuardDEV<Args extends unknown[], ReturnValue>(\n  fn: (...args: Args) => ReturnValue,\n  ...args: Args\n): ReturnValue | void {\n  'worklet';\n  try {\n    return fn(...args);\n  } catch (e) {\n    if (global.__ErrorUtils) {\n      global.__ErrorUtils.reportFatalError(e as Error);\n    } else {\n      throw e;\n    }\n  }\n}\n\nexport function setupCallGuard() {\n  'worklet';\n  global.__callGuardDEV = callGuardDEV;\n  global.__ErrorUtils = {\n    reportFatalError: (error: Error) => {\n      runOnJS(reportFatalErrorOnJS)({\n        message: error.message,\n        stack: error.stack,\n      });\n    },\n  };\n}\n\n/**\n * Currently there seems to be a bug in the JSI layer which causes a crash when\n * we try to copy some of the console methods, i.e. `clear` or `dirxml`.\n *\n * The crash happens only in React Native 0.75. It's not reproducible in neither\n * 0.76 nor 0.74. It also happens only in the configuration of a debug app and\n * production bundle.\n *\n * I haven't yet discovered what exactly causes the crash. It's tied to the\n * console methods sometimes being `HostFunction`s. Therefore, as a workaround\n * we don't copy the methods as they are in the original console object, we copy\n * JavaScript wrappers instead.\n */\nfunction createMemorySafeCapturableConsole(): typeof console {\n  const consoleCopy = Object.fromEntries(\n    Object.entries(console).map(([methodName, method]) => {\n      const methodWrapper = function methodWrapper(...args: unknown[]) {\n        return method(...args);\n      };\n      if (method.name) {\n        /**\n         * Set the original method name as the wrapper name if available.\n         *\n         * It might be unnecessary but if we want to fully mimic the console\n         * object we should take into the account the fact some code might rely\n         * on the method name.\n         */\n        Object.defineProperty(methodWrapper, 'name', {\n          value: method.name,\n          writable: false,\n        });\n      }\n      return [methodName, methodWrapper];\n    })\n  );\n\n  return consoleCopy as unknown as typeof console;\n}\n\n// We really have to create a copy of console here. Function runOnJS we use on elements inside\n// this object makes it not configurable\nconst capturableConsole = createMemorySafeCapturableConsole();\n\nexport function setupConsole() {\n  'worklet';\n  if (!IS_CHROME_DEBUGGER) {\n    // @ts-ignore TypeScript doesn't like that there are missing methods in console object, but we don't provide all the methods for the UI runtime console version\n    global.console = {\n      /* eslint-disable @typescript-eslint/unbound-method */\n      assert: runOnJS(capturableConsole.assert),\n      debug: runOnJS(capturableConsole.debug),\n      log: runOnJS(capturableConsole.log),\n      warn: runOnJS(capturableConsole.warn),\n      error: runOnJS(capturableConsole.error),\n      info: runOnJS(capturableConsole.info),\n      /* eslint-enable @typescript-eslint/unbound-method */\n    };\n  }\n}\n\nfunction setupRequestAnimationFrame() {\n  'worklet';\n\n  // Jest mocks requestAnimationFrame API and it does not like if that mock gets overridden\n  // so we avoid doing requestAnimationFrame batching in Jest environment.\n  const nativeRequestAnimationFrame = global.requestAnimationFrame;\n\n  let animationFrameCallbacks: Array<(timestamp: number) => void> = [];\n  let flushRequested = false;\n\n  global.__flushAnimationFrame = (frameTimestamp: number) => {\n    const currentCallbacks = animationFrameCallbacks;\n    animationFrameCallbacks = [];\n    currentCallbacks.forEach((f) => f(frameTimestamp));\n    callMicrotasks();\n  };\n\n  global.requestAnimationFrame = (\n    callback: (timestamp: number) => void\n  ): number => {\n    animationFrameCallbacks.push(callback);\n    if (!flushRequested) {\n      flushRequested = true;\n      nativeRequestAnimationFrame((timestamp) => {\n        flushRequested = false;\n        global.__frameTimestamp = timestamp;\n        global.__flushAnimationFrame(timestamp);\n        global.__frameTimestamp = undefined;\n      });\n    }\n    // Reanimated currently does not support cancelling callbacks requested with\n    // requestAnimationFrame. We return -1 as identifier which isn't in line\n    // with the spec but it should give users better clue in case they actually\n    // attempt to store the value returned from rAF and use it for cancelling.\n    return -1;\n  };\n}\n\nexport function initializeUIRuntime() {\n  if (IS_JEST) {\n    // requestAnimationFrame react-native jest's setup is incorrect as it polyfills\n    // the method directly using setTimeout, therefore the callback doesn't get the\n    // expected timestamp as the only argument: https://github.com/facebook/react-native/blob/main/packages/react-native/jest/setup.js#L28\n    // We override this setup here to make sure that callbacks get the proper timestamps\n    // when executed. For non-jest environments we define requestAnimationFrame in setupRequestAnimationFrame\n    // @ts-ignore TypeScript uses Node definition for rAF, setTimeout, etc which returns a Timeout object rather than a number\n    globalThis.requestAnimationFrame = mockedRequestAnimationFrame;\n  }\n\n  runOnUIImmediately(() => {\n    'worklet';\n    setupCallGuard();\n    setupConsole();\n    if (!SHOULD_BE_USE_WEB) {\n      setupMicrotasks();\n      setupRequestAnimationFrame();\n    }\n  })();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}