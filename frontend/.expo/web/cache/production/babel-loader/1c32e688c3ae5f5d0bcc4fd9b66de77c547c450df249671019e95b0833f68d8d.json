{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{supabase}from\"./supabase\";export var api={loadChats:function(){var _loadChats=_asyncToGenerator(function*(){var _yield$supabase$auth$=yield supabase.auth.getUser(),user=_yield$supabase$auth$.data.user;if(!user){throw new Error('No user found');}var _yield$supabase$from$=yield supabase.from('chats').select(`\n        id,\n        user_id,\n        question,\n        response,\n        created_at,\n        is_archived\n      `).eq('user_id',user.id).order('created_at',{ascending:false}),chatData=_yield$supabase$from$.data,error=_yield$supabase$from$.error;if(error){throw new Error(`Error loading chats: ${error.message}`);}var processedChats=(chatData||[]).map(function(chat){return _objectSpread(_objectSpread({},chat),{},{response:typeof chat.response==='string'?JSON.parse(chat.response):chat.response});});return{chats:processedChats.filter(function(chat){return!chat.is_archived;}),archivedChats:processedChats.filter(function(chat){return chat.is_archived;})};});function loadChats(){return _loadChats.apply(this,arguments);}return loadChats;}(),archiveChat:function(){var _archiveChat=_asyncToGenerator(function*(chatId,currentlyArchived){var _yield$supabase$from$2=yield supabase.from('chats').update({is_archived:!currentlyArchived}).eq('id',chatId),error=_yield$supabase$from$2.error;if(error){throw new Error(`Error toggling archive status: ${error.message}`);}});function archiveChat(_x,_x2){return _archiveChat.apply(this,arguments);}return archiveChat;}(),deleteChat:function(){var _deleteChat=_asyncToGenerator(function*(chatId){var _yield$supabase$from$3=yield supabase.from('chats').delete().eq('id',chatId),error=_yield$supabase$from$3.error;if(error){throw new Error(`Error deleting chat: ${error.message}`);}});function deleteChat(_x3){return _deleteChat.apply(this,arguments);}return deleteChat;}(),createChat:function(){var _createChat=_asyncToGenerator(function*(question,response){var _yield$supabase$auth$2=yield supabase.auth.getUser(),user=_yield$supabase$auth$2.data.user;if(!user){throw new Error('No user found');}var _yield$supabase$from$4=yield supabase.from('chats').insert([{user_id:user.id,question:question,response:response,is_archived:false}]).select().single(),data=_yield$supabase$from$4.data,error=_yield$supabase$from$4.error;if(error){throw new Error(`Error creating chat: ${error.message}`);}return data;});function createChat(_x4,_x5){return _createChat.apply(this,arguments);}return createChat;}(),signOut:function(){var _signOut=_asyncToGenerator(function*(){var _yield$supabase$auth$3=yield supabase.auth.signOut(),error=_yield$supabase$auth$3.error;if(error){throw new Error(`Error signing out: ${error.message}`);}});function signOut(){return _signOut.apply(this,arguments);}return signOut;}()};","map":{"version":3,"names":["supabase","api","loadChats","_loadChats","_asyncToGenerator","_yield$supabase$auth$","auth","getUser","user","data","Error","_yield$supabase$from$","from","select","eq","id","order","ascending","chatData","error","message","processedChats","map","chat","_objectSpread","response","JSON","parse","chats","filter","is_archived","archivedChats","apply","arguments","archiveChat","_archiveChat","chatId","currentlyArchived","_yield$supabase$from$2","update","_x","_x2","deleteChat","_deleteChat","_yield$supabase$from$3","delete","_x3","createChat","_createChat","question","_yield$supabase$auth$2","_yield$supabase$from$4","insert","user_id","single","_x4","_x5","signOut","_signOut","_yield$supabase$auth$3"],"sources":["d:/CODING/random/12-13/bible_verse_app/frontend/lib/api.ts"],"sourcesContent":["import { supabase } from './supabase';\n\nexport interface ChatResponse {\n  verse: string;\n  reference: string;\n  relevance: string;\n  explanation: string;\n}\n\nexport interface ChatItem {\n  id: string;\n  question: string;\n  response: ChatResponse;\n  created_at: string;\n  is_archived: boolean;\n}\n\nexport const api = {\n  // Chat operations\n  async loadChats(): Promise<{ chats: ChatItem[], archivedChats: ChatItem[] }> {\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) {\n      throw new Error('No user found');\n    }\n\n    const { data: chatData, error } = await supabase\n      .from('chats')\n      .select(`\n        id,\n        user_id,\n        question,\n        response,\n        created_at,\n        is_archived\n      `)\n      .eq('user_id', user.id)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      throw new Error(`Error loading chats: ${error.message}`);\n    }\n\n    const processedChats = (chatData || []).map(chat => ({\n      ...chat,\n      response: typeof chat.response === 'string' \n        ? JSON.parse(chat.response)\n        : chat.response\n    }));\n\n    return {\n      chats: processedChats.filter(chat => !chat.is_archived),\n      archivedChats: processedChats.filter(chat => chat.is_archived)\n    };\n  },\n\n  async archiveChat(chatId: string, currentlyArchived: boolean): Promise<void> {\n    const { error } = await supabase\n      .from('chats')\n      .update({ is_archived: !currentlyArchived })\n      .eq('id', chatId);\n\n    if (error) {\n      throw new Error(`Error toggling archive status: ${error.message}`);\n    }\n  },\n\n  async deleteChat(chatId: string): Promise<void> {\n    const { error } = await supabase\n      .from('chats')\n      .delete()\n      .eq('id', chatId);\n\n    if (error) {\n      throw new Error(`Error deleting chat: ${error.message}`);\n    }\n  },\n\n  async createChat(question: string, response: ChatResponse): Promise<ChatItem> {\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) {\n      throw new Error('No user found');\n    }\n\n    const { data, error } = await supabase\n      .from('chats')\n      .insert([\n        {\n          user_id: user.id,\n          question,\n          response,\n          is_archived: false\n        }\n      ])\n      .select()\n      .single();\n\n    if (error) {\n      throw new Error(`Error creating chat: ${error.message}`);\n    }\n\n    return data;\n  },\n\n  // Auth operations\n  async signOut(): Promise<void> {\n    const { error } = await supabase.auth.signOut();\n    if (error) {\n      throw new Error(`Error signing out: ${error.message}`);\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}