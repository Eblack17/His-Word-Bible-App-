{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{auth,db}from\"./firebase\";import{collection,query,where,orderBy,getDocs,addDoc,updateDoc,deleteDoc,doc}from'firebase/firestore';import{signOut as firebaseSignOut}from'firebase/auth';export var api={loadChats:function(){var _loadChats=_asyncToGenerator(function*(){var user=auth.currentUser;if(!user){throw new Error('No user found');}var chatsRef=collection(db,'chats');var q=query(chatsRef,where('user_id','==',user.uid),orderBy('created_at','desc'));var querySnapshot=yield getDocs(q);var processedChats=querySnapshot.docs.map(function(doc){return _objectSpread(_objectSpread({id:doc.id},doc.data()),{},{response:typeof doc.data().response==='string'?JSON.parse(doc.data().response):doc.data().response});});return{chats:processedChats.filter(function(chat){return!chat.is_archived;}),archivedChats:processedChats.filter(function(chat){return chat.is_archived;})};});function loadChats(){return _loadChats.apply(this,arguments);}return loadChats;}(),archiveChat:function(){var _archiveChat=_asyncToGenerator(function*(chatId,currentlyArchived){var chatRef=doc(db,'chats',chatId);yield updateDoc(chatRef,{is_archived:!currentlyArchived});});function archiveChat(_x,_x2){return _archiveChat.apply(this,arguments);}return archiveChat;}(),deleteChat:function(){var _deleteChat=_asyncToGenerator(function*(chatId){var chatRef=doc(db,'chats',chatId);yield deleteDoc(chatRef);});function deleteChat(_x3){return _deleteChat.apply(this,arguments);}return deleteChat;}(),createChat:function(){var _createChat=_asyncToGenerator(function*(question,response){var user=auth.currentUser;if(!user){throw new Error('No user found');}var chatsRef=collection(db,'chats');var chatData={user_id:user.uid,question:question,response:JSON.stringify(response),created_at:new Date().toISOString(),is_archived:false};var docRef=yield addDoc(chatsRef,chatData);return _objectSpread(_objectSpread({id:docRef.id},chatData),{},{response:response});});function createChat(_x4,_x5){return _createChat.apply(this,arguments);}return createChat;}(),signOut:function(){var _signOut=_asyncToGenerator(function*(){yield firebaseSignOut(auth);});function signOut(){return _signOut.apply(this,arguments);}return signOut;}()};","map":{"version":3,"names":["auth","db","collection","query","where","orderBy","getDocs","addDoc","updateDoc","deleteDoc","doc","signOut","firebaseSignOut","api","loadChats","_loadChats","_asyncToGenerator","user","currentUser","Error","chatsRef","q","uid","querySnapshot","processedChats","docs","map","_objectSpread","id","data","response","JSON","parse","chats","filter","chat","is_archived","archivedChats","apply","arguments","archiveChat","_archiveChat","chatId","currentlyArchived","chatRef","_x","_x2","deleteChat","_deleteChat","_x3","createChat","_createChat","question","chatData","user_id","stringify","created_at","Date","toISOString","docRef","_x4","_x5","_signOut"],"sources":["d:/CODING/random/12-13/bible_verse_app/frontend/lib/api.ts"],"sourcesContent":["import { auth, db } from './firebase';\nimport { collection, query, where, orderBy, getDocs, addDoc, updateDoc, deleteDoc, doc } from 'firebase/firestore';\nimport { signOut as firebaseSignOut } from 'firebase/auth';\n\nexport interface ChatResponse {\n  verse: string;\n  reference: string;\n  relevance: string;\n  explanation: string;\n}\n\nexport interface ChatItem {\n  id: string;\n  question: string;\n  response: ChatResponse;\n  created_at: string;\n  is_archived: boolean;\n}\n\nexport const api = {\n  // Chat operations\n  async loadChats(): Promise<{ chats: ChatItem[], archivedChats: ChatItem[] }> {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error('No user found');\n    }\n\n    const chatsRef = collection(db, 'chats');\n    const q = query(\n      chatsRef,\n      where('user_id', '==', user.uid),\n      orderBy('created_at', 'desc')\n    );\n\n    const querySnapshot = await getDocs(q);\n    const processedChats = querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data(),\n      response: typeof doc.data().response === 'string'\n        ? JSON.parse(doc.data().response)\n        : doc.data().response\n    })) as ChatItem[];\n\n    return {\n      chats: processedChats.filter(chat => !chat.is_archived),\n      archivedChats: processedChats.filter(chat => chat.is_archived),\n    };\n  },\n\n  async archiveChat(chatId: string, currentlyArchived: boolean): Promise<void> {\n    const chatRef = doc(db, 'chats', chatId);\n    await updateDoc(chatRef, {\n      is_archived: !currentlyArchived\n    });\n  },\n\n  async deleteChat(chatId: string): Promise<void> {\n    const chatRef = doc(db, 'chats', chatId);\n    await deleteDoc(chatRef);\n  },\n\n  async createChat(question: string, response: ChatResponse): Promise<ChatItem> {\n    const user = auth.currentUser;\n    if (!user) {\n      throw new Error('No user found');\n    }\n\n    const chatsRef = collection(db, 'chats');\n    const chatData = {\n      user_id: user.uid,\n      question,\n      response: JSON.stringify(response),\n      created_at: new Date().toISOString(),\n      is_archived: false\n    };\n\n    const docRef = await addDoc(chatsRef, chatData);\n    \n    return {\n      id: docRef.id,\n      ...chatData,\n      response\n    };\n  },\n\n  // Auth operations\n  async signOut(): Promise<void> {\n    await firebaseSignOut(auth);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}